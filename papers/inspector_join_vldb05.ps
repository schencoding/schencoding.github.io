%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: paper.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman CMSY8 CMMI8 CMSY7 CMSY10
%%+ Times-Italic Helvetica CMMI10 CMR10 CMR7 CMMI7 CMR8
%%+ Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique
%%+ Times-BoldItalic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -f paper.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.06.11:0007
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2001-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro was assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
% Revised 1997 Oct 1 by adding cwm  (used in boundary char TFM code)
% Revised 1998 Mar 1 by adding Unicode for Euro character
%
/TeXnANSIEncoding [
/.notdef % 0
/Euro % /Uni20AC 1
/.notdef % 2
/.notdef % 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 53 /five put
dup 61 /equal put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BFD4563ABA4F
D926227FAD2B2D4975835541FFB0CA8654F704B399CFBC46C30721F9DC3FA7FA
7196507B14AFC2D4CB46C2C91CA4E17E5CB05F40623E9C0CE38B0262B2CCE65E
4BE1326F3D0029B504E7F5A0052CDC692F7C1C479FE568C83DA5A5E7371113DE
04541DEE7FCE53875040E5341B0E947CF0FD55F1F6D97F025C9C51C131FFA91D
61DD3CC460122F54140CF02EC0BC8AADA195C76C63050525718026C084712245
04C9406F091C40FF9B435C5050DADD9B95C03B27112E3A22D738C671FAB2CE20
91058E12CD8926F7BBF2CCBBA0A1492757CE1135A9AC630B0B80A64A7FB9201D
2237253468304F9472AFB1FCAFC2071A2D51CE229AB5FBB8D54A630C608E527C
FAB8397DA748F428794C0FE31EBCA7D1B1CF39B49757919988A54700CC48B9BE
8717543F51B83D512CC026C121933EC008DD256AC2FA93A72D6817C3B0BEEEE1
4C8D5FE35F0212DC0E0BB8E920697C7A61F9528DD3B25CFD9E34337A272F8F93
4ACB306DA7DC2A8BEBD250E7375BE5131C1141262ACC2D12B99D13700F00DB2C
976F25D391FFAC7459E38B176586DC0F38A6C802A421EA974BB51ACC1A2DACDE
4CD622466FD0D193B318D710FCE7B0C26A05AC88375E0E32DBE56F38A8DFDD74
56E2FC86A53563A96FF86703F482EB4B60B24D8386BA9A98D1A70BFF0A3A1288
69AD847FDA74CB5CAA0505047BEB98338B11E23E0D000C854E113FCB239A2FFF
8BBDF79771B4E4125F0A9E81B4B554C1C7D723BAAF2E17FF1A17A99CEA04B5AB
6ADA3C52CA5C42A1AD53F5990A727B677209B6B4C7780DFAF5E723AE954D0E93
09359D5A427391D254D1E1059E0ED9A2821517717E9BB9CAF012771E8E6B074A
2D18419B5FF296E9638F0D373E40BDAF382EFD4D29DB07358A49CE12
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /slash put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC2B7473D4BEE78E00E265ADB7C0CEA8499FFD61EB3664747E10CDCD2
4C4CD8B6E1BF43E47F2C095B3AEBBF83DA83054E20DD03B85D9240595447BFC3
C78A3A1B96AD63DC9738603A2A6B44553BFDE018D6538D7D37BB98BAAEBE7287
336E81AFC2764ED0C485237D6875761D847CF5DCB199853C4E1FA1E99448435B
C24108BA622DC4DB1BB7A9C3EE70F59DE56B7398B55CAB0308C90C12F3FD51A0
F8A127615FC67782280982E9BAC9500D3E9AC365E4C385EF5EB3E671957ED6ED
82BB8D0625A81FE7377B3F601870E14951F7F0C0C7FF75A5F0C104F63974BFA6
C90E63FC41B10BD1191B7538D970E0636E4B38BC1E2C36D63721B7E5D30F7677
65F9275B2ED25DF0117BC01A8A824DF0AE01A001B67CD2362BB4AB3DAE0F8961
C12ED70A9B56071DBE965D3BDE90B513271ABD88C01C542E923C2158D40FC27B
C79B7B1D4137F76B2F2B296C6886E74115BC6A5FC4B4DD457D1A084EB11AE0D7
FDB460DAE6EA50078DB5064AEB8290ACEA2295DE8C2E057FE30BA90A89E423BA
0429BFABCE8036E3C17EB32C7B34BF4538B53A838CE12884E7B6F15F70BCF3E0
80B00917A18DBCF6DD4629FB4F04E42F2BF71F6732717AB80C6183074BB4C0D1
415C9F17BA81911F655E3A19619511BA1EE9F11071354583347BB5202850DB13
8B5ECCF5BF2A60A1ACB5C8BB744FEAE0B2AAF9A4D20702F0BB34F8C1888FFBBC
A47F78DCB96076BFAE4C89D7A6B888499CB0643D7C0BF44377CABC1B16806370
22D34B67B6AB639DA5406FB46E1E99A9B6E0170B0E0D93EE5F8E8A4BB90D5306
12F628C18995E9F4A7CBC23275CDC4AC27C1688960AFE5F096CE47E2B25A35C5
8B97D13720BE52EDB81B87C85EFB27DFBEFF8EDE8C5B15060C2E21C3FBDD0F6D
F22D8E72E40D71F743426AE28D28225818800450988E9E22F1F1ED8314648551
CF93FC0551C25E87865DC97C0F52652F0EBFBB248D11A610795BBEAD8903E92E
583B4CDF856C28823D868038AF55DC3339BE62B03AC183192C268466C1B3C1F4
2CF2C1AF3776078D3D19D0EB2160A6195A63A4F4F7049EB6414579B325C5D85A
BD9C09EB551F5117EA27950314449989C957FE6B0CC0F5C42C2A59A9F443177C
BE9FC806EBC868750D7682BD3DEC6196CBE2EDF98B03FFF7D0DD01AD57B0B3D9
79510FD06A3B4C661437CB72E79786210F6DE224E4C21760A8FB3B7CD9216045
BCB726958090406A1198AEC0F46874D60E6A6DFAE956FA9A36A97AE51FCCCF1F
7944260053908709561A3BC876B962216E2777E5568146324D829600245DA8A6
02C7A34C377E0E0B928601084BD6846DB6DDC613DE1E656428DCB71FA456F521
0DCBD3B0ACF1F89195B823716A59A8ED2ED0F61481014233C4FE9E3AA7118066
CBF62CF88691B1DFF10C058DF6D03FEF730CA01691E18B59D7FD3941E6CCFF44
17CB868F788742504AFDCD133BD398AB5A91063CF0E9BC0D4D7B2639532F50EB
635BE517138C2C47C0449078E82B705F02B6734256DE8676047100C71FFB32BE
F421A0C869EF4C2DF0CD47927B8CA274508E30F060B33CEF94AE98D6F62CD914
DF21C6EC7312925CFDE1CA6D1D682D7CAB786BCC7BB6F9909273AB875E40099A
C5659B91BF5B0E84C50DD8F13753350285B9109E40D870712E5DC0C691B0E669
DF5C94D9493572A005F6EA458E919C60B915D14E878E76E224B6730D59F7E02F
F4C4E0EE5E76A4AA96854B6BEC20E21FB6B2D76372F5344EA9C5348D7DD6A20B
1778B52D2B252D3F15C7FD86ED96F7536B747AF58602422C6F2025E27133A2A2
626679B4891F839AF774429E79FAE90EE441DEAFEEE936BA901816D9A3AEDD28
7BE1324B73575BD1E9BDF8F6CC562CFAD0B801038D95F1A872FFFB5AB188B871
0ED5FA96E6E3C95E3AFFC7CDA7130CC9F248D6358E685FFC8183DC5DE83AA8C7
625F26D38C8569159937A699EC005CC19AB7844B2E965D55B747F1A5079F6BA6
5B991E482C3BE08C046F76256293AADF53AD258F692D40BEC68C9E794BCD8EC1
F7DEAA88961DBA06D9E887849409D6C127C9746059D060F97370C77154CEDF9C
99A9E0CBCFC891336621CAA6A2926986CF837CED44A5F25E2C502B795F259B68
E6B4B548A0831493314020F547CD75D4E69CF5036DC3EB7BA8913A59E9DC4A75
1DB5C052B38CCB01AA922820B18A0821EFE017B74D50081D5F306D0C16E36439
27EBE76634A07EA3C1FACA0CFCDD8A1D6868D3A6566C65A86B5595C21417786C
27D77650A0B2092AEA67CE5B29F5C2160EFC61EB2820C44B21F43982BE58A586
7E86B1BA52F26E2B42B0E9D2AFDCFCEDEE6C545ADC4239422374838429A45092
D51455332365B3BB15827A39A9A7B808F1BB2A7FCCC278F5F8BF253B9FB50B98
3FA55170FC7517E20A9441CCA1F1424E55D8D8F0FF28C6FA477974F1C029E141
14DAF16376B83DCECEA8B176F9114C90EAC6B781EACA976200B109755D869F54
62083A4F93F9165DDF4F7F43D5DD9CBE47EAD1DC0AA36798A5B2A15EDC40016C
CD14DCBDF88FDEC28D31FBC2AB62D3F9377C3FB6B480E10EF562137AC50DBD7E
41F3B978D4E700033D1A69F42C56416CBA8186D7F3FD34F9151D84F5A3050A80
19D7FDEC0C2EA57363E17A0787EC620F83720F80D9D66DB8D7D3A5C33873E341
039258BB16AD68ADFD499FC376DFB040406C3DB52D1DF1E77D34F3376286D0ED
29BE8E8A79DAE342A3A18A46CFD150BB73FC70AD40A172EC896AE598CDC0E246
27B8CEC49C21213794EFFA178727B8790F7CED10E70F07D57E547A16D3F6DFC9
A21225D344FB37493A862C7433EC4152579B4C4A566AF5F12CE1B7D716C207FE
63CFF754DF881FB42C55788353DB624F6AD37F23D685638BB6BC4AB2A9E2945D
619EAE91E5AB2A15CFCB7031D18DBDC2F7F146C63FE549B8EA161B60BEAD9AF4
52A56B5D7AD4D8AC7D8B35FBE1CB83A8DC038B859553C0756E4501FEDDE581F9
279D177ABC98B0758565FD95D93ED5273707D80B1787AEDB366BC48DFC692472
B1270C7EEBC9D5E0A7BE6007FD07E4B0B0F4112E32AD26449E0C2B5343707241
545394698F01D92B14466B1590F545878B5BB511FC45BAEFF808B2A54FE5AC14
4EAAD2DC10B7F4DB33CCF687C596DF640984F971989AB30C14980E271847D021
F5844C287A50A2CD0ECE680C755E2B29F5064B8496FD2A8DD3C14ED95C8FEE93
2FAAB513AC157D1B26E5CB4249A86AA6BB41F30488C56EA1337BFDFF66918C38
0EE222FB0CB158E3F3051873816C9D66380507CAF5B31D484B1451F7F0A8DF03
94E7927196C4573F5BD43C9773CBF3379D7F1FC1195A38FD9D9A2AEC84501038
A444DA2643D99F15C1297AEC828EC1EF8025817ED8D39A14B0E833DC43A30575
52C45F0243DF58ABCB0B3E03ECE131DA6AE2C782477F86AC24E0F0ED9813E550
0B3BFD2F71C522368E1B5B85B2CEE83299BD4CF40925ABAC4FF1E31FF3F6AFB0
DC7DFBD8AEDA09E5670D8FB760E83F4D45553768831EF095F1916294B848F29E
F2AF3FE03503C5AFE61ED172AFD00FA9EC07F9874CB4C59E195FD74851E7A165
8CD7792C40CCDF1687CECC949C1465D737A3C9DFF530F93CA598E3A20A7C197F
ED92299D37BE56CD5E1AB50C65EAE7382F6FCB5119104491EB2929833E113E62
9F0CE46BE1ACCC92531B43C1E8259B7B405DDE83423796DBF35E64FA45EA25A0
6B9EA86653332FA58D466A180BC23291DCADB2B3AAD0BCE07295BA1CD4F8EBF0
8428B5EB3FF174DF2C99DBC6048E10C191C5F3B4F63F734D02A5CB6966307D71
602C4108326A5452681F078F7F261970056CBDD08C121E6888948723D1240C29
F8C2EEC752F63FAE33828553F539B262F5AF561B26A5F306F9F78FF94BDAF2AA
28FB563408A6B59B131240F4CF08C7BD5C7F0CF8B9DFC6EF7D37D9391EBF9777
11A66C57FCC8181973446C07D032006273E3DBAF41F353654AAF445AFC0EA1C6
DFCBAE11E16F85205F034887C25119DD18426150135CCE251406695544ABDFC6
BB7B8FFA755303C2BF75E8222EE57480A8411FFAAE41E9B7262D82D2366E1C3E
85BF85DD701108AD792B07EAAA6FA70831C00ED720029A3E8C653F1D3BC81587
5EE37C217563F2A9F50A372A8468696F4B82D68002BD2FF24488197C7C731361
C287F2993F71D30812AAFF725D2B859629A1776AA37DA7E33DA068BD9C55A342
2F15FEF78D78FCAAB1924B437A548BA33B51F47B5EB031443B093E0F9FD9758C
59FC1ABEDA7E65D02537D85D89857A1F9A48BA6393BE9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4B067A46F8EE
2AFACDE591ADF7304939394F37018327C1B4E53C8D6C39E9B246C2D5FC828A32
73B84253139F2C6B481F04AF58F214F040517073839F9755E4CD617458F69780
588263E8AE4F31263902D7D3FD4678C62FD46B635D3C58A7889BAE8B1A90BC93
3F40E07284B2810F1341749474A7B6739A81D32D10896D255229BA209327549E
94EECC4118BC2FCAF2EF08F609197A8BAEC51CCD340D5F0620A3CB41964D487D
DDFD0E60882A5D836480F5C04F1911A3DCE205724503F9F2C1C682DDB75E0D93
583387BA5A73FBC7D5D1CB54A63CA5EEF72DAB92D71E04F1D1031290976C570C
AC1FFB336E0A87CE1654CC92C45E080A4119002172D426E1F39BA3E99B9A0E18
27FE4AD80A35AA2AAF0D103562DEAF06CC3B171AFC01519A03283894089EDDC4
AE83975075A889F8C0EE0F3A73A8F3E6583AE90FDC35C7FFB1F945AD9C933E6B
CAB0FDC0AFC46CEB04B3B76987DD3F6B931D1D2682EFA7B94CC005546E51D15B
634876B8AF9B5CF419927BD58A0D2368F17D31EBBCDD7EF548D586EA659544FA
FF1891098A31658D4793DCC282EC23BCE22130F56188BF3BC9E15A8C6D053EEE
D43B47C8CF84670F3925D2FB69CA3C2B533ECF1E9D317945394AB4D1AFE3EA5E
28F779BF285604CD654CA4086466CD51181548A8DEC5B9F7204C199BD727B4E7
9DAD816BCBA58C7FEC215FD697F16604282BA4F7CB7C5973FB57C00041E95DEC
76BB77C74FF4301F3BB2AA343385DCFA7C5533DD667687F6E6326E7A523265A9
D7819FF6E8694D0DB5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3A38ED682C65299D6C
67201AC4BEC92930ED59A43AFA43F24F6ACBEA592A03841835D631F03C2C1A78
D554F14F748CFE52EE1255995118829A77F388B119B21C90975F74DE5E4A6DA9
C531C14FDA14B4AA1EC720F6CE0342AD2CFE20771E4F80ECEB0ACA2CF89E2280
6BA7F408F14F24DEEFB988141457533E4822D51A43231D49BE8B184483530CDF
6B37AE44174A99A2367CDFA06D801B1588A55CD8FBC5B1A6903110F1BC42EC5F
FCCE6840E8ADC084E63A7C5C45FE6953D18AD1C2573314AF568A69608A9B3825
8DDD825D7E8041DCDA231DFB8E6ABD97BCDCA95500E72B2A64F2F989A6D7AD7C
875D0E0E051ACBD893E30EA56145D44F2DC60EA9D0F7D62021E05D2624B00B93
92171DBF9964BBEC03013F324BD4B1E3053CEED520CD0E02D3BD8695B3C1D422
9FD5F78A6F1810C4440110E7CF77EF9E89E7CFD5C7E6C184E7BB76320ACD3E59
118F1F7381C2FBB0DFC4B2D7805435133C2526B1EBFC75F605FC422B56D69EB9
6663FECF5BD529D9E7C7EBD598A6CF895F5681980B1264D64A0173A8D91A0958
F19E3F96E85F79A17E0A525316943C6E16ACD16D44AD1BCF595141C67473043E
E5A782156549D25984703065B038D3F16758917B734286F02E496E8B60B1F752
EC57DB7E62A728F1F49DCD6492C65DFAC1C4258BB7D28B339467FA0A7F097F61
751B91DCDA1170FE1A150A4A0011EE898D9D227BE62FCCAC5C2B86121EBDCD47
04D62B806F4782C8D608698A04F2159DD4E3DB0B0BF5C845F007E798AF54C3E4
3C5DFB1B9F19728C1E37B23009882F7C97EA25CE77D1BD54B63B43C0776FAE3D
0AEA2AC79738CA0ADAB61FDDF07647885BCC2E9E05B4722D6D95DDB5E81FB023
AC19B9C4CC00500995B2C01D58CC2A460286B2DADF9FAD6A82885993061A4304
5D17EA08CDE7C3E3A80F4BA77F8F4E93E6872708FE1F2A7FDAAD947BFF26CE5E
77459F07D33A707DB999678220896A705EDD437CBB2450CA6745FB3A2E244D1C
7912C0073EF9D5AE828E373B7CEEF99787281C94425E7B334CE17A041868F473
0674DDEFC92949287722635C7F41BC00C67E102096A771E6624FCA2A2B80B050
8D5D656FD4792F89206D513344EBE5E924BB3259ECE0ACD7FA59E1A3CC5D23E5
775FEBBC47CF751F54931140C9435E127660254BDD909A932CD4A9320D0EFB10
1AA668D511DD158B63314DDFCCC4B8AD507411FAA3D77CD4FFE0B696806B8339
38FDE5E0A76320F9A096399EAF6D5B51D810BD1301F166F5D4F581FDC5538C37
4EA8A401414ADACA2AD613E7CA0853EAFB620B34F06816709AA57C713DA67354
E0C36BCABE6A0FB6F6FBDB208F880EE381BA89C8FB326B0BC9D863D73C75B071
11D4203E7F7D4D3E64214A52397F1AF759D8D1A85490C25429886588473B83F5
06E9479B2A19C3872667B36612BB776C4908ED58CA2337790D70D864E05E11F8
B0C29E0AE0D0F34B3E0437993DDF91A9746E078E6991AAE5167EB32F7CFAFA3B
04CE08A02C461BE289FA6BE4610894FE6F42E791E0C2F2B6C910BFECA3911925
6D5EA848F0BBB120E0B6912EBA8069100ACC664DC817AC5AC8FE861F069542B0
F76F4FAA6C929A1B94C7D2B0C8759A115C02627F28CC78277260F8E93B24C0B7
B0FFBF9FDAC9AB8F147851998374C8AE21CB4BF9C27EA00D4B28518EA9538B43
AF1EE9CDC0175E6BCCE6290F75D60E20DB1203997D3D5DDBCC60FF381392EE35
E1935E0BDB7B70BD37AA5269EAE8E2E656A746F36F520BD3B9CF2B26BABC71A1
C2F9CD2E6EF4351D2BE530B61981404A398D9A0C5FF4FF7D520B1E1FEDCC1D44
D50C4D6E0324C6A966E1E6C25EF44518584E6A1AC22488D018D81E472BF279E9
D6D6AE3C6F1078A4FC33B49BF3C7AC54CC7B2840B4CE7D8BCFEBE45C3A55A6A6
5D87AD57BCEA3B3160706AFE763631B379FA6ADAAFF33A50BC2F01BAB48E91D5
834F06FFCA168671C83F92186F04DEE85ACA39A19F877B2C24B9C5AB066A2340
AA317E8578D2213C867C6794500EB7ABFA94B636C8012B106CDF2A43E514E1BE
B0B5E43811BA2E7F03F259D63333CE39BB1FDB1775F704A99CCAA42FE73BECB7
6A6F0C1A9C0DE55F8D34614AB08C5EAABBD1927B6ECF8DB745A250FD1CEC7EBF
CDE783C758F182453F831B619D2AE3B0D9504E2DD4A70305C440604468F14EA0
5641E26209BD85E9D91D5F829BC3132C8ECF6878BE53B6530E2739F26A8F93B1
82DE7E13774F16EFC2A8FD5342C096FBE2FF9455ACDD7658ECFBE39117D6B456
2391E84E15D19C0D0A49B0B27601B79DDA908AB62B1C8194FA8132A65AB1B4E2
2A57F911E0E16DF5922BA8097D19E7913704268C74518B7EFE6478D235651163
5846077467F0AEE2F2147712978BCC509D35760DED3D5B906D5134781387BF8A
9AB6E970736A9DCF8007D1BAA0D7ECB31A7E87CB150D108802C89914E80195AB
3F56990DDDD9853DCFAF3881561217ECB5091714D3C3911A741FE8ACEEE8716E
2CD0C9A879045DF18DDEE0556F1B1D9701733C6BD94C25391F287DD8D1382009
1EF1549A017A9A93BDB7F63E8E4371A5A1423181A669161DE379E538A8FD9BB9
E94FC37829761D6E4927481314822CF4C6B23D84C2B3AC837370FE0233B351C2
7827756E87E2BC634E9B73B9D04AEAF58B2341195A14E9580D504A57DA13CF8F
C6A03A9D906F7C496AA66BA4605F1AF60CFB7FB4A1590A0B0951CF3888B5F6B5
4D801D568FA4A998F3AC672F7EDF1C65881438B98F986108B28DEF42166C1B42
83F729EF9BA96FC65B0EE0E3E96DA5D183FD4F64773CCC8612FA071BED8F529F
B015370D4F76460209CBEF3164B6D12A7641230001030968ED7A59E83B90F374
C3A0017A2D6985F50732D4C7A1A0F207789D78488AD917B2C384BCB9D057EAC4
C014F21C5DC462617E7A8EE11BC155A48BC07B8028833E63B4EC831A63FF74DB
2AD4476D10A9C3F3CE5EE8F8C6FC1628179DF7B5CA369FFFE053BC669398B6B3
C2BE194B3225B775D5CCC7396394FD7FD9CE22CA7E06C038EAB3203D4DE282A8
B7FD2C34812504C0A93A5F60BF4F2285B0332BDDB3F45C45468DF6F42445467C
659D6B1952DDF589C5F70375CC9B3459CA20F0A56496BFA929C02F91526589C9
5691C48708935AB12FC492BB328259F4D4F86F684197CC961E1F33E6ECDB3C62
B233B510EB6F92798638D552B1700D21F3FB05E54450F224EA9053C58A06441F
CD91F4A13D3A285FF9994ADD43540F5B104A152396ADF8F9BD9E078B749D754E
4D2004C95010E1F262022C786F6DFBD482CDF5DD8432DFB26AA218768728890E
5ACF52F70FD5F3170ED17CE42330F9DFA5FFA745E3F97E6363DB1D04C80DE83F
9E35E7F3DB260072AF56AF9AED70E3731C0FF029FA94A7E7FCCCF6414F9D42E3
8992318F8E6B29BF3FAD476F61E08464A2B34BCE84B5A2FE5EA43CFE7F9D4D05
842D896D17F4F7B3737A62400F2A402488E4DAB5D8F729F637780BD7A89855B8
45ACA596EC195A95B9CEC2AE7B965C3A88F302A07D3605B59EB7FFC913A3CCA8
D8DA866B6373C217AA4F759B564FBD17715743FEE30AF38B91946BBC1B2C3FA4
7347FDBF83A837ED953FC5E897E9CBBED8F0E37B0438952CFA5493AA8FF41252
0BBE3216BB7181F5FD1EAFE2D076C7B19E8D4EBD15BBF337468C68A7E03350F3
5DCD6419D441E635FFA7C7CAB14BC9035533CFFEC970AACAEEFEE851AD0315D4
E05B873D44B47938431F2BD38F0AFD0169D27BD8D98BA721C878B793F1167B39
C86A6B866A5C3C55163995FBB7C4BA6714D27C29978A8CE5C2383DE3002DB95C
C90A985314FB98CCD0A64B9DFAE6A5295E8639473144736525F089D1B5FF4A27
0A2D96EFFC09E7DA49F6589DE405CC0F6E090E4AD5F22FA923E3A1028627EBF4
522256DE1C1E5AC0CEA4F974384A457CE3004EC41EF808746E9BAFE2E0F35D22
EC3ABD5F5BC14A696024939B7749A02799B90B9153A8B7110F19E59CBFA1926F
98712B856966EC6A97AA2CF707594B6E722CE6FB9664228542CAC9BA8DDD85AD

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 67 /C put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667769155BF20F7CE36976DCDAB9F7D2D47C7F0C63DC078204C1BC34F4
5B230623A9279AC22D20D5F62965CC48E7C1BC8F0DE68218DDED1479C62C7D19
3A4B5954098E3E1E714C4C99BAAA2D7006576832B8F7ED1EFEB533059AE156F1
50AD34E85C4F40C876AEBC418E6AC65FAAC16B3BBB4D005B31F58BD03143ABA4
4FD678B5D71B070C9D2DE243B157A0F0B9CED4F4F7011AE8AB7B5AAE51BB5927
36BE297403F5A2ABD59A3470BC9246232BF493A6D5D5AD94FB644E8DCF486BE5
A5FC120D9015F8D358D704F623EC0868EF414AC361E255D22EA3119D8DCAFE70
7DCE3CD66801400080283FC65D3E64B63F9D5E292CCE2CC644465B1E9857B645
840BC79B91A5BF62F1DC66AB9000C37671920AD72351055D5D2ADBD600FB8EE9
EEC6EDB174BFA23C59B651A5871F89E1D3DED8DEFD467BA3FA5F2D9A75A35C69
D93B8C4B2A41BD6DEFBE47DA4713C1BEBBE789DD935FA8C6289D6C9BABC41D33
5B273DE1D5ABE3C0691E411F85BFCAE719ED9FCE825568DF0867BB2436FEC727
1B862DE39069E1398E382AAFE61B0BDD857BD3CC2F0A7A019925CAF263CE5206
854A509D3C1A070909551B788CCDF62411C95B2D6A2D0A906628984EFBB8897E
6A67A7A18F895B49A6D64ABB59DD873D827700242AA0A52BB1EAE38CF0508F70
F4FA2162CF2C2AF9FE584D8483AA66E5FE56DC40845E5C531A5D4221271D94DC
6A88772AAE505E49098232BDD47501855555DC6B708FD85A5011DA6FB5700BB5
7583FF3D26338C6D514AAFF169665D67CDC381D336D6DFA0BBE771A9A5647764
EB3093BA1DFF99C7F7BD1C46E0364C9043404C02A918AEF89B7E7BBA6B9FA7C6
322126D30AFC9DB8969B5A48AAE4A882100D96C1283CB0A60F9477335B851AD1
CDC92C38DB7B775F7B05733AB4993FF38B5E36B62036F033777712C03CB6C1E5
24A761B25FF1549EA479781CFA370DE096FF2C0CBBB42F89647D03508DDD9F84
B3ACD1FE0263EC7459BB56AD255428B24B42695427D6074F43DAB1EC937454FD
04607E7568FE7B029EF1D531579E76F2E96E11925AE61B46A7AC6BD5538D0A7A
CBE9D9A4B5260F640A4BCA8BC0A9384BBDBB956ADAD4A7A51AE4836481FD0B37
56387DB46927DCD01AB22307225373E1CD55AB2019FA258AC7EA6587AE5B230C
98A5B81BD1F476677BC3EBD84004DCE3195F11DC8767D6D477EDE9D5CCDB7B16
F0CF842AE26A8AEABF7610953FD72611A9345F6A5360C25706840CEEED6C60F6
F302D8C536E1DD5A4D2FD1FF3201B24FD9C5817AD590234BEA3B0BFBEB32E318
B40464745182FB0E1224FDC5A0AB6B7A25F607DAE391170AB2405CF15C63E4A1
F9A08DFCCFF82A26CB36752AABA8CC18A4AD6E4066BE26AD43EEFD461112D204
299B21C7D4E8AE2E59D3A3C5535D5AB6566B2B7AB74106977B7667199CA6A014
E9A4860CC68146BC4CB22B75F7A195FBA9B1F1BC1C91E8E81B1FE6E5B397EAC7
F0737056F95C8A7563918C1962A2D81384882FD09B98E2BBAAE009EFFF1F0C71
4D9D1197BADDE4435A787939113C0079FBD2A3AC51B9CAE12AE50A5BA94711BF
93D6A5B572D58C7633E59E8205963F919613D42A3C944A291EBD6CFF3C9DB2F7
C1E9830F0F25E82A9356CEC9626DAFF701F67CFF7325F542F95D07D049E71F8E
19A9228071E4B86B8E929FDB3D4A834D31D132904A5826C046A8821915852E63
E24703FECCEA91CEC3CE0AD91392A5EDCD633D39B7FAF669618B082ED4117934
BA6678F8C84D3DD96E733715CDC8648E90E2967F48AD8AC6461E2E8F2E0BD948
F1F8F9153E520389354833129FEAE79AE06BBF880AB2A4E0E17A19598834C0CD
CACC643FA7F9B5E16EFE2247D1A695E9DD39E78F5FAECB14E391DE31E3CA0AEA
0BD0935BF86651BDD353C3E29ECF9A86EC5DD4EA22D2A0241732C675E07C8DBD
C6646A076AE7D4984BF164316C452D60FB28BDAB2B8A93AAD85A6E0F23BDEB07
BE0896525C1F3A5A3077D0C3D76065142DA48582AFA437D2CB1E3DBD1838777A
21E831C9835ABA72623477D3576C59C118775442907286C83F75F8FCF602ECC4
06B44D94FF0FD7F6C45DC4B72650AF9E94E09F3960041F52D9EB613CD67725CB
D0D2F4F7F21FE89610F978FE40176C4097EDBB7F76F920A7DDD287F2F0484CEB
BFFAD38ECF3715936EB1588E5D34B5D72CBA40936BCC69377A17305D0E1560BC
4FBB11231A801E433579C6E536CD55328CCD382A967118550CC4048242C93F13
FEE1F2763F02412167E10452E162E67A56A47049006B5280F4367C7841E3ABB3
1C3C975D9741946F18E5A8BEA3AC4DCD9A15D6DC96ABDB86C8BA1BE5E55F8B96
1F94AB4C50505BD9AA0A4EAF21420DED6066A2E46E25EAFCEAD258E15353878B
8B4F902428761C9EF4B198B1090D9EEC1BADC849635185DB4B8EC7E09A947021
111C34E6F30236C91C686DFD4AB35786298CB1B4D57065A673F2F12E5D1B5590
2328C519A635622A7E64B5B2AE8B64D1F49D0CA8A2B72AA837E194FCB7EB98E4
547B2C08667555338854B1513FE3AA64026AE068B9572F999BE2C98612C848D4
43FC17DCF0EA963325F31327F9DD2EB20B155A534CC412BD7EDF669DD5FF82EE
239A3D31770E63BAE2C6EEED264C7732C5B2EE51A39BE44DAD7BCC957C185D13
A5127EDAB200F953151CE886A3C410FDF3A39544038F300E999B7CDFB4026DAA
D0ED1AE8D1512F3DDA6CDFFBC67E7EE873AC8C9A812023A7D617FAC4AFE0C28C
48A736925B5AE7FCFDFEA9D65436839339FEDCF4005F3ADCC66DEDDE087103C2
4013983B7B69D85E5970E8C4585AD9AB22E9EF7E05A56DB1DF762C2090298DE4
B89AA53C15F7884C54EAE6EED61190193615F8692793A4051AB02D324717FCBC
9D154F54E64C16F7AC8490E238FC995886166CC6E9D8D6462417640C2CDA70C8
474E420474D0310727F4F683A899D31C04BF6CE2FE5E1E5A0513F594AF42EE20
FD43D33CDAB5C44D3B3C926507548B547B8CD0A6A0D6CBD4211FBA1384A67E76
DEDA0A35DF007FC42C8466B8AC2E33D57812497ED680EDC918ABBAF56DC3577B
0FB62C4C904D093981F308946919B9FA47620008DA5286BC274D36534FA2DD9D
5E4B3C6B62296F0BE61AB229AF5A05EE38ECA1C519A3515BA095E9A919F0C68A
C5B175EA265858513BE24541BADCD3D936BDD859FA64303AA66C92B49B7D3C2B
9C2736929328E2DC7878BB816CC6A0C7B3DB6DFE1A551461BC9CE46E4F1B6CC6
79ECE0DE526BE6594066224D224BEF4AB20920584515958C976E84445D24C977
D49949C38A25375F089F7E94295A8A608FD014D602E60FA12A9BE75197EAE5CE
1D2E41D3C555904208ABCE3DD2D9014A2D9C8F75B7970C258E48C3D76875D27D
EAA55449AB52B088B66838081178B57BACC471F678E7497FC9CBE0F61CE13F59
8E76715736DABBCCE32263691DA8A10D72A0DF1C9E1A1C2653739E3E9C4DF3DB
C11967B876647826D6D5D5C1B85881F23B999FB8A2FBAFE250803070F3CB6B43
E1207B7B3F44BA894894B76B82CAFB823F7D4F4DF9B8504492FA3D61FDF1690B
768BC3EEA745F73794A00321835598032A40100F713843DA053F4CC0DCDED9B2
620535D0D9BCE1604E5BA63BD1CE62C41344A8D353077A5A0A9E03EE28B79E2E
7A5DE5F973CFCEEA1E9A2C7DE6BD955D02CE0D2DD016CAF0DC9F31C39CD952ED
959E50E3490D05D492AAB692FD712493E6831EE88C1E0B1885BDCBA6856CC185
A0B7F8F3D0E64A34384177971DF907F49F1421F8453F2024D01E1CF9D69951C7
EBADFD5B0A94CDB27FFC1612C26632FE9AF017552C714D14B7FC7E69939E0F5E
3BA3E478D2DA8E14BD5282D96D153EAE840148480B77AB5565661A7208890602
F58690963F321FB938BF535BE513548C16E02243543D9C1724FFB0C6E0AC60C7
32A1A29F4BD72CA9609853C988DAE18CBBB1E0A5055F189D1ABF2975281D2B16
60E5554DEA6BD5FCFDC6A8D44558F2DD6F66A825F04DFA0070E742CA49A02ADF
AB3A998131A871A9A3841D8DDD9FB63A2AF39F57B956C9A7596A4F7336AEE9BC
2A520DC2087B8911D7F3FE055D9E55FB789E45F1AD5DCF101095D7C047DC4F41
1334F94051850B5E6E99F6B4B0806EFF26E913EB59A8D6F28A50CA90DF73EEB2
8F832B93273C240A74A58FC12087E705DAF6B0B9C62FEE174254D6F05D6CF527
5169D93950E507248292DF02FED834ADF1C07B08F6FD171F15725349956CFE97
73FDBADF1BB1300E102A23F14458BEB291E6CC55D02B2C2DF5B93AFD563C0398
05C5D40291FB248D4A9D3A44C6B29D266EB035A514D4B51D8811C21A91C54EAF
D26CE7C431F4CEEFF49532946036535D2470D72C3ADEF1BE2EAC9E58C85EE5DF
D7942D1826FAA09C19B910D112BB4000723B59D62D7E8B2F02E89751400F2474
F301F7BF03BE7C0641C908CBC0D32837749F9359B9DD37A248C2CFA5D107AA3D
C07C7EDBAF36537418A01BBBA379C6D71CFD9441844B562DB27FD6DB4D1D2971
382993CCB5B97C80A70D5224C5AE036E3495B8AB04447533A3468E4A7C4A6FA9
B3DF8704EB5F3D05921316E18559A99897C99A308C21587351B5396FDE98CA4E
BFE50A08BFC1FDB6BA8353A27FDD326D3B4852CB74A861BB5F9DF3082C97A4E4
99BFC86CAB6DD2FEE04D97C5846167E4B2F86396E8D01101447353CDBF30AE53
391382E5C572827FD4AA726085DC9928BFB43BB7396100E80F5394017B621ED9
6F4958FEDE1A124C42560B72ED8396D4097608594C91E9C80D346B44893623EF
040C4901876833A546FCAA2FB0BC55973F20439104E62B2FB40648D3E1D1C690
67EE9EACEE679E4CD7D37508E13E9C3DB77156726BA759EF14724EFA66F757ED
B910C951F4D7CA9E3919EE7AD45CB39E6E09664A538EEFBA0160F85BE73F461F
0502B7D5B71ACE57E60CAB749C28240C70BC061D810C83171E9E0581E8DBF0BF
DFE35E5C2FCCD1A7FB15CB11AC160F57A844E5ABA1488C3F8792E4A44513BE69
B6A05BE752E8E72D81B17079DA6057F3F5F1C6AF8593E92DFEBB5E8D793B646C
FCEA7B4CA8793F57D35DCDE66B4C92922DB663F0F9C7F126C2B9367051793EAD
7B6150B63B552C659E6AFF300408BD4B2055008D280D2EBA83BE6E9524AC5D55
CDA7CD931102CEF2CFE3721334743D737218908B69CD59B07A0A26F28AC6ACAC
5A6FC08E6FE6B9DC30B3CC8378D0BDB15D95DC0358EE80ECA90F2FC56D5B5CAF
7FB6F93DBFEB9882D281A3D57B4EA0085B37C72FC4EC79C2D405E859DA246D32
3B9ED20850EC2E63A84AF93B4D593065DCDFF286679EE44A637E058A196C0B02
6071D8E09C516091B3F5FC20885DA69E7C0EF5C6A8E5F197A0D5A8CF86D062A0
1BF15D8A9F83375018A585BDC288AE1402139C33292AA70177CE74435145AD54
C7D56588D4DE749EC49F315B4FD937441B3D28031F0F85D0ABF00165F2DF1877
954519DBB254E040D60A6FAC086C33CE35AB1ECBDC291F03934151556847AA2D
9EED6AF49CD0608C6806F540BCF664D404FBA35F7D1978F31AE3983DE9CC8FB1
E32316E55229DF54CBE5F1231C3E52382052689F515BEF5B8E145A7BC0B619FB
F85862C376E062E20067A8F0A1BE34C1ABE86F5F7DEF62DA9DC31F42A480C4C7
B2E09EE7DE48E3F814F729B8E4352708AA296319EE08D7DE5D3EF44964F2619C
757613E3B0C768DD06D7153DF39EFD387A3791C21716D0BAF0406C9F5F7DBF53
C277A5106EEEB9D3A2F6101DC9E3BDAB7E6B11A370B7C31B8E593A9BC1568DAB
0C61EE99B68FF4FB5148A18E4A450FC704516AB657D22910F020967A03D5B980
327E0C9E2208F710100A98F575C107AA9FE0BE28A7EE523601E000B6B092097E
305327CE679EDAEF73C769D2828523692EF941CD10F5825F7798FA5B80CA7AF5
1A9DCDB8BEE120183ECCF1948CC733F6D1A5DADA66D6A2B18C2251A87496AC0A
869A24B63CEA1994CECB5F999F7CE25C28F2F9F98BAA0FF5084C44B4EACB399B
761D4D66E7ECD4C06EB29012CDB4FADDAE46642A4099A6607E71816CE8EB2E3C
D349772ECB119BDBA58BB15324EAD70FBF42A2F3FB2CBAD3FF570B12243E4109
459AA2997DFB23219C0D5E34A5D5EF8B14EEFA5BA6C897D45D894BB0D394ABC5
78DA7957210C93F2E7089B144ACCA0C759CAF6887684507AC6FF6A6B6B3421C1
E6FD2E357E983C61B91AC667495978136A7894D8FEEC5CF5585DCE208AB9FD7E
DFDBE1AADD411F1A5505039F2239283A246D8A36EFFA6EFA36E1C45E7B731C4E
C4127FA40A6DFF2E89EB7A09CC384DEB680D3201DB847BA6F4A77D3C8E99372F
92DE5D82A02D751237E93F1D97E2D6F0ECD5DDFD5D0CDCCF0E84CF0AC1B68402
9C4DA5B0F1022A36742468532AEA36A8B0EABDE44147D93E5E14F277741A4B6B
FF64CD72332E3AE874E36FC41E29922AC1A0BB0C2E68A7EC0B2BF7C0834B1B3E
F88DB43F15FCA1BEFBEFDE099F98D4820A8C0C39AC28BF2B413D62519046DAF3
1AE80333E243ADDD628D91AE42F90D1E451D301DDADB8E37C48ADDD3359A1BCE
334534013822C4B20AC1DB8B75FF9B8BE716C9132F592C9E3B28DA78AF5A837E
E1B7FA7A358667AF963C50DCCEA70C798935F4C8AE091B8AF4B969669332B1A7
AB624BE2580D5DD21A8FA0361C7E576C3A4918BBB412CFC89054F6504EF6688E
5EEB5CA8510DCA895E78A688E35080B6DF18903DA0D2CFE404F8AB29E4696789
4DD75CDA26F78C244226492ABFEB769F2F7A194E0665D720BA5B5C8164FB6CCB
537259FD42AD127C8BCF2DC04B88B4F44299AFF80ED5AF62C033311AA914F966
46312BCD2279ECB0363A17DE4B15D7EFA3CE4C949A4EF497B1B5C2C3F69890FA
CB85100BAFB7F4C6A9C0858B46E2B90658C41362362C7C9695E025648CB3EAA0
61FE66692F3EE28E63FE0B0F8C6071C64FA9BA06971E98349029D9951C6B43DD
6D0E3B6EF894905D8F39CCC434A2E4822B00E8CE352C84C7CFF420D95F55C7DA
9E7D22C4FC0909DF73E366ECCEE3F2B23CE23D0ED5140716CBB22504D9C9AE9F
181444198C7FB682C9F15A6D5B48964D79BCA1C41459C1760F14A7E84E6760B8
514A37CCE262C14BD76E2D19C290BB0390817D0BC0AD6D28A9E89055B44FEDED
947F497349DCED041D40C12E21158E4C1B6EA85C74C51B401809078754F69C71
CBDACCE97073A860965DA6D46500C3465E19D36401F23A531C10EE51F0D3776E
7261BB7878B6399EADC449E2F97FD32B8D714B874C21E4350FAB06748892B28C
7C235FA15E2975D32DFE07368513BA39ADEDE47C81ACEDD3B6939D10419D0AEB
0FAAB312CA42F83024EDD914C162A14FB84CFAD66536ED7D31B75A8C3D4C29B3
8E5464A7530D488F33AC683F1D1EB39E174FE3B8D40DE2BCEE4AEB70C9F86DE1
8A707CF585B948CB9D65B9F461B2ED6A76A7A41CE68D377F5310A748AAFD8AE0
F8B976B9885B2F99FD0C8FC57C992FB19A482D4D98965B41FFE3CCC1C858D73C
8CC9486F0DA0F7FE44790A57EFAF4DDD8D29235D7C7BECFC1B24963F20FF6B51
CDD5F3A42B88DD8AA2922BE9815B7FA045EE84C7811D5218BE338E882A3AC385
339F0F5AEBFB22A52C24D8B78547C7A849A4906C116AB3106464F9F3B752122C
DF6DBB41A81667E52FFD1EDF7FEFC6A5673FD1EC3925945C14D0766EAE396C72
36EAF3185B585CCB3A0D23223B3CCA6C41800EC896C900FFCA0C1D400C1B20FE
73B5A64150ABEE5EB86282CC7065879CD9AB0A15465299B06B8B50BE8A2AAD65
B71DCE9964F5D98939F891F883915D45C0B258775CCC7DB5D79C90CA9833D8FA
820C6C055B99E793119F2A08D404CD7DFE399F987689A7B1E3A4B0453C102BE1
A4EE99C936FE7F4193DFFBA7FCB53DCBFC068205F7D7E07EF15EBD4A67972934
295DF7079630D652B387EB8AF0949871FD51AB3C21A9F5945AFEBCDF4B0C8EAA
AEB73E08BD4C8DF83DB06601CD547CA3FEBF2722A3CE1F6FFD484C01A79B9C9D
684F4AC60D5BE5926E76CDF3DC7359764F936F8EB672E21BF28333B7929A3FA3
8A9363759409B17EA1C4CA820E7815412F051BD5B44B0F2348A0EE09D5DD303E
CB74D92E170B0952229BDA6F69C7323FD66E7B6358598C4289EF2B182BC90810
6D878AD59CDCBB130D99A10F1C200AFFA2C50906D8A18C1426B3D911FD05E8DB
4B47004255131C5F05114BADAE1F53829D7263CCFF12C20A3372F01A57A8F261
5DA1D6F4454C60F97818BCB529F8A0910CCFCAA829AF4BC5F10A0D9945C5C13A
302681B44115B85C48944B7FEA4FDF7F006C0E0306D34F9F330FE864277FF470
9B82D4808353B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 25 /approxequal put
dup 29 /greatermuch put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703D288CAFFEFC421ABEC649FD87E34B
8152B8403C7DB49860ED86B02711EE6E5B72D7D9B408B1FB89D5C1C78ACAA4A0
4E176AB7D7281992BE94DC902056793D2F8F189600650843FCB5CB77BDE88C4B
449C6606FAA7FCFF6A644A04CCBA7CD432E5D8EA8EAF4B1ADD43E917068D88CC
F64F0764ED9415FBDAE75C836ED48BF8D165A6D341B85EF6B66806E44BBAA4B2
1BACD90DD368197DF143572E919FA7A5303AD0170C7ED917E68567B3C0F87B7A
9FDB7460F52296B171B8883AA76A43E3E610D0F941EA5CC830FC24FEE1332EE7
96EDA621A08DEF2382B8CDDDB7EC133214DD77820AD3CCBC6727D9129EAC95FB
060005D8E6A1CE92F2C2BE8C92E93E0E31C619F513283E3216B7D0F5A089BB2F
2684DD0C27A68730F0C0946DD2D1B9C4380E4DFA368193FE6AB4637CE0093818
1275C136DDE4A23AF5B79D1ADB27414FBFF4D5A16BA90FFD3159151E7BE005FE
B6392828C77FFF018F5E4570F861C402E33ED8B778D16C8ADC453268F3A44A32
82EF39C33ACD53E693AA4B4A98E8F8A6AC7F6E456C13EA4DF5D99174AC4BBE6E
16EF7BE4C036C73AFCFDF5D16E96649B59D2F0E7DB9EF87C33426F9C83D03933
A8A82152F457CFB947717FEF13ED844FAA41D07C7802E1CC9C27EDD95F9D3FD8
13E02F5F0295A50E6B39029AEADF586005E9254CD215BE2C6B434100B0DBEA17
BDED18BCA50D8EE0C2A66512AA6447093AD61C23E43ACF7802740287D6086CC2
1D0DB406A9AF14B54C90F4DB206A9F36FD577E07F012705C4676E32C117864AF
41A1483C9D6D60C4F69E779ABC3F57633D4C3C4260B89B9736BDD43D4D369442
03B56EB9A238ADC9858F252A35EF39A007EBE648A5FFFD4ED666185845D513A8
5E9EA97FAB452E978F89AD446E2C1838B4F53989C6C935DB7076253EB92652BE
0449F0DA4B081865730413E317614BDC3F7A6A57A0322859DF622ECB9F7B707A
4EF4DAED8BF72E2440EB98233F6F7EB7EE03DFBB99D4209C3B430CEDF0C86274
2598408BC7C3B715AB487C523204D949CA04357781282E675A5393754F4BF663
E7C0B2A09142D059ECB15C0092C3D6E60951F5FBA46B99E9138062CC852D195A
0418BD3A74906ED4D6B0A3354A624F6D52664DBE625D42D1597BD8954AE3514B
70F18726B1DBCF1BAFBAECE88648346F78851B158CB08F93F60028474B052439
9451329A8604C214E41716328A7CE5B5028B878C5B23F046CBEC020DFB65BE37
6D92388AFB4556B4DA37CAC2392DA7D7A95D72F60A23CD3DA758E8287537A590
610897A2FACEA7E5C8E59FF3EE09968ECA9551A08843F955951B2A60B57FF01B
C1846011B9E9AABEE7A4032323499B69A334F7F9CBD1F2F082B0D65DE176F9B6
248D2900F0AE229084CB778D915F5F40F0D381D86A8CEB3F83981278166009D0
82ADEF9DED9643009E8CFA71572EC0B6F088954E306364F3ECF586C318E0196D
111659842C5558D5B79D44A1B2E366C9FBC76596197AE6E9A92FDB386331742B
0DD8BC039A8DCE03E5E129A81EAA799909F6D24FD809C1CAEF33BF49631721CB
D7D01EE09EAEB72CEB73721C3A8E346CC033DA4FADFE751049856C1C38A76E6F
CE72E2340E0B5F04FDB35055FA7A7BA60AA7E15C79B26B6E3459BF00FA18DA75
A7FE072C20060EB85F54B5E7E6C375FB95B8D2C46A05F534F3B9EA30FB5D1B13
97FB4706BDCD96
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 48 /prime put
dup 121 /dagger put
dup 122 /daggerdbl put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D28419D2EEAC108405E4AC2173E4304F
5A8445E1A94C3022676F3B8E366AD06FBA451263D1014AD0ED97FBE558F363DF
DA6BD1699F2B52BCCD8A3F91F6F7AE84A72501DC904505DE87C6F10EB1874721
CA18FC4A7A7937BB91559882DF95990390ACC3D6E2AC09936B1E55AE9D4A93B8
24671557234366453D835F4C58E3A85C7C8ACA1F57732722FB2F13B2B2050056
1D911CAF16B665F35C7422952ED57B47C92F324D54A99EF984CEE6D53E34B0EA
2ECB68B6F3300BBABBA24FEBA7E9269099F188FD7CB60BA7CE4D3F91E71798EA
5F2D1D05BA2B0A00EF5D34AB13103B528B290E65603D419154DACC058D58D24A
45307F84456D917ACFC7FC0E931F6581D4082867C67A5B0160CCB937FBB25B77
A3D79A1F41DA8920CA893ECD3F307B88A2FC4108CE3793DA5B6690CEA2BA7FDE
730AE4EC9D55DBED0FC7D2354C2C03AE2C9719ABF4A4A1733580C5F11E7E3446
15871BD34253040CC67C78420EBA09551734A49D1F61FE0DABFF1769F83F0C1C
6078B6EE13EBEF195F8463CA73BADB1D66529792CA4D926A4881A08EB12811D7
F6E053013319FB11A619D754929332B23BEF19BA2DC05CE982F2AF4A0313726F
8ACFCA72118390A2EC3E5F26E6DDC2B90E4A552E56A61D500EDEB644BC47B781
83C009F90CBD6B968761C2190D2E460CDF75BD5D16FAF71AE5A6981B3A8A274C
3080AAEFC246D17EE8253F373F33429C8BEA77DDD87FF2DD95E143B87A4D6597
F306E784982E22019C5FF507C171AD50F055A7A85D2A2BFC5BE3550D104E2C77
A91DC2454CA414098FCE4575DFCF9FF9DDE914ECC2165086629C66CDAD94340B
194981583C747191CDC0C3360477813A0DF09ECA06AD44FA04B1947B66602B12
01C222F4A321BF77D03D8733917DD7AEFD6B2BDECDA19B89680E435F8CDC16FA
9CA64CAD7215DEF18A086283733407AB2FB3D7C5141DE9C4FB79108A9DFB99D6
8AECB039D362CD07C273CBA4F5A3A3A0B96BB3E122264B6E998253DE4D7A2805
43640255CA7E9EA0AB768F0C7BBA2F31D514CBB67DE66BFBC24CC79D2E37CD05
C78803263CA0F9974A1CBD853C6D3651B5AD6B2D83D19E7EF104AB645D0F2E99
BBBB9CFD279177FFE4F1316BFA988AE84FFF68D70F20843875AB24CE3A68DB4D
59591CB834379A32EFBBF80DEC15E98602316EEBE619EF1291B48617A28D22C7
D4071726324B05654D46B4D97DB717E7E8DD4EDF80F37554D2F0AA1B7817BF52
FE7C8C9E50D6FAF765C96E5AD0F375E031C19E793EC6623FD996F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 67 /C put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 98 /b put
dup 102 /f put
dup 107 /k put
dup 110 /n put
dup 112 /p put
dup 114 /r put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F427C1B5158D8EC1EEA9AFA31B14D310584D6FFA41BDEABF82FB7ED
6634AF82FC7D46A06ABF41948619A1E54F16EC93A0ED9183A10F157465550FDE
FFA3BAB07B3625647D1D165980B6F9F0BE032D6877BCD54AC1A5DD747571D637
0F5CA0EC24DF562D5DA2B0A84B49AB71590A26750D2299B0D34923A1F7777BE7
B8778B211770F7A082DBE722BD00FB075E8B796BD63CFEB277F9CD0C3B953DB6
A30D20C3C022E50AA2B9ACADECCD115C48CF89C0E1303E17A23035ED3168D99A
4EC3B566585C8E772D12C6C3E208A0BAB655390954CC56F66855754B3ED0DE20
78D3BA802699DADEE1C34142EBF8C812866D7DC7A743E677DC8B4569262F0EBE
B33DC2BDDF2B75E556EA9FCF3BB7FA71BC6170E7A51F366BCB5BDE1116E673E1
CD04D70AACC896AFEE6D4BFC3B391F3B2653BAACDD304C60319A8C6CF126834A
D63AC09E57238058F373DAE86863D0E3800B1B1A5C861C5C1619CDDD65187990
89CD31E814A9E974AA087A0AE5BD9BBD9E30DACFE1A4412F7DC229A05083C50D
475529CDD29664464ED4540FCC3A3B2A11C28094B7BB607751086A171341A851
B20B193B6A3DCADC17B70CF4640ED880D64D79F6FC638F51DC214A668B3F1E5D
1372B322C5B2C9BA0DD994A111ACC66B446AD91261CB27CC1F724A0A9D38026E
DC23E83426C6E7BA55FE1F04749CEB9DE93DB1633C757859F822485EB82165FF
127594211B83E49BD6B117ADB7C40D7F0C469F1F58D82201A955094A5DB2B045
FC5BE30C0742AB2EB9DAAE581938AD36F83A9F5CD9168C8BDD56838A56981690
5FB440E67D682E910B14B7B2CF1BD803AF6B4A7D06A093A94C1BB3D764C6F5CD
734FBC42C36DFA9D4ADB55DD5BBF83EE4DE05E0742F8ED86D98A31416AF492FA
66B24358DFADC01D42AF10B55B43C3C1D487426B6D975FD0CC0ECFF4239BFF71
8F6AA7D3D8B17D8D2C0A4CC10E7ADB157D321CFF632A70E924BFE246F7FEE84F
D5D8A15586557DE7D49985E0ACDD8EF2AA850BB49EF89F45FCC0298521F8BA74
D6280C25369D8B98EEAFF431DC2671BF74C1E7B97968F43F0C19A9841DB15829
422F258E4B610CEFE8C2EA4EC32F39E12A876A04FC250726A88C44970F1C1FE6
9220D7191B03DAF489FFF14757F81DB20D758C0D3C54FAB125DE056330DE9160
5D1870F059E32515850D17432F9D77067D7B63AF70744E430A1B108C0F1FE374
58B109E6D1F8F58908464F3CD6F097A03A80A6C670C1F68942D1C866EB00E99E
AFB97C323DD0AC3D0D793CD6B44E3AE39A39C75CEDA5FF9E466ACF0E44A8BD6B
DF26D9052C780B8441E4B1279F1C5C7525908DCA0442B47CEBEFA0F8AFA256A0
942F87EFA7B964D15E9A3E506D4735CD89449C28F8552908821037162A2E70FD
4A42E9C195C88C6C17B6CA188023733FD75C7596149E6E4A7FE78C8377CAA3E5
763CA7A7966F1C04D3327B64EEFFFA8A1360743D532290DEF7222210FBD32E71
C3260D33B00CFDE0791DBF7E8BC95B28B540589AFB847166B266266E4A740253
56CD53AD732DA979AF29EE0D152DC0465973DF4C7B0868D744A25BD9337B6032
F73BDEFD42E646BF6D16751649229A930C882301DFBBC08C48754B310B189F7A
1BCDA7F49682E59A94C9429D483800EC32A7036789CEB4FCB402301BC8DF0C43
4BCD7BA85270845B31DFAFA72C4A69FA09AEB0070207B2954FBF49E6CC7CD51F
E47E243802D2C24FEA325FF18591B0F7368A87740DFF5D6637E107F3C9821079
3C96E1E51D5D4D7151D0717119E7E90DE77477529461BB88F45F110E6B9FC85A
003947767C75E79542529F32EA77645B8C9FCFE6937BBF923426B6477FBCBB72
6FA919ED320855F695C77B84C10BB1393048AD96900BA660FB9E07B7D8568B71
020DF8590E22931D3BD54DD7ECE3F995A768BBBA23026B555B5676B539B5C094
9312026BA3F0D40C19D5A438DE8CC5B5C848CE2840F935ADE0B851708055B78F
0A0CEA73F696FBE4BFF04BB273BC186E42FC92BD3B1C3965426514826F770BAD
58BDD59F08AFBCCF2B0201018187C0F78BB14BC86F08F2EABEBF26DAC1D4842D
00BC3F5F2FA75ED1BFBFB1102DB128C6BE53B862324EBC4EEFBD5C42196747BC
2DE09D99EC7C724F28BBC20C37D5CF23B8EB19EBFB355175A40111C6132BAF67
1874186D7F2353AD0E469CE8688EC71AB741BF8E8FD037D1C28972B95440E15D
EC8C3907E4567B4A2B43A6F2F657C1E7918D1A4DE3B1C600A7D5BD8ECD5F6E1E
EE669DEBE2D3E94D84748E6FAB227FC8AC02333CD89549FE7E277E125F8F88D4
BA25FFEA480C8CE43668BEF370CA57B4565C3D6CF0F6D6D5D4EBA720B60895C8
8831D9E120ED952F8A5D5380287904CE1A6B79D45CCE532AB07ED7D804B98107
05DA68520AEB22C80DD8B1F3E517E9CA2C6E8215B16F1062519C7FE63443D94C
EB771C4F40839F1277D1C9859C97094A5A8C6E286097589E037B66093E07A490
74CB0368F5920F8782083A166EA57E3FFE039A009D5E949BFB91CED1AF0CCA14
B454B27348F17FC126D34FC009DC4F56A2C57D579BE8842B3B44CB0E9AE08362
19D0880D56957F4612F9F1120F85B8D7D17CFEC2FC0ACC389F9638BE2B7C1085
771EBEEC8668CB3AB0D56D42A3BC42F5BA7871606B6BE5577FDDBC72C173AEEE
F3FC2DFB1A76CC42E1A7C13F2806CF25E32E866C5B2B08A3C418A21FBD1C5D7A
7CAD2FA197F9C8D0D42B0CF2FF7A628C8EDDE56972F860071E749F30EF291B2D
F967989400ACF60331A7AF7A4AB67B22791002885301F38B11565607C9C9EAE2
7372751E3CFC1DD22724ACA94262DD22970D0A702A469B62628D47C51DB0ECE0
69300402863189A29CBFB3FD393C5348E99D6015DCD9623D9F03AC1C2D8DFB68
9156929E9B1D2518CADC70380FC556B9C63957F5BA92711C6269767554B0134F
1368CBA534589E223B60680ADCFD485E38125CC9662DC62F1D0A441A6997DD47
F7B8AE984CA4574AC043CA48BBCEA40FEE0E0FB607222BDF1DA9D3FE2207E057
6F5C0D0B9F6867150A3652843B3686C27EE23364B83D3E1008A783F584F8FBBF
C8EA17CC139B424D0A6A67622DB2FE50C1B4E02B700E7D0CFB402F34429D7A9C
749D3B46C36926833A58535F90313172C24CCE9686D6B930A4D9350B1285F739
A2934FE802314F6ED2D6D6D92A31A3D1B293F004D873596F0A1E33884795162F
ADEFEE8F4C5088F18CFF7BECEB40DAE6047CE622FC6C39121D2ECF85B0061435
EB4622B3593D8E9E8669274E7410AB1BB83395CE021A1663DF77FA8D0C47439A
EA4422F565B45E3EAB2C17863C5EBF54660872816188018C45010ADC9AF4BC0A
C72AA60EA68D7E3FB4F0DE415513970152398B3472A92967397F22369FC64312
717C70ECB918445D09CD93567A937C656AF35428F3CACCE76CCC3E579406BEAF
3F90678DBE438D43E88AD59998E795B1034CDF3EE0FC6B0B03F1C83DAF3EB362
3CA913D06F299F76208F3C496937EC44836746095E239085755C87F2642EAD49
5C16C7C17855709D9BA8CAC18552E4B83456AE6420E8B999BC7221B19C642AE4
8687B44D387AA2AE7E57E99069043D12BF1066A60E8F2F020F724E8ABBD1CD61
52EA60794C50B386F310247443F3244F804C974699EA84E16B9CF3D493EEDD69
07D9FDF0273CE08884D169506FFCCFC09570A2B515DE50AE6ACCE94C261A7A40
95732F9782781C67FAC3E653E39806151B7DD4DCA700CF268AC6A68BDC1B5EE0
595EB174AA806BFE2451437CEA9386CF3B674456D66A82DB9534EA5464F012CB
0338DC86802D1AF09C00B9D92FA7E841889CEA16F3B0984A413FA4C020E00662
415BA6C85D3630E093A1D5AE129C8DF6975455850D3AE18FD7F865B838FE265D
15B4CB8717E95B54DD4B487CFF80727661B7784B6C89BEA7D29E159D7C98F7D1
9A825D6564F463F6EAC446881E28AF0A6BA0F2E6DDE6C4702DEE658D8037E630
E0962896877F2CCF5941E51BAEF177E0AA5DA165AD7AFB62DBFC7D9827DE9AEB
F8DE50CE073291EDCBB96D8AE02FD078DEBA586E87EAE8040BD0FA7985B62DBE
9B3CE8F23B638970D56669605C438BEFEF86070B31CBE81F6BBAB79491EC197B
164CB157DE5AA1EACDB010C9E7B2B7351903357E8DE6D1773E6E981E7FEEFC4D
DBAE686303D8005BC15C4FAB10071130EA6CB3AFB1A872B2E1CA359CA394FC77
76B684E83FCD540414621245FDA8476C274B2F53B912E7677044A80816152FA5
88E50AD6321C4F08EED24D5645C715C487A12D986DCEAFCB167F58E8E6CF4EBD
E67BEB488A53B0C0CD9FE5BD03FC3E106583895D6BBF4C89AEE462B96B1156A2
B3C881DBD3676046E6EA85B5B79D706CB9EEE66FE5D970DBA188C410B31AF1EA
AC35F439C0143EA3FFD03A83F1E65A04898D77C503C8D41906E44B47FF108D92
D178E2E2FBF4DF4E7A5D9A374A06D6117B9129AB93BF5E09D6753598C6D3CD29
996F506D7762B4D51CE80D1590DB8BD9B6D4F9BD870D7E7678988211DE02EF3E
CA2BD54BD3C121B0759552F632BD5973F74D474C5A1BD5F16CEE6469B89CF9D5
B4EC0845F7D06C143836B1B014E45E92C86E0A752BBEF0776A0F82563109D6F5
8779011E72ACAF885C5E212D7A0CE39996E8BB361386146B3AD5EC28D75F08A4
92618E9F8C0B47C71B6F6BC46E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /dagger put
dup 122 /daggerdbl put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302530FA3F4BEF341997D4302A48384A
CEFFC1559D2C01BEABCD3076FBE914A93D437EA114B4ADD3DAD592B694F8762A
D3FCE0012C638E1F0FEDE98B6C7B6E8B591DCE596E1CC1FC9D292838C3BA0DDA
26BBE0BA18662E15E6A10264696A5F099B60DAE440083AB9A67E6D53DFEEC7D7
C52FED9B008BE171235B1EB3BE07BBEC95518DC5AE0EEA7D2426FEC81E5AEA5F
94C75140A397D74FBE4641C6376031688FB45FE59645CBBFF01E1530B0FC0A65
A00FD78E36A1275A3B6E2F9A84AD8D149053C4208875E5EBB286292BA1045AF2
8E87DA3DE937CD45FE960CEFC3A68D8981AAC8B33DC56738C92FB9CB4D65F0DF
C2A0F13F80C96DFE08F20599E0EECA835AF77BC2D4D59A08AB76753768DDF7D1
1251296CB45DDBB3F267F6A6B050A22CAE2DC300DD48A70608510EC35F5C93B8
27CC79C047837CC9A9ADFA5325284F08DAEEDA796AC38C291EB442198A0C27EB
51C585BB47FFC98D35D091F7F2DAA181833F070419BA2FA37A46A409605EBA74
B13FE6A5807C8A733D4631EDFA1582498D19568DD048DDD3B410ECD8901197E1
1578EA58E7B720D579CF5316DAAF7BC4AAFD7C2166AFBA03A45FCD5530C72B96
AAD5B064F03F7B30BB2DDE8130F7F8E7D2BAD73F9A5DE8C2A41333BB60BDDAE6
5AC5AF3C35F7CD1F33DD8860186FE4FB84DC5E2B61D4340F469F743116A431E1
E7001135E79F5B69C6F55F70B3B996B892FB070CCD73A9CC7E1A6018C5C2C3EF
2DC40271660BA3FE2FAB212C4A85548676F264997BE718E67B89DAC4CA90993E
F7BBDF25A9B6FAA331E2C963F4679ADBDF76B39771466E69DA0E3CC2F75A5B6A
1CF72CB921A5BA4ABD5D05E30E15508D997843E4E0EDB51B26DAD11D04585CBA
C11EBF3714FA907A58EEE6ACB403B58740DCF5CCF53900CCA1B32ECC549ABBFA
6173283ABB78F56ACEF422E88C90C800FCE9D75608120AD6F160B831CD941EA8
E8B4138CD14E778C95B81FA2D56D7D5E57B633DC3986FFDD1B79D86C24797B25
DC9CECB3881DAD809146D5145951FBE1203272F6329813A60ADAF2DF0315C7ED

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (paper.dvi)
@start /Fa 133[29 33 1[50 33 37 21 29 29 1[37 37 37 54
21 2[21 37 37 21 33 37 33 1[37 6[42 3[46 1[42 37 46 1[46
54 50 62 42 2[25 1[54 46 46 54 50 46 46 6[25 37 37 37
37 37 37 37 37 37 37 2[25 19 4[25 39[{TeXBase1Encoding ReEncodeFont}53
74.7198 /Times-Italic rf /Fb 105[37 27[33 37 37 54 37
37 21 29 25 37 37 37 37 58 21 37 1[21 37 37 25 33 37
33 37 33 3[25 1[25 3[71 54 54 46 42 50 54 42 54 54 66
46 54 29 25 54 54 42 46 54 50 50 54 1[33 4[21 37 37 37
37 37 37 37 37 37 37 21 19 25 19 2[25 25 25 36[42 2[{
TeXBase1Encoding ReEncodeFont}71 74.7198 /Times-Roman
rf /Fc 194[55 7[35 4[35 48[{}3 66.4176 /CMR8 rf /Fd 138[39
25 31 2[34 1[41 59 21 35 1[23 1[32 1[31 35 1[29 36[34
61[{}14 58.1154 /CMMI7 rf /Fe 205[33 33 33 48[{}3 58.1154
/CMR7 rf /Ff 194[65 3[42 42 42 42 42 42 42 42 42 42 4[65
1[32 32 40[{}14 83.022 /CMR10 rf /Fg 133[39 4[48 30 39
37 1[42 40 50 73 25 43 1[29 48 1[41 39 43 36 36 44 13[51
2[53 1[67 1[57 71 2[69 4[59 5[42 1[23 23 58[{}29 83.022
/CMMI10 rf /Fh 133[29 33 33 48 33 33 18 26 22 33 33 33
33 52 18 33 18 18 33 33 22 29 33 29 33 29 3[22 1[22 2[48
63 1[48 41 37 44 1[37 48 48 59 41 48 26 22 48 48 37 41
48 44 44 48 7[33 33 33 33 33 33 33 33 33 33 18 17 22
17 2[22 22 2[55 1[33 31[37 37 2[{TeXBase1Encoding ReEncodeFont}70
66.4176 /Times-Roman rf /Fi 198[25 25 25 25 25 25 25
25 25 25 48[{TeXBase1Encoding ReEncodeFont}10 49.8132
/Times-Roman rf /Fj 133[37 42 42 1[42 46 28 32 37 46
46 42 46 69 23 46 28 23 46 42 28 37 46 37 46 42 10[60
60 55 46 60 1[51 65 60 78 55 1[42 32 65 1[51 55 60 60
55 60 6[28 3[42 42 42 42 42 42 2[21 28 45[{
TeXBase1Encoding ReEncodeFont}53 83.022 /Times-Bold rf
/Fk 198[29 29 29 29 29 29 1[29 29 29 48[{TeXBase1Encoding ReEncodeFont}
9 58.1154 /Times-Roman rf /Fl 134[37 1[54 2[25 29 33
2[37 42 62 3[21 42 37 25 33 42 33 1[37 10[54 1[50 3[46
1[54 1[50 7[54 54 50 12[37 1[37 37 37 37 3[19 44[{
TeXBase1Encoding ReEncodeFont}30 74.7198 /Times-Bold
rf /Fm 134[29 1[44 29 33 18 26 26 33 33 33 33 48 18 2[18
33 33 18 29 33 29 33 33 10[41 1[37 3[41 3[37 6[41 48
1[41 18[18 17 22 17 44[{TeXBase1Encoding ReEncodeFont}33
66.4176 /Times-Italic rf /Fn 134[50 50 72 50 55 33 39
44 1[55 50 55 83 28 55 1[28 55 1[33 44 55 44 55 50 9[100
3[55 72 1[61 78 4[50 39 3[66 1[72 1[72 6[33 2[50 50 50
50 50 50 50 1[28 1[33 45[{TeXBase1Encoding ReEncodeFont}42
99.6264 /Times-Bold rf /Fo 133[32 37 2[37 42 23 32 32
42 42 42 42 60 23 1[23 23 42 42 23 37 42 37 42 42 22[37
28 8[76 17[21 28 21 41[42 2[{TeXBase1Encoding ReEncodeFont}30
83.022 /Times-Italic rf /Fp 152[42 42 72[83 3[65 4[65
18[23 65{}7 83.022 /CMSY10 rf /Fq 105[42 1[37 37 24[37
42 42 60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42
42 28 37 42 37 42 37 3[28 1[28 1[60 60 78 60 60 51 46
55 1[46 60 60 74 51 60 32 28 60 60 46 51 60 55 55 60
3[47 1[23 23 42 42 42 42 42 42 42 42 42 42 23 21 28 21
47 1[28 28 28 1[69 33[46 46 2[{TeXBase1Encoding ReEncodeFont}79
83.022 /Times-Roman rf /Fr 133[30 30 72[19 47[52{}4 58.1154
/CMSY7 rf /Fs 141[32 1[36 1[43 2[37 4[34 3[30 14[43 2[45
1[56 1[48 60 2[58 4[50 7[20 59[{}14 66.4176 /CMMI8 rf
/Ft 133[31 31 121[{}2 66.4176 /CMSY8 rf /Fu 134[50 1[72
2[28 39 33 1[50 50 50 78 28 50 1[28 50 2[44 50 1[50 44
12[61 55 2[55 2[89 5[72 3[66 66 72 18[25 46[{
TeXBase1Encoding ReEncodeFont}26 99.6264 /Times-Roman
rf /Fv 139[48 56 64 1[80 72 80 4[40 3[64 1[64 24[72 56
73[{TeXBase1Encoding ReEncodeFont}11 143.462 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 1498 99 a Fv(Inspector)33 b(J)n(oins)133
485 y Fu(Shimin)24 b(Chen)656 449 y Ft(y)941 485 y Fu(Anastassia)g
(Ailamaki)1764 449 y Ft(y)2047 485 y Fu(Phillip)g(B.)h(Gibbons)2793
449 y Ft(z)3076 485 y Fu(T)-8 b(odd)24 b(C.)i(Mo)n(wry)3712
449 y Ft(y)o Fs(;)p Ft(z)455 648 y Fr(y)490 678 y Fq(Carne)o(gie)19
b(Mellon)h(Uni)n(v)o(ersity)2613 648 y Fr(z)2648 678
y Fq(Intel)f(Research)h(Pittsb)n(ur)o(gh)595 768 y(5000)e(F)o(orbes)i
(A)-6 b(v)o(enue)1248 b(4720)19 b(F)o(orbes)g(A)-6 b(v)o(enue,)19
b(Suite)h(410)479 857 y(Pittsb)n(ur)o(gh,)f(P)-8 b(A)21
b(15213,)d(USA)1198 b(Pittsb)n(ur)o(gh,)19 b(P)-8 b(A)21
b(15213,)d(USA)341 947 y Fp(f)p Fo(c)o(hensm,natassa,tcm)p
Fp(g)p Fo(@cs.cmu.edu)1039 b(phillip.b)m(.gibbons@intel.com)730
1263 y Fn(Abstract)90 1418 y Fq(The)29 b(k)o(e)o(y)f(idea)h(behind)e
Fo(Inspector)h(J)n(oins)h Fq(is)g(that)g(dur)n(-)90 1508
y(ing)15 b(the)h(I/O)g(partitioning)e(phase)h(of)h(a)g(hash-based)e
(join,)90 1597 y(we)22 b(ha)n(v)o(e)f(the)h(opportunity)d(to)i(look)g
(at)h(the)g(actual)g(data)90 1687 y(itself)31 b(and)f(then)g(use)g
(this)h(kno)n(wledge)d(in)j(tw)o(o)f(w)o(ays:)90 1777
y(\(1\))h(to)h(create)g(specialized)f(inde)o(x)o(es,)i(speci\002c)g(to)
f(the)90 1866 y(gi)n(v)o(en)23 b(query)f(on)i(the)g(gi)n(v)o(en)e
(data,)j(for)e(optimizing)g(the)90 1956 y(CPU)36 b(cache)e(performance)
e(of)i(the)h(subsequent)e(join)90 2046 y(phase)c(of)h(the)g(algorithm,)
g(and)g(\(2\))f(to)h(decide)f(which)90 2135 y(join)20
b(phase)g(algorithm)e(best)j(suits)g(this)f(speci\002c)h(query)-5
b(.)90 2225 y(W)e(e)34 b(sho)n(w)f(ho)n(w)f(inspector)g(joins,)k(emplo)
o(ying)31 b(no)o(v)o(el)90 2315 y(statistics)18 b(and)e(specialized)f
(inde)o(x)o(es,)h(match)g(or)g(e)o(xceed)90 2404 y(the)21
b(performance)e(of)h(state-of-the-art)g(cache-friendly)90
2494 y(hash)26 b(join)g(algorithms.)41 b(F)o(or)25 b(e)o(xample,)h
(when)g(run)f(on)90 2584 y(eight)k(or)h(more)f(processors,)i(our)e(e)o
(xperiments)f(sho)n(w)90 2673 y(that)23 b(inspector)f(joins)h(of)n(fer)
f(1.1\2261.4X)f(speedups)h(o)o(v)o(er)90 2763 y(these)33
b(pre)n(vious)f(algorithms,)j(with)f(the)f(speedup)f(in-)90
2853 y(creasing)19 b(as)i(the)f(number)f(of)h(processors)f(increases.)
-60 3045 y Fn(1)99 b(Intr)n(oduction)-60 3181 y Fq(Our)27
b(ability)h(to)g(minimize)f(the)h(e)o(x)o(ecution)e(time)i(of)f
(queries)g(of-)-60 3270 y(ten)i(depends)e(upon)h(the)h(quality)f(of)h
(the)f(information)f(we)i(ha)n(v)o(e)-60 3360 y(about)23
b(the)g(underlying)e(data)j(and)f(the)g(e)o(xistence)g(of)g(suitable)h
(in-)-60 3450 y(de)o(x)o(es)29 b(on)g(that)h(data.)52
b(Thus,)32 b(database)d(management)e(systems)-60 3539
y(\(DBMS\))17 b(maintain)g(v)n(arious)f(statistics)j(and)d(inde)o(x)o
(es)g(on)h(each)g(re-)-60 3629 y(lation,)j(which)g(fuel)g(all)h(of)g
(the)f(optimizer')-5 b(s)20 b(decisions.)25 b(Because)-60
3719 y(it)f(is)h(not)e(feasible)h(to)g(maintain)f(statistics)i(and)e
(inde)o(x)o(es)f(speci\002c)-60 3808 y(to)27 b(e)n(v)o(ery)f(query)-5
b(,)27 b(the)g(DBMS)i(must)e(rely)g(on)g Fo(g)o(ener)o(al)f
Fq(statistics)-60 3898 y(and)e(inde)o(x)o(es)g(on)h(the)g(relations)f
(in)h(order)f(to)h(optimize)f(and)h(pro-)-60 3988 y(cess)g
Fo(speci\002c)e Fq(queries,)h(often)f(resulting)g(in)h(incorrect)f
(decisions)-60 4077 y(and)28 b(inef)n(fecti)n(v)o(e)f(access)j
(methods.)50 b(This)29 b(problem)e(is)j(particu-)-60
4167 y(larly)20 b(acute)h(for)f(join)g(queries,)g(where)g(\(1\))g
(characteristics)g(of)h(the)-60 4257 y(join)i(result)g(often)g(must)g
(be)h(inferred)d(from)i(statistics)h(on)f(the)h(in-)-60
4346 y(di)n(vidual)18 b(input)g(relations)g(and)h(\(2\))f(it)i(is)g
(impractical)e(to)h(maintain)-60 4436 y(inde)o(x)o(es)24
b(suitable)h(for)f(all)i(join)e(query)g(and)h(predicate)e(combina-)-60
4526 y(tions.)28 b(In)21 b(this)h(paper)m(,)e(we)h(address)g(this)h
(problem)d(in)j(the)f(conte)o(xt)-60 4615 y(of)f(hash)g(joins,)g(one)f
(of)h(the)h(most)f(frequent)e(join)i(algorithms.)p -60
4680 780 4 v -60 4784 a Fm(P)-5 b(ermission)18 b(to)g(copy)h(without)h
(fee)f(all)g(or)f(part)g(of)g(this)h(material)h(is)d(gr)o(anted)j(pr)m
(o-)-60 4855 y(vided)25 b(that)f(the)g(copies)g(ar)n(e)f(not)h(made)f
(or)g(distrib)o(uted)i(for)f(dir)n(ect)g(commer)n(cial)-60
4926 y(advanta)o(g)o(e)o(,)19 b(the)e(VLDB)e(copyright)k(notice)f(and)f
(the)g(title)h(of)f(the)g(publication)i(and)-60 4997
y(its)j(date)h(appear)-7 b(,)23 b(and)f(notice)i(is)e(given)h(that)g
(copying)h(is)e(by)g(permission)h(of)f(the)-60 5068 y(V)-7
b(ery)23 b(Lar)n(g)o(e)g(Data)h(Base)e(Endowment.)40
b(T)-6 b(o)23 b(copy)h(otherwise)o(,)j(or)c(to)g(r)n(epublish,)-60
5139 y(r)n(equir)n(es)17 b(a)g(fee)h(and/or)g(special)g(permission)h
(fr)m(om)e(the)g(Endowment.)-60 5243 y Fl(Pr)o(oceedings)h(of)h(the)g
(31st)g(VLDB)f(Confer)o(ence,)-60 5326 y(T)-6 b(r)o(ondheim,)18
b(Norway)l(,)h(2005)2140 1263 y Fq(The)24 b(k)o(e)o(y)g(observ)n(ation)
e(in)j(this)g(paper)f(is)h(that)g(because)f(hash-)2040
1352 y(based)34 b(join)h(algorithms)f(visit)h(all)h(the)e(data)h(in)g
(the)g(I/O)g(parti-)2040 1442 y(tioning)26 b(phase)h(before)f(the)o(y)h
(produce)f(their)h(\002rst)h(output)e(tuple,)2040 1532
y(we)37 b(ha)n(v)o(e)f(the)g(opportunity)e(to)j Fo(inspect)f
Fq(the)h(data)f(during)f(this)2040 1621 y(earlier)30
b(pass)i(and)e(then)g(use)i(this)f(kno)n(wledge)e(to)i(optimize)f(the)
2040 1711 y(subsequent)c(join)h(phase)h(of)f(the)h(algorithm.)45
b(In)28 b(particular)m(,)f(we)2040 1801 y(sho)n(w)38
b(ho)n(w)g(statistics)h(and)f(specialized)g(inde)o(x)o(es,)j
Fo(speci\002c)c(to)2040 1890 y(the)27 b(given)f(query)g(on)g(the)h
(given)f(data)p Fq(,)h(can)g(be)f(used)h(to)g(signi\002-)2040
1980 y(cantly)e(reduce)e(the)i(primary)f(performance)e(bottleneck)i(in)
h(hash)2040 2070 y(joins,)c(namely)-5 b(,)20 b(the)i(poor)e(CPU)i
(cache)f(performance)d(caused)j(by)2040 2159 y(the)29
b(random)d(memory)h(accesses)i(when)f(b)n(uilding)g(and)g(probing)2040
2249 y(hash)g(tables)g([3)o(,)g(4,)g(12)o(,)g(17)o(].)49
b(Although)26 b(impro)o(ving)f(hash)j(join)2040 2339
y(cache)18 b(performance)e(has)i(been)g(the)h(focus)f(of)g(man)o(y)f
(recent)h(stud-)2040 2428 y(ies)31 b([3)o(,)f(4,)g(12)o(,)g(17)o(],)j
(we)d(sho)n(w)g(that)g(our)f(approach,)h(which)f(we)2040
2518 y(call)16 b Fo(Inspector)f(J)n(oins)p Fq(,)h(matches)f(or)g(e)o
(xceeds)g(the)g(performance)e(of)2040 2608 y(state-of-the-art)21
b(hash)i(join)g(algorithms,)g(achie)n(ving)e(up)i(to)g(1.4X)2040
2697 y(speedups.)h(Moreo)o(v)o(er)m(,)16 b(the)k(specialized)f(inde)o
(x)o(es)f(created)h(by)g(in-)2040 2787 y(spector)30 b(joins)g(are)h
(particularly)d(well-suited)i(to)h(tw)o(o)f(common)2040
2877 y(join)j(scenarios:)51 b(foreign)31 b(k)o(e)o(y)i(joins)g(and)g
(joins)g(between)f(tw)o(o)2040 2966 y(nearly-sorted)18
b(relations.)2807 2936 y Fk(1)2040 3127 y Fj(1.1)82 b(Pr)o(e)o(vious)19
b(Cache-Friendly)g(A)n(ppr)o(oaches)2040 3256 y Fq(Pre)n(vious)i
(studies)i(propose)e(tw)o(o)h(approaches)e(to)j(impro)o(ving)d(the)2040
3345 y(CPU)27 b(cache)f(performance)d(of)j(hash)g(joins:)37
b(cache)26 b(partitioning)2040 3435 y(and)32 b(cache)g(prefetching.)61
b(Gi)n(v)o(en)31 b(a)j(pair)e(of)g(b)n(uild)h(and)f(probe)2040
3525 y(partitions)26 b(in)i(the)f(join)f(phase,)j(cache)d(partitioning)
f([3)o(,)j(12)o(,)f(17)o(])2040 3614 y(recursi)n(v)o(ely)k(di)n(vides)i
(the)h(tw)o(o)f(memory-sized)e(partitions)i(into)2040
3704 y(cache-sized)21 b(sub-partitions)f(so)i(that)g(a)h(b)n(uild)e
(sub-partition)f(and)2040 3794 y(its)d(hash)e(table)h(\002t)h(into)e
(the)h(CPU)h(cache,)f(thus)g(reducing)e(the)i(num-)2040
3883 y(ber)23 b(of)h(cache)f(misses)h(caused)f(by)h(hash)f(table)h
(visits.)36 b(Ho)n(we)n(v)o(er)m(,)2040 3973 y(the)30
b(re-partition)e(cost)i(is)h(so)f(signi\002cant)g(that)g(cache)f
(partition-)2040 4063 y(ing)g(is)h(at)g(least)f(50\045)g(w)o(orse)h
(than)e(cache)h(prefetching)e(for)h(for)n(-)2040 4152
y(eign)f(k)o(e)o(y)f(joins)h([4].)46 b(Moreo)o(v)o(er)m(,)25
b(cache)i(partitioning)e(is)j(sensi-)2040 4242 y(ti)n(v)o(e)d(to)h
(cache)f(interference)e(by)i(other)g(concurrent)e(acti)n(vities)i(in)
2040 4332 y(the)g(system)h(because)e(it)i(assumes)g(e)o(xclusi)n(v)o(e)
e(use)h(of)g(the)g(cache.)2040 4421 y(Cache)c(prefetching)e([4)o(])i(e)
o(xploits)f(memory)g(system)h(parallelism)2040 4511 y(in)31
b(today')-5 b(s)31 b(processors)f(and)g(uses)i(softw)o(are)f(prefetch)e
(instruc-)2040 4600 y(tions)19 b(to)h(o)o(v)o(erlap)e(cache)h(misses)h
(with)g(computation.)i(The)d(cache)2040 4690 y(prefetching)d
(techniques)h(are)i(ef)n(fecti)n(v)o(e)e(only)h(when)f(there)h(is)i
(suf-)2040 4780 y(\002cient)38 b(memory)f(bandwidth.)76
b(Ho)n(we)n(v)o(er)m(,)41 b(modern)36 b(database)2040
4869 y(serv)o(ers)h(typically)g(run)g(on)g(multiprocessor)f(systems.)77
b(In)38 b(an)2040 4959 y(SMP)19 b(\(symmetric)d(multiprocessing\))g
(system,)j(the)f(entire)f(mem-)p 2040 5034 V 2130 5089
a Fi(1)2160 5113 y Fh(Joins)g(between)j(nearly-sorted)h(relations)f
(arise,)f(for)e(e)o(xample,)j(in)e(the)g(TPC-)2040 5184
y(H)25 b(benchmark,)k(where)e(the)g(lineitem)h(table)f(and)f(the)h
(orders)f(table)i(are)e(nearly)2040 5255 y(sorted)18
b(on)g(the)g(\(joining\))i(order)e(k)o(e)o(ys.)23 b(W)-5
b(e)17 b(also)h(observ)o(e)g(joins)h(between)g(nearly-)2040
5326 y(sorted)f(relations)h(in)f(a)f(commercial)i(w)o(orkload.)p
eop end
%%Page: 2 2
TeXDict begin 2 1 bop -60 -146 1951 4 v -87 754 a @beginspecial
167 @llx 272 @lly 451 @urx 517 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/problem-actual2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: problem-actual2.eps
%%CreationDate: 03/01/2005  12:45:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   517
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   517
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    78  3406  2946 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 2) s
1279 2594 mt 1279 2566 L
1279  162 mt 1279  189 L
1209 2784 mt 
( 4) s
1972 2594 mt 1972 2566 L
1972  162 mt 1972  189 L
1902 2784 mt 
( 8) s
2664 2594 mt 2664 2566 L
2664  162 mt 2664  189 L
2571 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2130 mt  614 2130 L
3357 2130 mt 3329 2130 L
 459 2192 mt 
(2) s
 587 1667 mt  614 1667 L
3357 1667 mt 3329 1667 L
 459 1729 mt 
(4) s
 587 1204 mt  614 1204 L
3357 1204 mt 3329 1204 L
 459 1266 mt 
(6) s
 587  741 mt  614  741 L
3357  741 mt 3329  741 L
 459  803 mt 
(8) s
 587  277 mt  614  277 L
3357  277 mt 3329  277 L
 366  339 mt 
(10) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
693 57 692 280 693 592 692 1206 587 190 5 MP stroke
gr

0 j
41 71 -82 0 41 -71 1279 1443 4 MP
DP
41 71 -82 0 41 -71 1972 2035 4 MP
DP
41 71 -82 0 41 -71 2664 2315 4 MP
DP
41 71 -82 0 41 -71 3357 2372 4 MP
DP
gs 587 162 2771 2433 rc
693 3 692 29 693 165 692 443 587 1603 5 MP stroke
gr

1243 2046 mt 1315 2046 L
1279 2010 mt 1279 2082 L
1936 2211 mt 2008 2211 L
1972 2175 mt 1972 2247 L
2628 2240 mt 2700 2240 L
2664 2204 mt 2664 2276 L
3321 2243 mt 3393 2243 L
3357 2207 mt 3357 2279 L
1254 2021 mt 1304 2071 L
1304 2021 mt 1254 2071 L
1947 2186 mt 1997 2236 L
1997 2186 mt 1947 2236 L
2639 2215 mt 2689 2265 L
2689 2215 mt 2639 2265 L
3332 2218 mt 3382 2268 L
3382 2218 mt 3332 2268 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
693 16 692 0 693 20 692 266 587 1958 5 MP stroke
gr

c8
1243 2224 mt 1315 2224 L
1279 2188 mt 1279 2260 L
1936 2244 mt 2008 2244 L
1972 2208 mt 1972 2280 L
2628 2244 mt 2700 2244 L
2664 2208 mt 2664 2280 L
3321 2260 mt 3393 2260 L
3357 2224 mt 3357 2296 L
gs 587 162 2771 2433 rc
gr

0 sg
 912 2962 mt 
(num cpus used in join phase) s
 274 2317 mt  -90 rotate
(execution time \(G cycles\)) s
90 rotate
1768  434 mt 
(GRACE) s
1768  627 mt 
(cache part) s
1768  820 mt 
(cache pref) s
gs 1300 262 1345 611 rc
281 0 1393 376 2 MP stroke
gs 1461 303 147 147 rc
41 71 -82 0 41 -71 1534 423 4 MP
DP
gr

281 0 1393 569 2 MP stroke
gs 1461 496 147 147 rc
1498  569 mt 1570  569 L
1534  533 mt 1534  605 L
1509  544 mt 1559  594 L
1559  544 mt 1509  594 L
gr

c8
281 0 1393 763 2 MP stroke
gs 1461 690 147 147 rc
1498  763 mt 1570  763 L
1534  727 mt 1534  799 L
gr

gr

c8

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1057 w @beginspecial 167 @llx 272 @lly 451
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/problem-agg2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: problem-agg2.eps
%%CreationDate: 03/01/2005  12:42:11
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3406  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 2) s
1279 2594 mt 1279 2566 L
1279  162 mt 1279  189 L
1209 2784 mt 
( 4) s
1972 2594 mt 1972 2566 L
1972  162 mt 1972  189 L
1902 2784 mt 
( 8) s
2664 2594 mt 2664 2566 L
2664  162 mt 2664  189 L
2571 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2107 mt  614 2107 L
3357 2107 mt 3329 2107 L
 366 2169 mt 
(10) s
 587 1621 mt  614 1621 L
3357 1621 mt 3329 1621 L
 366 1683 mt 
(20) s
 587 1134 mt  614 1134 L
3357 1134 mt 3329 1134 L
 366 1196 mt 
(30) s
 587  648 mt  614  648 L
3357  648 mt 3329  648 L
 366  710 mt 
(40) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(50) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
693 -711 692 -78 693 -12 692 4 587 1584 5 MP stroke
gr

0 j
41 71 -82 0 41 -71 1279 1635 4 MP
DP
41 71 -82 0 41 -71 1972 1623 4 MP
DP
41 71 -82 0 41 -71 2664 1545 4 MP
DP
41 71 -82 0 41 -71 3357 834 4 MP
DP
gs 587 162 2771 2433 rc
693 -1167 692 -544 693 -183 692 -44 587 2177 5 MP stroke
gr

1243 2133 mt 1315 2133 L
1279 2097 mt 1279 2169 L
1936 1950 mt 2008 1950 L
1972 1914 mt 1972 1986 L
2628 1406 mt 2700 1406 L
2664 1370 mt 2664 1442 L
3321  239 mt 3393  239 L
3357  203 mt 3357  275 L
1254 2108 mt 1304 2158 L
1304 2108 mt 1254 2158 L
1947 1925 mt 1997 1975 L
1997 1925 mt 1947 1975 L
2639 1381 mt 2689 1431 L
2689 1381 mt 2639 1431 L
3332  214 mt 3382  264 L
3382  214 mt 3332  264 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
693 -1065 692 -589 693 -276 692 -44 587 2327 5 MP stroke
gr

c8
1243 2283 mt 1315 2283 L
1279 2247 mt 1279 2319 L
1936 2007 mt 2008 2007 L
1972 1971 mt 1972 2043 L
2628 1418 mt 2700 1418 L
2664 1382 mt 2664 1454 L
3321  353 mt 3393  353 L
3357  317 mt 3357  389 L
gs 587 162 2771 2433 rc
gr

0 sg
 912 2962 mt 
(num cpus used in join phase) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
1768  434 mt 
(GRACE) s
1768  627 mt 
(cache part) s
1768  820 mt 
(cache pref) s
gs 1300 262 1345 611 rc
281 0 1393 376 2 MP stroke
gs 1461 303 147 147 rc
41 71 -82 0 41 -71 1534 423 4 MP
DP
gr

281 0 1393 569 2 MP stroke
gs 1461 496 147 147 rc
1498  569 mt 1570  569 L
1534  533 mt 1534  605 L
1509  544 mt 1559  594 L
1559  544 mt 1509  594 L
gr

c8
281 0 1393 763 2 MP stroke
gs 1461 690 147 147 rc
1498  763 mt 1570  763 L
1534  727 mt 1534  799 L
gr

gr

c8

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial -44 844 a Fq(\(a\))20 b(Ex)o(ecution)e(time)i(v)n(arying)
184 b(\(b\))20 b(Aggre)o(gate)e(time)i(of)g(all)60 933
y(the)g(number)f(of)h(CPUs)297 b(CPUs)22 b(used)e(in)g(join)g(phase)p
-60 1023 V -60 1163 a(Figure)32 b(1:)51 b(Impact)32 b(of)g(memory)g
(bandwidth)f(sharing)g(on)i(join)-60 1253 y(phase)20
b(performance)d(in)j(an)h(SMP)f(system)-60 1426 y(ory)g(bandwidth)f(is)
j(shared)e(across)g(all)i(the)f(processors.)k(Because)-60
1516 y(cache)j(prefetching)d(essentially)j(trades)g(of)n(f)f(bandwidth)
f(for)i(re-)-60 1606 y(duced)i(e)o(x)o(ecution)f(time,)34
b(its)e(bene\002t)f(gradually)f(disappears)g(as)-60 1695
y(more)21 b(and)g(more)g(processors)g(eagerly)g(compete)g(for)g(the)h
(limited)-60 1785 y(memory)c(bandwidth.)40 1878 y(Figure)j(1)i(sho)n
(ws)f(the)g(join)h(phase)e(performance)f(of)i(joining)f(a)-60
1968 y(500MB)26 b(b)n(uild)g(relation)f(with)i(a)g(2GB)g(probe)e
(relation,)h(v)n(arying)-60 2057 y(the)j(number)e(of)i(CPUs)i(used)d
(in)i(the)f(join)g(phase.)51 b(In)28 b(each)h(e)o(x-)-60
2147 y(periment,)22 b(the)h(number)f(of)h(I/O)g(partitions)f(generated)
g(is)i(a)f(mul-)-60 2237 y(tiple)30 b(of)g(the)h(number)d(of)i(CPUs.)57
b(Then)29 b(the)h(same)h(join)f(phase)-60 2326 y(algorithm)d(is)i(run)e
(on)h(e)n(v)o(ery)f(CPU)i(to)f(process)g(dif)n(ferent)e(parti-)-60
2416 y(tions)d(in)f(parallel.)32 b(\(Please)23 b(see)g(Section)f(6.1)g
(for)g(setup)h(details.\))-60 2506 y(As)33 b(sho)n(wn)e(in)h(Figure)f
(1\(a\),)j(both)d(cache)h(partitioning)e(\()p Fo(cac)o(he)-60
2595 y(part)p Fq(\))g(and)g(cache)f(prefetching)f(\()p
Fo(cac)o(he)h(pr)m(ef)p Fq(\))h(perform)f(signi\002-)-60
2685 y(cantly)g(better)h(than)f(the)h(original)f(GRA)m(CE)h(hash)g
(join.)54 b(Cache)-60 2775 y(partitioning)18 b(is)j(w)o(orse)g(than)e
(cache)h(prefetching)e(because)i(of)g(the)-60 2864 y(re-partition)g
(cost.)30 b(The)22 b(ef)n(fect)f(of)h(memory)e(bandwidth)g(sharing)-60
2954 y(is)c(more)f(clearly)g(sho)n(wn)f(in)i(Figure)f(1\(b\),)g(which)f
(reports)h(the)g(total)-60 3044 y(aggre)o(gate)j(time)j(of)f(all)h
(CPUs)h(for)e(the)g(join)g(phase)h(for)e(this)i(same)-60
3133 y(e)o(xperiment.)30 b(W)-7 b(e)23 b(can)g(see)g(that)f(the)h
(bene\002t)f(of)g(cache)g(prefetch-)-60 3223 y(ing)i(gradually)e
(disappears)h(as)i(more)f(and)f(more)g(processors)h(are)-60
3312 y(competing)f(for)h(the)h(memory)f(bandwidth.)37
b(Cache)25 b(prefetching)-60 3402 y(becomes)16 b(e)n(v)o(en)g(w)o(orse)
h(than)g(the)g(GRA)m(CE)h(hash)f(join)g(when)f(there)-60
3492 y(are)22 b(16)f(processors)g(or)h(more.)29 b(Interestingly)-5
b(,)20 b(the)h(GRA)m(CE)i(hash)-60 3581 y(join)35 b(also)g(suf)n(fers)g
(from)f(memory)g(bandwidth)f(sharing)h(when)-60 3671
y(there)20 b(are)g(32)g(processors.)-60 3844 y Fj(1.2)82
b(The)21 b(Inspector)f(J)o(oin)g(A)n(ppr)o(oach)-60 3977
y Fq(T)-7 b(o)32 b(achie)n(v)o(e)f(good)g(performance)f(e)n(v)o(en)h
(when)g(memory)g(band-)-60 4067 y(width)d(is)i(limited,)h(we)e(need)f
(to)h(reduce)e(the)i Fo(number)h Fq(of)e(cache)-60 4157
y(misses)k(of)e(the)g(join)h(phase)f(algorithm,)h(in)g(addition)e(to)i
(apply-)-60 4246 y(ing)k(prefetching)e(techniques)h(to)h(hide)g(cache)g
(miss)h(latencies.)-60 4336 y(Our)23 b(approach)f(e)o(xploits)h(the)h
(multi-pass)f(structure)g(of)g(the)h(hash)-60 4426 y(join)h(algorithm.)
37 b(During)23 b(the)i(I/O)g(partitioning)e(phase,)i(inspec-)-60
4515 y(tor)j(joins)g(create)f(a)i(special)f(multi-\002lter)n(-based)e
(inde)o(x)h(with)h(lit-)-60 4605 y(tle)g(o)o(v)o(erhead;)i(this)e(inde)
o(x)f(will)h(enable)f(us)i(to)f(ha)n(v)o(e)f(\223in-place\224)-60
4695 y(cache-sized)21 b(sub-partitions)g(of)h(the)g(b)n(uild)g(table.)
32 b(Unlik)o(e)22 b(cache)-60 4784 y(partitioning)38
b(our)g(approach)g(reduces)g(the)i(number)e(of)h(cache)-60
4874 y(misses)f(without)f(mo)o(ving)e(tuples)j(around.)74
b(The)37 b(join)g(phase,)-60 4964 y(which)19 b(we)h(refer)f(to)g(as)h
(a)g Fo(cac)o(he-stationary)d(join)i(phase)g Fq(because)-60
5053 y(of)h(its)h(in-place)e(nature,)g(is)i(performed)d(using)i(the)g
(inde)o(x.)40 5146 y(Our)34 b(cache-stationary)f(join)i(phase)f(is)i
(specially)f(designed)-60 5236 y(for)i(joins)g(with)h(nearly)e(unique)g
(b)n(uild)h(join)h(k)o(e)o(ys,)j(which)c(in-)-60 5326
y(clude)f(primary-foreign)d(k)o(e)o(y)j(joins,)41 b(the)c(majority)f
(of)g(all)i(the)2040 -66 y(real-w)o(orld)29 b(joins.)56
b(On)31 b(the)g(other)f(hand,)i(if)e(probe)g(tuples)g(fre-)2040
23 y(quently)24 b(match)i(multiple)f(b)n(uild)g(tuples)h(in)g(a)g(gi)n
(v)o(en)f(join)h(query)-5 b(,)2040 113 y(the)26 b(cache-stationary)d
(join)i(phase)g(is)i(not)e(the)g(best)h(choice.)41 b(An)2040
203 y(inspector)28 b(join)g(can)h(detect)f(this)h(condition)e(during)g
(its)j(inspec-)2040 292 y(tion)21 b(and)f(switch)h(to)g(use)g(a)g(dif)n
(ferent)e(join)i(phase)f(algorithm)f(\(see)2040 382 y(Section)g(6.5)f
(for)h(details\).)25 b(Moreo)o(v)o(er)m(,)16 b(as)k(mentioned)d(abo)o
(v)o(e,)h(in-)2040 472 y(spector)29 b(joins)h(can)g(detect)f
(nearly-sorted)f(relations)h(\(after)g(an)o(y)2040 561
y(predicates)h(being)g(applied)g(before)f(the)i(join\).)57
b(Our)31 b(initial)g(in-)2040 651 y(tuition)g(w)o(as)h(that)f(a)h
(sort-mer)o(ge)d(based)i(join)g(phase)g(algorithm)2040
741 y(should)25 b(be)g(applied)g(in)g(this)i(case.)41
b(Ho)n(we)n(v)o(er)m(,)25 b(surprisingly)-5 b(,)25 b(the)2040
830 y(cache-stationary)g(join)i(phase)f(performs)g(equally)g(well,)j
(due)d(to)2040 920 y(the)20 b(ef)n(fecti)n(v)o(eness)f(of)h(its)h
(multi-\002lter)n(-based)e(inde)o(x.)2040 1078 y Fj(1.3)82
b(Contrib)n(utions)2040 1206 y Fq(This)32 b(paper)f(mak)o(es)g(the)h
(follo)n(wing)e(contrib)n(utions.)58 b(First,)35 b(we)2040
1296 y(propose)22 b(and)h(study)h(the)g(inspector)e(join,)j(which)e(to)
h(our)f(kno)n(wl-)2040 1386 y(edge,)j(is)h(the)f(\002rst)h(hash)e(join)
h(algorithm)e(that)i(e)o(xploits)f(the)h(free)2040 1475
y(information)16 b(obtained)i(from)f(one)i(pass)g(of)g(the)f(algorithm)
g(to)h(im-)2040 1565 y(pro)o(v)o(e)g(the)i(performance)d(of)j(a)g
(later)g(pass.)28 b(Second,)20 b(we)h(propose)2040 1655
y(a)27 b(specialized)f(inde)o(x)f(that)i(addresses)f(the)h(memory)d
(bandwidth)2040 1744 y(sharing)i(problem,)g(and)h(can)f(tak)o(e)h(adv)n
(antage)e(of)i(nearly-sorted)2040 1834 y(relations.)57
b(Moreo)o(v)o(er)m(,)30 b(we)h(utilize)h(cache)e(prefetching)f(to)i
(im-)2040 1924 y(pro)o(v)o(e)19 b(the)i(rob)n(ustness)g(of)g(inspector)
f(joins)h(in)g(the)g(f)o(ace)g(of)g(cache)2040 2013 y(interference.)43
b(Third,)27 b(we)g(present)f(an)h(illustrati)n(v)o(e)f(e)o(xample)g(of)
2040 2103 y(ho)n(w)21 b(inspector)g(joins)g(can)h(use)g(its)g
(collected)f(statistics)i(to)f(select)2040 2193 y(between)e(tw)o(o)g
(join)g(phase)g(algorithms)f(for)h(the)g(gi)n(v)o(en)f(query)g(and)2040
2282 y(data.)39 b(Finally)-5 b(,)25 b(our)f(e)o(xperiments)f
(demonstrate)g(that)i(as)g(we)g(run)2040 2372 y(on)e(8)g(or)f(more)h
(processors,)f(inspector)g(joins)h(achie)n(v)o(e)f(1.1\2261.4X)2040
2462 y(speedups)30 b(o)o(v)o(er)f(pre)n(vious)g(state-of-the-art)g
(cache)h(prefetching)2040 2551 y(and)36 b(cache)g(partitioning)f
(algorithms,)k(with)e(the)g(speedup)e(in-)2040 2641 y(creasing)19
b(as)i(the)f(number)f(of)h(processors)f(increases.)2140
2731 y(The)24 b(paper)g(is)i(or)o(ganized)c(as)k(follo)n(ws.)39
b(Section)25 b(2)g(discusses)2040 2821 y(related)i(w)o(ork.)48
b(Section)28 b(3)g(illustrates)g(the)g(high)g(le)n(v)o(el)f(ideas)h(in)
2040 2910 y(our)h(solution.)51 b(Section)29 b(4)g(and)g(5)g(describe)g
(our)f(algorithms)g(in)2040 3000 y(detail.)d(Section)19
b(6)g(presents)g(our)g(e)o(xperimental)e(results.)25
b(Finally)-5 b(,)2040 3090 y(Section)20 b(7)g(concludes)f(the)h(paper)
-5 b(.)2040 3288 y Fn(2)99 b(Related)26 b(W)-7 b(ork)2040
3442 y Fj(Hash)23 b(join)g(cache)f(perf)n(ormance.)55
b Fq(Hash)23 b(join)g(has)g(been)f(stud-)2040 3532 y(ied)27
b(e)o(xtensi)n(v)o(ely)f(o)o(v)o(er)g(the)h(past)h(tw)o(o)g(decades)e
([5)o(,)i(10)o(,)g(11)o(,)g(16)o(].)2040 3622 y(Because)j(of)g(its)h
(I/O)f(partitioning)f(approach,)h(a)h(hash)e(join)h(se-)2040
3711 y(quentially)24 b(visits)j(the)e(disk)g(pages)h(in)f(source)g
(relations)g(and)g(in-)2040 3801 y(termediate)i(partitions.)47
b(By)28 b(using)f(adv)n(anced)f(I/O)i(techniques,)2040
3891 y(such)21 b(as)h(I/O)g(prefetching,)d(hash)i(join)g(is)h(CPU)h
(bound)c(if)j(there)f(is)2040 3980 y(suf)n(\002cient)g(I/O)h(bandwidth)
d([4].)29 b(Therefore,)19 b(this)j(paper)f(focuses)2040
4070 y(on)f(the)g(CPU)h(cache)f(performance)d(of)j(the)g(algorithm.)
2140 4160 y(Pre)n(vious)36 b(studies)i(sho)n(w)f(ho)n(w)g(cache)g
(partitioning)f(and/or)2040 4250 y(cache)26 b(prefetching)f(can)h(be)h
(used)g(to)g(impro)o(v)o(e)d(the)j(CPU)h(cache)2040 4339
y(performance)39 b(of)i(hash)h(joins.)90 b(Shatdal)41
b Fo(et)h(al.)90 b Fq(sho)n(w)41 b(that)2040 4429 y(cache)15
b(partitioning)f(achie)n(v)o(es)h(6-10\045)f(impro)o(v)o(ement)f(for)i
(joining)2040 4519 y(memory-resident)23 b(relations)j(with)h(100B)e
(tuples)i([17)n(].)44 b(Boncz,)2040 4608 y(Mane)o(gold)32
b(and)i(K)n(ersten)f(propose)g(using)g(multiple)h(passes)g(in)2040
4698 y(cache)21 b(partitioning)e(to)i(a)n(v)n(oid)g(cache)f(and)h(TLB)g
(thrashing)f(when)2040 4788 y(joining)27 b(v)o(ertically-partitioned)e
(relations)j(\(essentially)g(joining)2040 4877 y(tw)o(o)38
b(8B)g(columns\))e([3,)i(12)o(].)77 b(Ho)n(we)n(v)o(er)m(,)40
b(Chen)e Fo(et)g(al.)g Fq(sho)n(w)2040 4967 y(that)24
b(when)g(the)g(tuple)f(size)i(is)g(more)e(than)h(20B,)f(the)h
(re-partition)2040 5057 y(cost)k(of)e(cache)h(partitioning)e(is)k(so)e
(signi\002cant)g(that)g(cache)g(par)n(-)2040 5146 y(titioning)c(is)j
(at)e(least)h(50\045)g(w)o(orse)f(than)g(cache)f(prefetching)f([4].)
2040 5236 y(Chen)30 b Fo(et)h(al.)f Fq(propose)f(e)o(xploiting)g(the)h
(inter)n(-tuple)f(parallelism)2040 5326 y(to)c(o)o(v)o(erlap)d(the)j
(cache)f(misses)h(of)g(a)g(tuple)f(with)g(the)h(processing)p
eop end
%%Page: 3 3
TeXDict begin 3 2 bop -60 -66 a Fq(of)21 b(multiple)g(tuples)g([4)o(].)
29 b(The)o(y)21 b(propose)f(tw)o(o)h(prefetching)e(algo-)-60
23 y(rithms,)h(group)e(prefetching)g(and)i(softw)o(are-pipelined)d
(prefetch-)-60 113 y(ing,)i(and)f(e)n(v)n(aluate)g(their)g(performance)
e(through)h(detailed)h(c)o(ycle-)-60 203 y(by-c)o(ycle)g(simulations.)
650 172 y Fk(2)40 293 y Fq(As)51 b(sho)n(wn)g(in)g(Figure)f(1,)59
b(the)51 b(performance)d(of)j(cache)-60 383 y(prefetching)35
b(de)o(grades)g(signi\002cantly)i(when)f(more)h(and)f(more)-60
473 y(CPUs)22 b(are)f(eagerly)e(competing)g(for)h(the)h(memory)e
(bandwidth)f(in)-60 562 y(a)j(multiprocessor)e(system.)27
b(Our)21 b(inspector)f(joins)h(e)o(xploit)f(infor)n(-)-60
652 y(mation)c(collected)g(in)h(the)g(I/O)g(partitioning)e(phase)h(to)h
(\002t)g(address-)-60 742 y(range-based)c(sub-partitions)h(in)h(cache,)
h(thus)f(reducing)e(the)j(num-)-60 831 y(ber)29 b(of)f(cache)h(misses)h
(without)f(incurring)e(additional)g(cop)o(ying)-60 921
y(cost.)73 b(Our)23 b(approach)f(is)j(ef)n(fecti)n(v)o(e)d(for)i
(tuples)f(that)h(are)g(20B)g(or)-60 1011 y(more.)g(F)o(or)c(smaller)g
(tuples,)g(we)g(re)n(v)o(ert)g(to)g(cache)g(partitioning.)40
1119 y Fj(Inspection)28 b(concept.)77 b Fq(Se)n(v)o(eral)27
b(studies)i(e)o(xploit)e(informa-)-60 1209 y(tion)22
b(collected)g(while)h(processing)f(queries)g(pre)n(viously)e(submit-)
-60 1299 y(ted)32 b(to)g(the)h(DBMS:)g(reusing)e(partial)h(query)e
(results)j(in)f(multi-)-60 1388 y(query)d(optimization)f([15)o(],)k
(maintaining)c(and)i(using)f(material-)-60 1478 y(ized)i(vie)n(ws)h([1)
o(],)i(creating)c(and)h(using)f(join)h(indices)g([19)o(],)j(and)-60
1568 y(collecting)d(up-to-date)e(statistics)k(for)e(future)g(query)f
(optimiza-)-60 1657 y(tions)c([18)o(].)44 b(Unlik)o(e)26
b(these)h(studies)f(the)h(inspection)e(and)h(use)h(of)-60
1747 y(the)35 b(information)e(in)i(our)g(approach)e(are)i(speci\002c)h
(to)f(a)h(single)-60 1837 y(query)-5 b(.)52 b(Therefore,)30
b(we)g(a)n(v)n(oid)g(the)g(comple)o(xities)e(of)i(deciding)-60
1926 y(what)17 b(information)d(to)j(k)o(eep)f(and)g(ho)n(w)g(to)h
(reuse)g(data)f(across)h(mul-)-60 2016 y(tiple)28 b(related)f(queries.)
46 b(Moreo)o(v)o(er)m(,)26 b(our)h(approach)e(is)k(ef)n(fecti)n(v)o(e)
-60 2105 y(for)20 b(an)o(y)f(join)h(query)f(and)g(predicate)g
(combinations.)40 2196 y(Dynamic)49 b(re-optimization)f(techniques)h
(augment)g(query)-60 2286 y(plans)20 b(with)h(special)g(operators)e
(that)i(collect)g(statistics)h(about)e(the)-60 2375 y(actual)25
b(data)h(during)d(the)j(e)o(x)o(ecution)d(of)i(a)h(query)e([9)o(,)i(13)
o(].)41 b(If)26 b(the)-60 2465 y(operator)e(detects)j(that)f(the)g
(actual)g(statistics)i(de)n(viate)e(consider)n(-)-60
2555 y(ably)f(from)g(the)g(optimizer')-5 b(s)25 b(estimates,)i(the)e
(current)g(e)o(x)o(ecution)-60 2644 y(plan)19 b(is)i(stopped)e(and)g(a)
i(ne)n(w)f(plan)f(is)i(used)f(for)f(the)h(remainder)e(of)-60
2734 y(the)f(query)-5 b(.)22 b(Compared)16 b(to)i(the)f
Fo(global)f Fq(re-optimization)f(of)i(query)-60 2824
y(plans,)27 b(our)f(inspection)f(approach)f(can)i(be)h(re)o(garded)c
(as)k(a)g Fo(com-)-60 2913 y(plementary)-5 b(,)34 b(local)e
Fq(optimization)f(technique)f(inside)j(the)f(hash)-60
3003 y(join)c(operator)-5 b(.)46 b(When)28 b(hash)f(joins)h(are)g(used)
g(in)g(the)g(e)o(x)o(ecution)-60 3093 y(plan,)16 b(our)f(inspection)f
(approach)g(creates)i(specialized)f(inde)o(x)o(es)f(to)-60
3182 y(enable)24 b(the)h(no)o(v)o(el)e(cache-stationary)f(optimization)
h(and)h(allo)n(ws)-60 3272 y(informed)d(choice)g(of)i(join)f(phase)g
(algorithms.)31 b(Because)23 b(the)g(in-)-60 3362 y(de)o(x)o(es)28
b(and)h(informed)e(choice)h(account)g(for)g(which)h(tuples)g(will)-60
3451 y(actually)22 b(join)h(as)h(well)f(as)h(their)e(physical)g(layout)
g(within)h(the)g(in-)-60 3541 y(termediate)d(partitions,)g(this)i
(functionality)c(cannot)i(be)h(achie)n(v)o(ed)-60 3631
y(by)f(operators)e Fo(outside)i Fq(the)g(join)g(operator)-5
b(.)-60 3832 y Fn(3)99 b(Inspector)26 b(J)o(oins:)k(Ov)o(er)o(view)-60
3969 y Fq(In)g(this)h(section,)i(we)e(describe)e(\(i\))i(ho)n(w)f(we)g
(create)h(the)f(multi-)-60 4059 y(\002lters)25 b(as)g(a)f(result)g(of)g
(data)g(inspection,)g(\(ii\))g(ho)n(w)g(we)g(minimize)-60
4149 y(the)36 b(number)e(of)i(cache)f(misses)i(without)e(mo)o(ving)f
(an)o(y)i(tuples)-60 4238 y(around,)24 b(\(iii\))h(ho)n(w)g(we)g(e)o
(xploit)f(cache)g(prefetching)f(to)i(hide)g(the)-60 4328
y(remaining)c(cache)h(misses)h(and)f(to)g(impro)o(v)o(e)e(rob)n
(ustness)i(against)-60 4418 y(cache)j(interference,)f(and)g(\(i)n(v\))h
(ho)n(w)f(we)i(choose)e(join)h(phase)f(al-)-60 4507 y(gorithms)19
b(based)h(on)g(obtained)e(information)g(about)h(the)h(data.)-60
4669 y Fj(3.1)82 b(Inspecting)21 b(the)f(Data:)k(Multi-Filters)-60
4798 y Fq(While)47 b(partitioning)e(tables)i(for)f(a)i(hash)e(join,)53
b(commercial)-60 4888 y(DBMS)24 b(often)e(construct)g(a)h(\002lter)g
(to)g(quickly)f(discard)g(probe)g(tu-)p -60 4963 780
4 v 30 5018 a Fi(2)60 5042 y Fh(The)j(cache)i(prefetching)h(algorithms)
g(require)f(f)o(aulting)h(prefetch)f(instruc-)-60 5113
y(tions,)j(meaning)f(that)f(a)f(prefetch)j(should)e(succeed)h(e)n(v)o
(en)f(if)f(it)h(incurs)g(a)g(TLB)-60 5184 y(miss.)41
b(IA64)24 b(processors)g(support)h(f)o(aulting)i(prefetches)f([7].)41
b(W)-5 b(e)24 b(belie)n(v)o(e)i(that)-60 5255 y(since)18
b(f)o(aulting)h(prefetches)g(are)f(v)o(ery)f(important)i(to)e(database)
i(applications,)h(the)o(y)-60 5326 y(will)e(be)f(supported)i(in)e(more)
g(and)h(more)f(processors.)p 2040 -146 1951 4 v 2061
814 a @beginspecial 0 @llx 0 @lly 173 @urx 226 @ury 1080
@rhi @setspecial
%%BeginDocument: graphs/filter-org.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: filter-org.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 13:59:06 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 173 226
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 226 moveto 0 0 lineto 173 0 lineto 173 226 lineto closepath clip newpath
0.7 225.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 1800 555 m 2850 555 l 2850 1327 l 1800 1327 l
 cp gs col0 s gr 
% Polyline
n 1800 2408 m 2850 2408 l 2850 3180 l 1800 3180 l
 cp gs col0 s gr 
% Polyline
n 1800 1481 m 2850 1481 l 2850 2254 l 1800 2254 l
 cp gs col0 s gr 
% Polyline
n 1800 1481 m 2850 1481 l 2850 2254 l 1800 2254 l
 cp gs col0 s gr 
% Ellipse
n 1425 1905 106 106 0 360 DrawEllipse gs col0 s gr

% Polyline
n 0 630 m 1050 630 l 1050 3180 l 0 3180 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1335 1942 m 1335 1882 l 1150 1882 l 1300 1912 l 1150 1942 l cp
eoclip
n 1050 1912 m
 1320 1912 l gs col0 s gr gr

% arrowhead
n 1150 1942 m 1300 1912 l 1150 1882 l 1180 1912 l 1150 1942 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1833 926 m 1776 905 l 1713 1079 l 1793 949 l 1769 1100 l cp
eoclip
n 1477 1815 m
 1800 930 l gs col0 s gr gr

% arrowhead
n 1769 1100 m 1793 949 l 1713 1079 l 1751 1061 l 1769 1100 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1815 1950 m 1815 1890 l 1630 1890 l 1780 1920 l 1630 1950 l cp
eoclip
n 1530 1920 m
 1800 1920 l gs col0 s gr gr

% arrowhead
n 1630 1950 m 1780 1920 l 1630 1890 l 1660 1920 l 1630 1950 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1769 2836 m 1825 2814 l 1758 2643 l 1785 2794 l 1702 2665 l cp
eoclip
n 1477 2010 m
 1792 2812 l gs col0 s gr gr

% arrowhead
n 1702 2665 m 1785 2794 l 1758 2643 l 1741 2682 l 1702 2665 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 270.00 scf sf
75 2205 m
gs 1 -1 sc (Relation) col0 sh gr
/Times-Roman ff 270.00 scf sf
1395 195 m
gs 1 -1 sc (Intermediate) col0 sh gr
/Times-Roman ff 270.00 scf sf
1620 465 m
gs 1 -1 sc (Partitions) col0 sh gr
/Times-Roman ff 270.00 scf sf
210 1830 m
gs 1 -1 sc (Build) col0 sh gr
% Polyline
n 0 3600 m 2850 3600 l 2850 3750 l 0 3750 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
555 3510 m
gs 1 -1 sc (A Single Filter) col0 sh gr
/Times-Roman ff 240.00 scf sf
1125 2475 m
gs 1 -1 sc (Hash) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 848 w @beginspecial 0 @llx 0 @lly 270 @urx
226 @ury 1080 @rhi @setspecial
%%BeginDocument: graphs/filter-new.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: filter-new.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 14:05:37 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 270 226
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 226 moveto 0 0 lineto 270 0 lineto 270 226 lineto closepath clip newpath
-0.2 226.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 1815 555 m 2865 555 l 2865 1327 l 1815 1327 l
 cp gs col0 s gr 
% Polyline
n 1815 2408 m 2865 2408 l 2865 3180 l 1815 3180 l
 cp gs col0 s gr 
% Polyline
n 1815 1481 m 2865 1481 l 2865 2254 l 1815 2254 l
 cp gs col0 s gr 
% Polyline
n 1815 1481 m 2865 1481 l 2865 2254 l 1815 2254 l
 cp gs col0 s gr 
% Ellipse
n 1440 1905 106 106 0 360 DrawEllipse gs col0 s gr

% Polyline
n 3165 705 m 4215 705 l 4215 855 l 3165 855 l
 cp gs col0 s gr 
% Polyline
n 3165 930 m 4215 930 l 4215 1080 l 3165 1080 l
 cp gs col0 s gr 
% Polyline
n 3165 1155 m 4215 1155 l 4215 1305 l 3165 1305 l
 cp gs col0 s gr 
% Polyline
n 3165 2505 m 4215 2505 l 4215 2655 l 3165 2655 l
 cp gs col0 s gr 
% Polyline
n 3165 2730 m 4215 2730 l 4215 2880 l 3165 2880 l
 cp gs col0 s gr 
% Polyline
n 3165 2955 m 4215 2955 l 4215 3105 l 3165 3105 l
 cp gs col0 s gr 
% Polyline
n 3165 1605 m 4215 1605 l 4215 1755 l 3165 1755 l
 cp gs col0 s gr 
% Polyline
n 3165 1830 m 4215 1830 l 4215 1980 l 3165 1980 l
 cp gs col0 s gr 
% Polyline
n 3165 2055 m 4215 2055 l 4215 2205 l 3165 2205 l
 cp gs col0 s gr 
% Polyline
n 3165 1605 m 4215 1605 l 4215 1755 l 3165 1755 l
 cp gs col0 s gr 
% Polyline
n 3165 1830 m 4215 1830 l 4215 1980 l 3165 1980 l
 cp gs col0 s gr 
% Polyline
n 3165 2055 m 4215 2055 l 4215 2205 l 3165 2205 l
 cp gs col0 s gr 
% Polyline
n 15 630 m 1065 630 l 1065 3180 l 15 3180 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1350 1942 m 1350 1882 l 1165 1882 l 1315 1912 l 1165 1942 l cp
eoclip
n 1065 1912 m
 1335 1912 l gs col0 s gr gr

% arrowhead
n 1165 1942 m 1315 1912 l 1165 1882 l 1195 1912 l 1165 1942 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1848 926 m 1791 905 l 1728 1079 l 1808 949 l 1784 1100 l cp
eoclip
n 1492 1815 m
 1815 930 l gs col0 s gr gr

% arrowhead
n 1784 1100 m 1808 949 l 1728 1079 l 1766 1061 l 1784 1100 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1830 1950 m 1830 1890 l 1645 1890 l 1795 1920 l 1645 1950 l cp
eoclip
n 1545 1920 m
 1815 1920 l gs col0 s gr gr

% arrowhead
n 1645 1950 m 1795 1920 l 1645 1890 l 1675 1920 l 1645 1950 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1784 2836 m 1840 2814 l 1773 2643 l 1800 2794 l 1717 2665 l cp
eoclip
n 1492 2010 m
 1807 2812 l gs col0 s gr gr

% arrowhead
n 1717 2665 m 1800 2794 l 1773 2643 l 1756 2682 l 1717 2665 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 270.00 scf sf
90 2205 m
gs 1 -1 sc (Relation) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
1440 465 m
gs 1 -1 sc (Partitions) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
1200 195 m
gs 1 -1 sc (Intermediate) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
2910 510 m
gs 1 -1 sc (Sub-partition) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
3015 240 m
gs 1 -1 sc (A Filter per) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
240 1845 m
gs 1 -1 sc (Build) col0 sh gr
% Polyline
 [15 45] 45 sd
n 1815 810 m
 2865 810 l gs col0 s gr  [] 0 sd
% Polyline
n 30 3750 m
 4080 3750 l gs col7 s gr 
% Polyline
 [15 45] 45 sd
n 1815 2925 m
 2865 2925 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1815 2670 m
 2865 2670 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1815 1995 m
 2865 1995 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1815 1725 m
 2865 1725 l gs col0 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 1815 1065 m
 2865 1065 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
2916 2809 m 2861 2833 l 2921 2972 l 2902 2850 l 2976 2948 l cp
eoclip
n 3030 3150 m
 2895 2835 l gs col0 s gr gr

% arrowhead
n 2976 2948 m 2902 2850 l 2921 2972 l  col0 s
/Times-Roman-iso ff 270.00 scf sf
1860 3435 m
gs 1 -1 sc (Address-range based) col0 sh gr
/Times-Roman-iso ff 270.00 scf sf
2355 3690 m
gs 1 -1 sc (Sub-partitions) col0 sh gr
/Times-Roman-iso ff 240.00 scf sf
1140 2520 m
gs 1 -1 sc (Hash) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 2046 904 a Fq(\(a\))j(Single-\002lter)g(scheme)241
b(\(b\))20 b(Multi-\002lter)f(scheme)p 2040 994 V 2187
1133 a(Figure)g(2:)26 b(Using)20 b(multiple)f(\002lters)i(to)g(inspect)
f(the)g(data)2040 1385 y(ples)28 b(that)g(do)f(not)g(ha)n(v)o(e)g(an)o
(y)g(matches)g([11)n(].)48 b(Such)27 b(\002lters)h(may)2040
1475 y(impro)o(v)o(e)20 b(join)i(performance)e(signi\002cantly)h(when)h
(a)g(lar)o(ge)g(num-)2040 1565 y(ber)30 b(of)h(probe)e(tuples)h(do)h
(not)f(match)g(an)o(y)g(tuples)g(in)h(the)g(b)n(uild)2040
1654 y(relation)22 b(\(e.g.,)g(there)g(is)i(a)f(predicate)f(on)g(the)h
(b)n(uild)f(relation)g(in)h(a)2040 1744 y(foreign-k)o(e)o(y)15
b(join\).)24 b(As)19 b(sho)n(wn)f(in)h(Figure)f(2\(a\),)f(a)i(single)g
(\002lter)g(is)2040 1834 y(computed)f(from)i(all)g(the)h(b)n(uild)f
(tuples)g(to)g(approximately)e(repre-)2040 1923 y(sent)23
b(all)g(the)g(join)g(attrib)n(ute)f(v)n(alues)g(in)h(the)g(b)n(uild)f
(relation.)32 b(T)-6 b(est-)2040 2013 y(ing)26 b(a)g(v)n(alue)f
(against)h(the)g(\002lter)g(is)h(conserv)n(ati)n(v)o(e:)34
b(while)26 b(a)h(ne)o(g-)2040 2103 y(ati)n(v)o(e)e(answer)f(means)h
(that)g(the)g(v)n(alue)g(is)h(not)f(in)g(the)g(\002lter)m(,)h(f)o(alse)
2040 2192 y(positi)n(v)o(es)21 b(may)f(occur)g(with)i(a)f(lo)n(w)g
(probability)-5 b(.)26 b(\(Bloom)20 b(\002lters,)2040
2282 y(detailed)k(in)h(Section)f(4,)h(are)g(a)g(typical)f(e)o
(xample.\))36 b(When)24 b(parti-)2040 2372 y(tioning)g(the)h(probe)f
(relation,)i(the)f(algorithm)f(tests)i(e)n(v)o(ery)e(probe)2040
2461 y(tuple)29 b(against)g(the)g(\002lter)-5 b(.)53
b(If)30 b(the)f(test)h(result)g(is)g(ne)o(gati)n(v)o(e)d(for)i(a)2040
2551 y(tuple,)19 b(the)h(algorithm)f(simply)g(drops)h(the)g(tuple,)f
(thus)h(sa)n(ving)g(the)2040 2641 y(cost)f(of)g(writing)f(it)h(to)g
(disk)g(and)f(processing)f(it)j(in)f(the)g(join)f(phase.)2140
2773 y(Instead)25 b(of)h(using)g(a)h(single)f(lar)o(ge)g(\002lter)h
(that)f(represents)g(the)2040 2862 y(entire)38 b(b)n(uild)f(relation,)
42 b(the)c(inspector)f(join)h(creates)g(multiple)2040
2952 y(shorter)29 b(\002lters)i(\(illustrated)f(in)g(Figure)g
(2\(b\)\),)h(each)f(represent-)2040 3042 y(ing)24 b(a)g(disjoint)g
(subset)g(of)f(b)n(uild)h(tuples.)36 b(T)-6 b(esting)24
b(a)g(probe)f(tuple)2040 3131 y(against)d(the)g(\002lters)h(will)g
(\(conserv)n(ati)n(v)o(ely\))c(sho)n(w)i(which)h(subsets)2040
3221 y(the)33 b(probe)e(tuple)i(has)g(matches)f(in.)63
b(The)33 b(b)n(uild)f(relation)g(sub-)2040 3311 y(sets)18
b(are)e(address-range-based)d(sub-partitions;)j(that)h(is,)g(a)g
(subset)2040 3400 y(represents)f(all)h(b)n(uild)g(tuples)f(in)h
Fg(K)23 b Fq(consecuti)n(v)o(e)15 b(pages)i(in)g(a)g(b)n(uild)2040
3490 y(partition.)41 b Fg(K)32 b Fq(is)27 b(chosen)e(to)h(mak)o(e)f
(the)h(sub-partition)e(\002t)j(in)f(the)2040 3580 y(cache)19
b(in)h(the)g(join)f(phase,)g(as)i(will)f(be)g(described)e(in)i(Section)
f(3.2.)2140 3712 y(The)27 b(inspector)f(join)h(b)n(uilds)g(the)h(set)g
(of)f(small)h(\002lters)g(by)f(in-)2040 3801 y(specting)16
b(the)h(b)n(uild)g(relation)f(during)g(the)h(partitioning)e(phase.)23
b(T)-7 b(o)2040 3891 y(k)o(eep)26 b(track)g(of)h(the)g(sub-partition)d
(boundaries,)i(we)h(use)g(a)g(page)2040 3981 y(counter)20
b(for)h(e)n(v)o(ery)f(partition.)28 b(Then,)20 b(e)n(v)o(ery)g(b)n
(uild)h(tuple)g(is)i(used)2040 4070 y(to)e(compute)f(the)h(\002lter)h
(corresponding)c(to)j(the)g(sub-partition)f(the)2040
4160 y(tuple)32 b(belongs)g(to.)63 b(Note)32 b(that)h(the)g
(multi-\002lter)f(scheme)g(tests)2040 4250 y(\002lters)d(dif)n
(ferently)d(than)h(the)h(single-\002lter)f(scheme.)48
b(F)o(or)28 b(e)n(v)o(ery)2040 4339 y(probe)h(tuple,)j(after)e
(computing)e(its)j(destination)e(partition,)j(the)2040
4429 y(algorithm)15 b(checks)g(the)i(join)e(attrib)n(ute)h(v)n(alue)g
(in)g(the)g(tuple)g(against)2040 4519 y Fo(all)h Fq(the)f(\002lters)h
(in)g(the)f(partition.)22 b(The)16 b(algorithm)f(drops)h(the)g(probe)
2040 4608 y(tuple)26 b(only)g(if)h Fo(all)g Fq(\002lter)g(tests)h(for)e
(all)i(sub-partitions)d(are)h(ne)o(ga-)2040 4698 y(ti)n(v)o(e.)55
b(The)30 b(positi)n(v)o(e)f(tests)j(sho)n(w)e(which)f
(sub-partition\(s\))f(may)2040 4788 y(contain)d(matching)g(b)n(uild)h
(tuples)g(of)g(the)g(probe)f(tuple,)i(and)f(this)2040
4877 y(information)19 b(is)k(used)e(in)g(the)h(join)f(phase)g(of)g(the)
h(inspector)e(algo-)2040 4967 y(rithm.)33 b(Section)23
b(4)g(demonstrates)f(that)h(our)g(multi-\002lter)f(scheme)2040
5057 y(incurs)e(the)g(same)h(number)d(of)i(cache)g(misses)i(as)f(the)f
(single-\002lter)2040 5146 y(scheme)f(during)e(the)i(inspection)g(and)f
(\002lter)n(-construction)f(phase,)2040 5236 y(and)31
b(it)g(can)g(achie)n(v)o(e)f(the)i(same)f(aggre)o(gate)e(f)o(alse)i
(positi)n(v)o(e)g(rate)2040 5326 y(with)20 b(moderate)f(memory)g(space)
h(requirements.)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop -60 -146 4050 4 v -85 858 a @beginspecial
0 @llx 0 @lly 236 @urx 190 @ury 1303 @rwi @setspecial
%%BeginDocument: graphs/join-memsized.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: join-memsized.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 14:10:45 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 236 190
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 190 moveto 0 0 lineto 236 0 lineto 236 190 lineto closepath clip newpath
0.7 194.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 0 900 m 1200 900 l 1200 1050 l 0 1050 l
 cp gs col0 s gr 
% Polyline
n 0 1050 m 1200 1050 l 1200 1200 l 0 1200 l
 cp gs col0 s gr 
% Polyline
n 0 1200 m 1200 1200 l 1200 1350 l 0 1350 l
 cp gs col0 s gr 
% Polyline
n 0 1350 m 1200 1350 l 1200 1500 l 0 1500 l
 cp gs col0 s gr 
% Polyline
n 0 1500 m 1200 1500 l 1200 1650 l 0 1650 l
 cp gs col0 s gr 
% Polyline
n 0 1650 m 1200 1650 l 1200 1800 l 0 1800 l
 cp gs col0 s gr 
% Polyline
n 0 1800 m 1200 1800 l 1200 1950 l 0 1950 l
 cp gs col0 s gr 
% Polyline
n 0 1950 m 1200 1950 l 1200 2100 l 0 2100 l
 cp gs col0 s gr 
% Polyline
n 0 2100 m 1200 2100 l 1200 2250 l 0 2250 l
 cp gs col0 s gr 
% Polyline
n 1725 900 m 1950 900 l 1950 1050 l 1725 1050 l
 cp gs col0 s gr 
% Polyline
n 1725 1050 m 1950 1050 l 1950 1200 l 1725 1200 l
 cp gs col0 s gr 
% Polyline
n 1725 1200 m 1950 1200 l 1950 1350 l 1725 1350 l
 cp gs col0 s gr 
% Polyline
n 1725 1350 m 1950 1350 l 1950 1500 l 1725 1500 l
 cp gs col0 s gr 
% Polyline
n 1725 1500 m 1950 1500 l 1950 1650 l 1725 1650 l
 cp gs col0 s gr 
% Polyline
n 1725 1650 m 1950 1650 l 1950 1800 l 1725 1800 l
 cp gs col0 s gr 
% Polyline
n 1725 1800 m 1950 1800 l 1950 1950 l 1725 1950 l
 cp gs col0 s gr 
% Polyline
n 1725 1950 m 1950 1950 l 1950 2100 l 1725 2100 l
 cp gs col0 s gr 
% Polyline
n 1725 2100 m 1950 2100 l 1950 2250 l 1725 2250 l
 cp gs col0 s gr 
% Polyline
n 2700 300 m 3900 300 l 3900 450 l 2700 450 l
 cp gs col0 s gr 
% Polyline
n 2700 450 m 3900 450 l 3900 600 l 2700 600 l
 cp gs col0 s gr 
% Polyline
n 2700 600 m 3900 600 l 3900 750 l 2700 750 l
 cp gs col0 s gr 
% Polyline
n 2700 750 m 3900 750 l 3900 900 l 2700 900 l
 cp gs col0 s gr 
% Polyline
n 2700 900 m 3900 900 l 3900 1050 l 2700 1050 l
 cp gs col0 s gr 
% Polyline
n 2700 1050 m 3900 1050 l 3900 1200 l 2700 1200 l
 cp gs col0 s gr 
% Polyline
n 2700 1200 m 3900 1200 l 3900 1350 l 2700 1350 l
 cp gs col0 s gr 
% Polyline
n 2700 1350 m 3900 1350 l 3900 1500 l 2700 1500 l
 cp gs col0 s gr 
% Polyline
n 2700 1500 m 3900 1500 l 3900 1650 l 2700 1650 l
 cp gs col0 s gr 
% Polyline
n 2700 1650 m 3900 1650 l 3900 1800 l 2700 1800 l
 cp gs col0 s gr 
% Polyline
n 2700 1800 m 3900 1800 l 3900 1950 l 2700 1950 l
 cp gs col0 s gr 
% Polyline
n 2700 1950 m 3900 1950 l 3900 2100 l 2700 2100 l
 cp gs col0 s gr 
% Polyline
n 2700 2100 m 3900 2100 l 3900 2250 l 2700 2250 l
 cp gs col0 s gr 
% Polyline
n 2700 2250 m 3900 2250 l 3900 2400 l 2700 2400 l
 cp gs col0 s gr 
% Polyline
n 2700 2400 m 3900 2400 l 3900 2550 l 2700 2550 l
 cp gs col0 s gr 
% Polyline
n 2700 2550 m 3900 2550 l 3900 2700 l 2700 2700 l
 cp gs col0 s gr 
% Polyline
n 2700 2700 m 3900 2700 l 3900 2850 l 2700 2850 l
 cp gs col0 s gr 
% Polyline
n 2700 2850 m 3900 2850 l 3900 3000 l 2700 3000 l
 cp gs col0 s gr 
% Polyline
gs  clippath
2067 1194 m 2115 1230 l 2226 1082 l 2112 1184 l 2178 1046 l cp
eoclip
n 2550 600 m
 2100 1200 l gs col0 s gr gr

% arrowhead
n 2178 1046 m 2112 1184 l 2226 1082 l 2184 1088 l 2178 1046 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
n 150 3225 m
 3450 3225 l gs col7 s gr 
% Polyline
gs  clippath
1208 942 m 1169 988 l 1284 1086 l 1213 986 l 1323 1041 l cp
eoclip
n 1200 975 m
 1725 1425 l gs col0 s gr gr

% arrowhead
n 1323 1041 m 1213 986 l 1284 1086 l  col0 s
% Polyline
gs  clippath
1212 1093 m 1167 1133 l 1267 1247 l 1211 1137 l 1312 1207 l cp
eoclip
n 1200 1125 m
 1725 1725 l gs col0 s gr gr

% arrowhead
n 1312 1207 m 1211 1137 l 1267 1247 l  col0 s
% Polyline
gs  clippath
1169 1411 m 1208 1457 l 1323 1358 l 1213 1414 l 1284 1313 l cp
eoclip
n 1200 1425 m
 1725 975 l gs col0 s gr gr

% arrowhead
n 1284 1313 m 1213 1414 l 1323 1358 l  col0 s
% Polyline
gs  clippath
1166 1870 m 1215 1904 l 1302 1779 l 1209 1861 l 1253 1745 l cp
eoclip
n 1200 1875 m
 1725 1125 l gs col0 s gr gr

% arrowhead
n 1253 1745 m 1209 1861 l 1302 1779 l  col0 s
% Polyline
gs  clippath
1172 1556 m 1201 1608 l 1333 1533 l 1214 1567 l 1303 1481 l cp
eoclip
n 1200 1575 m
 1725 1275 l gs col0 s gr gr

% arrowhead
n 1303 1481 m 1214 1567 l 1333 1533 l  col0 s
% Polyline
gs  clippath
1177 1700 m 1193 1757 l 1339 1715 l 1216 1720 l 1323 1658 l cp
eoclip
n 1200 1725 m
 1725 1575 l gs col0 s gr gr

% arrowhead
n 1323 1658 m 1216 1720 l 1339 1715 l  col0 s
% Polyline
gs  clippath
1215 1245 m 1166 1279 l 1253 1404 l 1209 1289 l 1302 1370 l cp
eoclip
n 1200 1275 m
 1725 2025 l gs col0 s gr gr

% arrowhead
n 1302 1370 m 1209 1289 l 1253 1404 l  col0 s
% Polyline
gs  clippath
1177 2000 m 1193 2057 l 1339 2015 l 1216 2020 l 1323 1958 l cp
eoclip
n 1200 2025 m
 1725 1875 l gs col0 s gr gr

% arrowhead
n 1323 1958 m 1216 2020 l 1339 2015 l  col0 s
% Polyline
gs  clippath
1185 2145 m 1185 2205 l 1337 2205 l 1217 2175 l 1337 2145 l cp
eoclip
n 1200 2175 m
 1725 2175 l gs col0 s gr gr

% arrowhead
n 1337 2145 m 1217 2175 l 1337 2205 l  col0 s
% Polyline
n 675 2175 m
 480 2460 l gs col0 s gr 
% Polyline
n 2805 2760 m
 2415 2885 l gs col0 s gr 
/Times-Roman ff 225.00 scf sf
2925 225 m
gs 1 -1 sc (Probe) col0 sh gr
/Times-Roman ff 225.00 scf sf
1500 825 m
gs 1 -1 sc (Table) col0 sh gr
/Times-Roman ff 225.00 scf sf
1522 532 m
gs 1 -1 sc (Hash) col0 sh gr
/Times-Roman ff 225.00 scf sf
300 825 m
gs 1 -1 sc (Build) col0 sh gr
/Times-Roman ff 225.00 scf sf
225 2662 m
gs 1 -1 sc (a build tuple) col0 sh gr
/Times-Roman ff 225.00 scf sf
1260 3007 m
gs 1 -1 sc (a probe tuple) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1199 w @beginspecial 0 @llx 0 @lly 267 @urx
204 @ury 1483 @rwi @setspecial
%%BeginDocument: graphs/join-cachepart.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: join-cachepart.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 14:12:57 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 267 204
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 204 moveto 0 0 lineto 267 0 lineto 267 204 lineto closepath clip newpath
-4.5 207.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
15.000 slw
n 600 1575 m 2700 1575 l 2700 2175 l 600 2175 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
7.500 slw
n 3300 300 m 4500 300 l 4500 450 l 3300 450 l
 cp gs col0 s gr 
% Polyline
n 3300 450 m 4500 450 l 4500 600 l 3300 600 l
 cp gs col0 s gr 
% Polyline
n 3300 600 m 4500 600 l 4500 750 l 3300 750 l
 cp gs col0 s gr 
% Polyline
n 3300 750 m 4500 750 l 4500 900 l 3300 900 l
 cp gs col0 s gr 
% Polyline
n 3300 900 m 4500 900 l 4500 1050 l 3300 1050 l
 cp gs col0 s gr 
% Polyline
n 3300 1050 m 4500 1050 l 4500 1200 l 3300 1200 l
 cp gs col0 s gr 
% Polyline
n 3300 1425 m 4500 1425 l 4500 1575 l 3300 1575 l
 cp gs col0 s gr 
% Polyline
n 3300 1575 m 4500 1575 l 4500 1725 l 3300 1725 l
 cp gs col0 s gr 
% Polyline
n 3300 1725 m 4500 1725 l 4500 1875 l 3300 1875 l
 cp gs col0 s gr 
% Polyline
n 3300 1875 m 4500 1875 l 4500 2025 l 3300 2025 l
 cp gs col0 s gr 
% Polyline
n 3300 2025 m 4500 2025 l 4500 2175 l 3300 2175 l
 cp gs col0 s gr 
% Polyline
n 3300 2175 m 4500 2175 l 4500 2325 l 3300 2325 l
 cp gs col0 s gr 
% Polyline
n 3300 2550 m 4500 2550 l 4500 2700 l 3300 2700 l
 cp gs col0 s gr 
% Polyline
n 3300 2700 m 4500 2700 l 4500 2850 l 3300 2850 l
 cp gs col0 s gr 
% Polyline
n 3300 2850 m 4500 2850 l 4500 3000 l 3300 3000 l
 cp gs col0 s gr 
% Polyline
n 3300 3000 m 4500 3000 l 4500 3150 l 3300 3150 l
 cp gs col0 s gr 
% Polyline
n 3300 3150 m 4500 3150 l 4500 3300 l 3300 3300 l
 cp gs col0 s gr 
% Polyline
n 3300 3300 m 4500 3300 l 4500 3450 l 3300 3450 l
 cp gs col0 s gr 
% Polyline
n 750 2775 m 1950 2775 l 1950 2925 l 750 2925 l
 cp gs col0 s gr 
% Polyline
n 750 2925 m 1950 2925 l 1950 3075 l 750 3075 l
 cp gs col0 s gr 
% Polyline
n 750 3075 m 1950 3075 l 1950 3225 l 750 3225 l
 cp gs col0 s gr 
% Polyline
n 750 525 m 1950 525 l 1950 675 l 750 675 l
 cp gs col0 s gr 
% Polyline
n 750 675 m 1950 675 l 1950 825 l 750 825 l
 cp gs col0 s gr 
% Polyline
n 750 825 m 1950 825 l 1950 975 l 750 975 l
 cp gs col0 s gr 
% Polyline
gs  clippath
2760 1783 m 2794 1833 l 2948 1730 l 2807 1789 l 2915 1681 l cp
eoclip
n 3201 1527 m
 2790 1800 l gs col0 s gr gr

% arrowhead
n 2915 1681 m 2807 1789 l 2948 1730 l 2906 1722 l 2915 1681 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
n 750 1650 m 1950 1650 l 1950 1800 l 750 1800 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 750 1950 m 1950 1950 l 1950 2100 l 750 2100 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 750 1800 m 1950 1800 l 1950 1950 l 750 1950 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2325 1800 m 2550 1800 l 2550 1950 l 2325 1950 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2325 1950 m 2550 1950 l 2550 2100 l 2325 2100 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2325 1650 m 2550 1650 l 2550 1800 l 2325 1800 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
1924 1852 m 1947 1908 l 2087 1852 l 1965 1869 l 2065 1796 l cp
eoclip
n 2325 1725 m
 1950 1875 l gs col0 s gr gr

% arrowhead
n 2065 1796 m 1965 1869 l 2087 1852 l  col0 s
% Polyline
gs  clippath
1924 2002 m 1947 2058 l 2087 2002 l 1965 2019 l 2065 1946 l cp
eoclip
n 2325 1875 m
 1950 2025 l gs col0 s gr gr

% arrowhead
n 2065 1946 m 1965 2019 l 2087 2002 l  col0 s
% Polyline
gs  clippath
1957 1692 m 1919 1739 l 2037 1833 l 1963 1735 l 2075 1786 l cp
eoclip
n 1950 1725 m
 2325 2025 l gs col0 s gr gr

% arrowhead
n 2075 1786 m 1963 1735 l 2037 1833 l  col0 s
/Times-Roman ff 225.00 scf sf
75 825 m
gs 1 -1 sc (sub0) col0 sh gr
/Times-Roman ff 225.00 scf sf
75 1950 m
gs 1 -1 sc (sub1) col0 sh gr
/Times-Roman ff 225.00 scf sf
75 3075 m
gs 1 -1 sc (sub2) col0 sh gr
/Times-Roman ff 225.00 scf sf
1050 375 m
gs 1 -1 sc (Build) col0 sh gr
/Times-Roman ff 225.00 scf sf
3525 225 m
gs 1 -1 sc (Probe) col0 sh gr
/Times-Roman ff 225.00 scf sf
1425 1425 m
gs 1 -1 sc (CPU Cache) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1498 w @beginspecial 0 @llx 0 @lly 272 @urx
204 @ury 1504 @rwi @setspecial
%%BeginDocument: graphs/join-rangepart.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: join-rangepart.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 14:14:05 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 272 204
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 204 moveto 0 0 lineto 272 0 lineto 272 204 lineto closepath clip newpath
0.7 207.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 675 1350 m 2775 1350 l 2775 1800 l 675 1800 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 3300 300 m 4500 300 l 4500 450 l 3300 450 l
 cp gs col0 s gr 
% Polyline
n 3300 450 m 4500 450 l 4500 600 l 3300 600 l
 cp gs col0 s gr 
% Polyline
n 3300 600 m 4500 600 l 4500 750 l 3300 750 l
 cp gs col0 s gr 
% Polyline
n 3300 750 m 4500 750 l 4500 900 l 3300 900 l
 cp gs col0 s gr 
% Polyline
n 3300 900 m 4500 900 l 4500 1050 l 3300 1050 l
 cp gs col0 s gr 
% Polyline
n 3300 1050 m 4500 1050 l 4500 1200 l 3300 1200 l
 cp gs col0 s gr 
% Polyline
n 3300 1200 m 4500 1200 l 4500 1350 l 3300 1350 l
 cp gs col0 s gr 
% Polyline
n 3300 1350 m 4500 1350 l 4500 1500 l 3300 1500 l
 cp gs col0 s gr 
% Polyline
n 3300 1500 m 4500 1500 l 4500 1650 l 3300 1650 l
 cp gs col0 s gr 
% Polyline
n 3300 1650 m 4500 1650 l 4500 1800 l 3300 1800 l
 cp gs col0 s gr 
% Polyline
n 3300 1800 m 4500 1800 l 4500 1950 l 3300 1950 l
 cp gs col0 s gr 
% Polyline
n 3300 1950 m 4500 1950 l 4500 2100 l 3300 2100 l
 cp gs col0 s gr 
% Polyline
n 3300 2100 m 4500 2100 l 4500 2250 l 3300 2250 l
 cp gs col0 s gr 
% Polyline
n 3300 2250 m 4500 2250 l 4500 2400 l 3300 2400 l
 cp gs col0 s gr 
% Polyline
n 3300 2400 m 4500 2400 l 4500 2550 l 3300 2550 l
 cp gs col0 s gr 
% Polyline
n 3300 2550 m 4500 2550 l 4500 2700 l 3300 2700 l
 cp gs col0 s gr 
% Polyline
n 3300 2700 m 4500 2700 l 4500 2850 l 3300 2850 l
 cp gs col0 s gr 
% Polyline
n 3300 2850 m 4500 2850 l 4500 3000 l 3300 3000 l
 cp gs col0 s gr 
% Polyline
n 825 900 m 2025 900 l 2025 1050 l 825 1050 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1050 m 2025 1050 l 2025 1200 l 825 1200 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1200 m 2025 1200 l 2025 1350 l 825 1350 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1350 m 2025 1350 l 2025 1500 l 825 1500 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1500 m 2025 1500 l 2025 1650 l 825 1650 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1650 m 2025 1650 l 2025 1800 l 825 1800 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1800 m 2025 1800 l 2025 1950 l 825 1950 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 1950 m 2025 1950 l 2025 2100 l 825 2100 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 825 2100 m 2025 2100 l 2025 2250 l 825 2250 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2400 1350 m 2625 1350 l 2625 1500 l 2400 1500 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2400 1500 m 2625 1500 l 2625 1650 l 2400 1650 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2400 1650 m 2625 1650 l 2625 1800 l 2400 1800 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 525 975 m
 525 1275 l gs col0 s gr 
% Polyline
n 525 1425 m
 525 1725 l gs col0 s gr 
% Polyline
n 525 1875 m
 525 2175 l gs col0 s gr 
% Polyline
n 525 975 m
 600 900 l gs col0 s gr 
% Polyline
n 525 1275 m
 600 1350 l gs col0 s gr 
% Polyline
n 525 1425 m
 600 1350 l gs col0 s gr 
% Polyline
n 525 1725 m
 600 1800 l gs col0 s gr 
% Polyline
n 525 2175 m
 600 2250 l gs col0 s gr 
% Polyline
n 525 1875 m
 600 1800 l gs col0 s gr 
% Polyline
n 3300 450 m 4500 450 l 4500 600 l 3300 600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 2850 m 4500 2850 l 4500 3000 l 3300 3000 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 190.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 1500 m 4500 1500 l 4500 1650 l 3300 1650 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 100.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 1050 m 4500 1050 l 4500 1200 l 3300 1200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 70.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 2250 m 4500 2250 l 4500 2400 l 3300 2400 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 150.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 2400 m 4500 2400 l 4500 2550 l 3300 2550 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 160.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
2816 1427 m 2871 1450 l 2943 1280 l 2858 1407 l 2888 1257 l cp
eoclip
n 3225 525 m
 2850 1425 l gs col0 s gr gr

% arrowhead
n 2888 1257 m 2858 1407 l 2943 1280 l 2904 1296 l 2888 1257 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
n 0 3150 m 1050 3150 l 1050 3300 l 0 3300 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 0.00 210.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 75 3375 m 4350 3375 l 4350 3450 l 75 3450 l
 cp gs col7 s gr 
% Polyline
15.000 slw
n 675 1350 m 2775 1350 l 2775 1800 l 675 1800 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
1999 1537 m 2022 1593 l 2162 1537 l 2040 1554 l 2140 1481 l cp
eoclip
n 2400 1410 m
 2025 1560 l gs col0 s gr gr

% arrowhead
n 2140 1481 m 2040 1554 l 2162 1537 l  col0 s
% Polyline
gs  clippath
1999 1687 m 2022 1743 l 2162 1687 l 2040 1704 l 2140 1631 l cp
eoclip
n 2400 1560 m
 2025 1710 l gs col0 s gr gr

% arrowhead
n 2140 1631 m 2040 1704 l 2162 1687 l  col0 s
% Polyline
gs  clippath
2032 1377 m 1994 1424 l 2112 1518 l 2038 1420 l 2150 1471 l cp
eoclip
n 2025 1410 m
 2400 1710 l gs col0 s gr gr

% arrowhead
n 2150 1471 m 2038 1420 l 2112 1518 l  col0 s
/Times-Roman ff 225.00 scf sf
1050 375 m
gs 1 -1 sc (Build) col0 sh gr
/Times-Roman ff 225.00 scf sf
3525 225 m
gs 1 -1 sc (Probe) col0 sh gr
/Times-Roman ff 225.00 scf sf
0 1200 m
gs 1 -1 sc (sub0) col0 sh gr
/Times-Roman ff 225.00 scf sf
0 1650 m
gs 1 -1 sc (sub1) col0 sh gr
/Times-Roman ff 225.00 scf sf
0 2100 m
gs 1 -1 sc (sub2) col0 sh gr
/Times-Roman ff 225.00 scf sf
2100 1275 m
gs 1 -1 sc (Cache) col0 sh gr
/Times-Roman ff 225.00 scf sf
1200 3300 m
gs 1 -1 sc (probe tuple belonging to sub1) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial -29 948 a Fq(\(a\))20 b(GRA)m(CE/Prefetching:)j(join)208
b(\(b\))20 b(Cache)g(partitioning:)j(re-partition)151
b(\(c\))20 b(Cache-stationary:)j(join)d(address-range-based)53
1038 y(memory-sized)e(partitions)290 b(and)20 b(join)g(cache-sized)f
(sub-partitions)285 b(sub-partitions)18 b(with)j(no)e(tuple)h(mo)o(v)o
(ement)p -60 1128 V 712 1267 a(Figure)g(3:)25 b(Comparing)19
b(the)h(cache)f(beha)n(viors)g(of)h(dif)n(ferent)f(join)h(phase)f
(algorithms)102 1431 y(T)-7 b(able)21 b(1:)k(T)-6 b(erminology)17
b(used)j(throughout)d(this)k(paper)p 185 1491 1443 4
v 183 1562 4 71 v 235 1541 a Fh(Name)p 442 1562 V 100
w(De\002nition)p 1626 1562 V 185 1565 1443 4 v 185 1582
V 183 1653 4 71 v 287 1632 a Fs(P)p 442 1653 V 161 w
Fh(page)d(size)g(\(in)g(bytes\))p 1626 1653 V 185 1656
1443 4 v 183 1727 4 71 v 283 1706 a Fs(N)p 442 1727 V
154 w Fh(#)f(of)g(b)o(uild)h(tuples)g(in)f(b)o(uild)h(relation)p
1626 1727 V 185 1731 1443 4 v 183 1802 4 71 v 293 1780
a Fs(n)p 442 1802 V 157 w Fh(#)f(of)g(b)o(uild)h(tuples)g(per)g
(partition)h(page)p 1626 1802 V 185 1805 1443 4 v 183
1876 4 71 v 283 1855 a Fs(H)p 442 1876 V 152 w Fh(#)e(of)g(bytes)h(in)f
(hash)h(table)g(for)f(e)n(v)o(ery)i(k)o(e)o(y)p 1626
1876 V 185 1879 1443 4 v 183 1958 4 79 v 287 1937 a Fs(C)p
442 1958 V 156 w Fh(ef)n(fecti)n(v)o(e)i(cache)e(size)f(\(in)f(bytes\))
1277 1913 y Fi(3)p 1626 1958 V 185 1961 1443 4 v 183
2032 4 71 v 290 2011 a Fs(L)p 442 2032 V 155 w Fh(cache)i(line)f(size)g
(\(in)g(bytes\))p 1626 2032 V 185 2036 1443 4 v 183 2106
4 71 v 282 2085 a Fs(K)p 442 2106 V 151 w Fh(#)f(of)g(b)o(uild)h(pages)
g(per)f(sub-partition)p 1626 2106 V 185 2110 1443 4 v
183 2181 4 71 v 291 2159 a Fs(S)p 442 2181 V 159 w Fh(#)g(of)g
(sub-partitions)j(per)d(b)o(uild)h(partition)p 1626 2181
V 185 2184 1443 4 v 183 2255 4 71 v 262 2234 a Fs(bpk)p
442 2255 V 128 w Fh(#)f(of)g(bits)h(per)f(k)o(e)o(y)h(for)f(a)g(single)
h(Bloom)g(\002lter)p 1626 2255 V 185 2258 1443 4 v 183
2329 4 71 v 259 2308 a Fs(f)7 b(pr)p 442 2329 V 125 w
Fh(Bloom)18 b(\002lter)g(f)o(alse)g(positi)n(v)o(e)h(rate)p
1626 2329 V 185 2333 1443 4 v -60 2446 a Fj(3.2)82 b(Impr)o(o)o(ving)19
b(Locality)h(f)n(or)f(Stationary)g(T)-8 b(uples)-60 2574
y Fq(During)23 b(the)i(join)f(phase,)h(the)g(inspector)e(join)h
(algorithm)f(kno)n(ws)-60 2664 y(which)i(probe)f(tuples)h(match)g(e)n
(v)o(ery)e(address-range-based)f(sub-)-60 2753 y(partition)k(of)h(the)h
(b)n(uild)e(relation,)j(and)d(therefore)g(processes)h(tu-)-60
2843 y(ples)17 b(one)g(sub-partition)d(at)k(a)f(time.)24
b(F)o(or)17 b(e)n(v)o(ery)e(sub-partition,)h(the)-60
2933 y(algorithm)f(b)n(uilds)h(a)g(cache-resident)e(hash)i(table)g(on)g
(the)g(b)n(uild)g(tu-)-60 3022 y(ples,)k(and)e(probes)h(it)h(with)f
(all)h(the)g(probe)e(tuples)h(associated)g(with)-60 3112
y(this)i(sub-partition.)j(W)-7 b(e)22 b(ensure)e(that)g(the)h(b)n(uild)
f(tuples)h(of)f(a)h(sub-)-60 3202 y(partition)27 b(and)g(its)i(hash)f
(table)g(\002t)h(into)e(the)h(cache)g(by)f(choosing)-60
3291 y(the)19 b(number)f(of)h(pages)g(per)g(b)n(uild)g(sub-partition,)e
Fg(K)6 b Fq(,)20 b(as)g(follo)n(ws:)515 3412 y Fg(K)k
Fp(\001)18 b Fg(P)30 b Ff(+)18 b Fg(K)24 b Fp(\001)19
b Fg(n)f Fp(\001)h Fg(H)29 b Fp(\024)23 b Fg(C)-60 3523
y Fq(The)37 b(v)n(ariables)g(used)g(abo)o(v)o(e)f(and)g(throughout)f
(the)i(paper)g(are)-60 3613 y(summarized)19 b(in)h(T)-7
b(able)20 b(1.)40 3703 y(Figure)26 b(3)i(compares)e(the)h(cache)g(beha)
n(viors)g(of)g(all)h(the)f(join-)-60 3793 y(phase)17
b(algorithms)e(that)i(we)h(are)f(considering.)k(As)d(sho)n(wn)e(in)i
(Fig-)-60 3882 y(ure)23 b(3\(a\),)h(the)g(GRA)m(CE)g(algorithm)e(joins)
i(memory-sized)d(parti-)-60 3972 y(tions.)51 b(It)30
b(b)n(uilds)f(an)g(in-memory)d(hash)j(table)g(on)f(all)i(the)f(b)n
(uild)-60 4062 y(tuples,)24 b(then)f(probes)f(this)i(hash)f(table)g
(using)g(e)n(v)o(ery)f(tuple)h(in)h(the)-60 4151 y(probe)29
b(partition)g(to)i(\002nd)f(matches.)56 b(Because)30
b(of)g(the)h(inherent)-60 4241 y(randomness)19 b(of)i(hashing,)e
(accesses)j(to)f(the)g(hash)g(table)g(ha)n(v)o(e)f(lit-)-60
4331 y(tle)e(temporal)d(or)i(spatial)g(locality)-5 b(.)23
b(Since)18 b(the)f(b)n(uild)f(partition)g(and)-60 4420
y(its)k(hash)f(table)f(are)h(typically)f(much)g(lar)o(ger)g(than)g(the)
h(CPU)h(cache)-60 4510 y(size,)g(these)f(accesses)g(often)f(incur)h(e)o
(xpensi)n(v)o(e)d(cache)j(misses,)h(re-)-60 4600 y(sulting)g(in)g(poor)
f(CPU)i(cache)f(performance.)40 4690 y(Figure)46 b(3\(a\))g(sho)n(ws)g
(that)h(the)g(cache)f(prefetching)e(algo-)-60 4779 y(rithms)19
b([4)o(])h(perform)d(the)j(join)f(in)h(the)f(same)h(w)o(ay)f(as)h(the)g
(GRA)m(CE)-60 4869 y(algorithm)k([10)n(].)40 b(The)25
b(prefetching)e(algorithms)h(do)h(not)g(reduce)-60 4959
y(the)j(number)f(of)g(cache)h(misses;)33 b(rather)m(,)c(the)o(y)f(use)g
(prefetch)f(in-)-60 5048 y(structions)d(to)h(hide)f(the)g(time)h
(needed)e(to)h(service)h(cache)f(misses)p -60 5105 780
4 v 30 5160 a Fi(3)60 5184 y Fh(Note)15 b(that)h(we)g(usually)g(set)f
Fs(C)20 b Fh(to)15 b(be)h(a)f(fraction)i(\(e.g.)j(0.5\))14
b(of)h(the)h(total)h(cache)-60 5255 y(size)k(so)e(that)j(call)f(stacks)
g(and)f(other)h(frequently)i(used)d(data)h(structures)h(can)f(stay)-60
5326 y(in)c(the)h(cache)h(as)e(well.)2040 1435 y Fq(when)28
b(repeatedly)g(visiting)g(the)h(hash)g(table.)51 b(T)-7
b(o)29 b(achie)n(v)o(e)f(that,)2040 1524 y(the)o(y)f(rely)g(on)g(suf)n
(\002cient)h(memory)d(bandwidth)h(to)i(quickly)e(ser)n(-)2040
1614 y(vice)k(cache)g(misses)h(and)f(prefetch)f(requests.)55
b(When)30 b(multiple)2040 1704 y(processors)j(compete)g(for)h(limited)g
(bandwidth,)h(ho)n(we)n(v)o(er)m(,)h(the)2040 1793 y(performance)23
b(of)j(the)g(prefetching)d(algorithms)i(is)i(lik)o(ely)f(to)g(de-)2040
1883 y(grade)19 b(signi\002cantly)-5 b(,)19 b(as)i(sho)n(wn)e(pre)n
(viously)f(in)j(Figure)e(1.)2140 1975 y(Figure)e(3\(b\))g(illustrates)i
(ho)n(w)f(cache)g(partitioning)e(joins)j(pairs)2040 2065
y(of)29 b(cache-sized)f(partitions)h(to)h(a)n(v)n(oid)f(e)o(xcessi)n(v)
o(e)g(cache)g(misses)2040 2154 y(because)35 b(of)h(hash)f(table)h
(visits.)73 b(The)35 b(algorithm)f(recursi)n(v)o(ely)2040
2244 y(partitions)i(memory-sized)f(partitions)h(into)h(cache-sized)f
(sub-)2040 2334 y(partitions,)f(and)d(then)g(joins)h(the)g
(sub-partitions)e(using)h(cache-)2040 2423 y(resident)h(hash)g(tables.)
66 b(Essentially)-5 b(,)36 b(cache)d(partitioning)e(vis-)2040
2513 y(its)38 b(e)n(v)o(ery)e(tuple)g(at)h(least)h(once)e(more)g(than)h
(the)g(GRA)m(CE)g(al-)2040 2603 y(gorithm,)27 b(thereby)f(incurring)f
(signi\002cant)i(re-partition)e(cost,)k(as)2040 2692
y(sho)n(wn)19 b(pre)n(viously)g(in)h(Figure)g(1.)2140
2784 y(Figure)39 b(3\(c\))h(sho)n(ws)h(the)f(cache)g(beha)n(vior)f(of)h
(the)g(cache-)2040 2874 y(stationary)27 b(join)h(phase)g(of)g
(inspector)f(join.)48 b(It)29 b(reads)f(memory-)2040
2964 y(sized)16 b(partitions)f(into)h(memory)e(and)h(processes)h(one)f
(cache-sized)2040 3053 y(partition)31 b(at)h(a)h(time,)h(a)n(v)n
(oiding)d(the)h(cache)g(misses)h(caused)e(by)2040 3143
y(hash)24 b(table)h(visits.)39 b(It)25 b(simply)f(visits)h(the)g
(consecuti)n(v)o(e)e(pages)h(of)2040 3233 y(a)e(b)n(uild)g
(sub-partition)d(to)j(b)n(uild)g(a)g(hash)f(table.)61
b(Random)20 b(mem-)2040 3322 y(ory)j(accesses)h(are)f(a)n(v)n(oided)g
(while)h(b)n(uilding)e(the)h(hash)h(table)f(be-)2040
3412 y(cause)g(the)g(b)n(uild)g(sub-partition)e(and)h(the)h(hash)g
(table)g(\002t)h(into)f(the)2040 3502 y(cache.)102 b(Since)29
b(the)g(algorithm)f(already)f(kno)n(ws)i(which)f(probe)2040
3591 y(tuples)f(may)g(ha)n(v)o(e)f(matches)h(in)g(the)g(gi)n(v)o(en)f
(b)n(uild)h(sub-partition,)2040 3681 y(it)38 b(can)f(directly)g(visit)g
(these)h(probe)e(tuples)h(in)g(place)g(without)2040 3771
y(mo)o(ving)27 b(them.)49 b(Compared)27 b(to)i(cache)f(partitioning,)h
(inspector)2040 3860 y(joins)d(eliminate)f(unnecessary)f(cache)h
(misses)i(without)e(mo)o(ving)2040 3950 y(an)o(y)15 b(tuples,)i
(thereby)d(a)n(v)n(oid)i(the)g(e)o(xcessi)n(v)o(e)f(re-partitioning)e
(o)o(v)o(er)n(-)2040 4040 y(head.)72 b(The)35 b(algorithm)g(almost)h
(ne)n(v)o(er)f(re)n(visits)h(probe)f(tuples)2040 4129
y(when)25 b(join)h(attrib)n(ute)g(v)n(alues)g(in)g(the)g(b)n(uild)g
(relation)f(are)h(unique)2040 4219 y(\(or)20 b(almost)h(unique\).)k(V)
-9 b(alues)21 b(in)g(the)g(b)n(uild)f(relation)g(are)h(unique,)2040
4309 y(for)32 b(instance,)k(in)d(foreign-k)o(e)o(y)d(joins,)36
b(which)c(constitute)h(most)2040 4398 y(of)27 b(the)h(real-w)o(orld)e
(joins.)48 b(\(As)28 b(detailed)f(belo)n(w)-5 b(,)28
b(the)g(inspector)2040 4488 y(join)k(v)o(eri\002es)g(the)g(assumption)f
(and)h(selects)h(one)f(of)g(the)g(other)2040 4578 y(join)20
b(phase)f(algorithms)f(when)i(the)f(assumption)g(does)h(not)f(hold.\))
2040 4667 y(Moreo)o(v)o(er)m(,)i(the)j(algorithm)e(utilizes)i
(prefetching)d(techniques)h(to)2040 4757 y(further)17
b(hide)h(the)h(latenc)o(y)f(for)g(the)g(probe)f(tuples,)i(as)g(we)g
(describe)2040 4847 y(in)h(the)h(ne)o(xt)e(subsection.)2040
5015 y Fj(3.3)82 b(Exploiting)20 b(Cache)g(Pr)o(efetching)2040
5146 y Fq(W)-7 b(e)24 b(e)o(xploit)e(cache)g(prefetching)f(techniques)g
(in)i(addition)f(to)h(us-)2040 5236 y(ing)c(cache-sized)g
(sub-partitions)f(for)h(tw)o(o)h(reasons.)25 b(First,)20
b(cache)2040 5326 y(prefetching)32 b(can)i(hide)f(the)h(latenc)o(y)g
(of)g(the)g(remaining)e(cache)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -60 -66 a Fq(misses,)35 b(such)d(as)g(the)g(cold)
f(cache)h(misses)g(that)g(bring)f(a)h(b)n(uild)-60 23
y(sub-partition)d(and)i(its)i(hash)e(table)h(into)f(the)h(CPU)g(cache,)
i(and)-60 113 y(the)28 b(cache)f(misses)i(for)f(accessing)f(the)h
(probe)f(tuples.)48 b(Second,)-60 203 y(cache)23 b(prefetching)e(can)j
(impro)o(v)o(e)d(the)i(rob)n(ustness)g(of)h(our)e(algo-)-60
292 y(rithm)i(when)f(there)h(is)h(interference)d(with)i(other)g
(processes)g(run-)-60 382 y(ning)k(concurrently)e(in)j(the)f(system.)51
b(As)29 b(sho)n(wn)f(in)h([4)o(],)i(cache)-60 472 y(partitioning)e
(performance)f(de)o(grades)h(signi\002cantly)h(when)h(the)-60
561 y(CPU)24 b(cache)d(is)j(\003ushed)e(e)n(v)o(ery)f(2-10)g(ms,)i
(which)f(is)i(comparable)-60 651 y(to)g(typical)g(thread)f(scheduling)f
(time.)37 b(T)-7 b(o)24 b(cope)f(with)i(this)f(prob-)-60
741 y(lem,)j(we)f(issue)g(prefetch)f(instructions)g(as)h(a)g(safety)g
(net)g(for)f(im-)-60 830 y(portant)19 b(data)i(items)g(that)g(should)e
(be)i(k)o(ept)f(in)h(the)f(cache,)g(such)h(as)-60 920
y(the)i(b)n(uild)f(tuples)h(in)g(a)g(b)n(uild)g(sub-partition.)30
b(If)23 b(the)g(data)g(item)g(is)-60 1010 y(in)e(cache,)e(there)h(is)h
(no)f(noticeable)g(penalty)-5 b(.)24 b(On)c(the)g(other)g(hand,)-60
1099 y(if)26 b(the)f(data)h(item)f(has)h(been)f(e)n(victed)g(from)f
(cache,)i(the)g(prefetch)-60 1189 y(instruction)h(brings)f(it)j(back)e
(into)h(the)f(cache)h(signi\002cantly)f(ear)n(-)-60 1279
y(lier)m(,)e(making)d(this)j(approach)d(w)o(orthwhile.)35
b(In)24 b(a)h(sense,)g(we)f(use)-60 1368 y(double)17
b(measures)h(to)h(maximize)e(cache)h(performance)e(when)i(ac-)-60
1458 y(cessing)i(important)f(data)h(items.)-60 1654 y
Fj(3.4)82 b(Choosing)20 b(the)g(Best)h(J)o(oin)f(Phase)g(Algorithm)-60
1795 y Fq(Based)h(on)f(the)h(statistics)h(collected)e(from)f(the)i
(actual)f(data)h(in)g(the)-60 1885 y(partition)k(and)g(inspection)g
(phase,)h(inspector)f(joins)h(can)f(choose)-60 1974 y(the)20
b(join)g(phase)f(algorithm)f(best)j(suited)e(to)h(the)g(gi)n(v)o(en)f
(query)-5 b(.)23 b(F)o(or)-60 2064 y(e)o(xample,)32 b(we)g(detect)e
(duplicate)g(b)n(uild)h(k)o(e)o(ys)g(by)f(counting)g(the)-60
2154 y(number)22 b(of)i(sub-partitions)f(each)g(probe)g(tuple)h
(matches.)37 b(Since)-60 2243 y(a)20 b(probe)e(tuple)i(must)f(be)h
(tested)g(against)f(all)h(the)g(possible)f(match-)-60
2333 y(ing)28 b(sub-partitions)e(for)i(correctness,)h(the)f(time)h(for)
e(the)h(cache-)-60 2423 y(stationary)15 b(join)g(phase)h(of)f(the)h
(inspector)f(join)g(increases)h(with)g(the)-60 2512 y(number)f(of)h
(duplicate)f(b)n(uild)h(k)o(e)o(ys.)23 b(When)16 b(this)h(number)e(is)i
(abo)o(v)o(e)-60 2602 y(a)22 b(threshold,)f(inspector)g(joins)g(select)
i(a)f(dif)n(ferent)e(join)i(phase)f(al-)-60 2692 y(gorithm,)d(as)j
(will)g(be)f(sho)n(wn)g(in)g(Section)g(6.5.)40 2788 y(Our)30
b(inspection)f(approach)g(can)h(also)h(detect)f(relations)g(that)-60
2878 y(are)g(nearly-sorted)e(on)i(the)h(join)f(k)o(e)o(y)-5
b(.)54 b(Our)30 b(initial)h(intuition)f(is)-60 2968 y(that)19
b(a)g(sort-mer)o(ge)e(based)h(join)h(phase)f(should)g(be)h(applied)f
(in)h(this)-60 3057 y(case.)24 b(T)-7 b(o)16 b(v)o(erify)f(our)g
(intuition,)g(we)i(implemented)d(an)i(inspection)-60
3147 y(mechanism)h(to)i(detect)f(nearly-sorted)e(tuples.)24
b(The)19 b(basic)f(idea)h(is)-60 3237 y(to)d(k)o(eep)f(tuples)h(that)g
(are)g(out)g(of)f(order)g(in)h(a)g(memory)f(b)n(uf)n(fer)f(when)-60
3326 y(partitioning)21 b(an)i(input)f(relation.)33 b(The)23
b(input)f(is)i(nearly)e(sorted)g(if)-60 3416 y(the)15
b(memory)f(b)n(uf)n(fer)g(does)h(not)g(o)o(v)o(er\003o)n(w)f(when)h
(all)h(the)f(tuples)h(are)-60 3506 y(read.)43 b(At)27
b(this)g(point,)g(all)g(the)f(intermediate)f(partitions)h(contain)-60
3595 y(in-order)i(tuples.)55 b(W)-7 b(e)31 b(then)f(partition)f(the)h
(\(small)h(number)d(of\))-60 3685 y(out-of-order)22 b(tuples)j(and)g
(store)g(them)g(separately)f(from)g(the)i(in-)-60 3775
y(order)21 b(tuples.)31 b(In)22 b(the)g(join)g(phase,)g(gi)n(v)o(en)f
(four)h(inputs)f(per)h(parti-)-60 3864 y(tion)e(\(out-of-order)d(and)j
(in-order)e(b)n(uild)j(and)f(probe)f(inputs\),)h(the)-60
3954 y(sort-mer)o(ge)f(algorithm)h(\002rst)i(sorts)f(the)h
(out-of-order)17 b(inputs)k(and)-60 4044 y(then)15 b(mer)o(ges)g(all)h
(four)f(inputs)g(to)h(\002nd)g(matching)e(tuples.)24
b(Surpris-)-60 4133 y(ingly)-5 b(,)22 b(we)h(\002nd)g(in)g(our)f(e)o
(xperiments)f(that)i(the)g(cache-stationary)-60 4223
y(join)e(phase)f(performs)f(as)j(well)f(as)h(the)f(sort-mer)o(ge)d
(implementa-)-60 4313 y(tion.)25 b(W)-7 b(e)21 b(will)g(discuss)g(the)f
(results)g(in)h(Section)e(6.5.)-60 4549 y Fn(4)99 b(I/O)24
b(P)o(artition)h(and)h(Inspection)f(Phase)-60 4698 y
Fq(In)d(this)g(section,)g(we)g(be)o(gin)e(by)i(introducing)d(a)j
(typical)f(\002lter)i(im-)-60 4788 y(plementation:)g(Bloom)c
(\002lters.)25 b(Then,)19 b(we)h(discuss)g(the)f(memory)-60
4877 y(space)h(requirement)e(of)j(our)e(multi-\002lter)h(scheme,)g(and)
g(we)g(illus-)-60 4967 y(trate)26 b(ho)n(w)f(our)g(scheme)g(achie)n(v)o
(es)f(the)i(same)g(number)e(of)h(cache)-60 5057 y(misses)d(as)g(the)f
(single-\002lter)f(scheme.)27 b(Finally)-5 b(,)21 b(we)g(describe)g
(the)-60 5146 y(I/O)k(partition)f(and)g(inspection)f(algorithm)g(that)i
(uses)g(the)g(multi-)-60 5236 y(\002lter)19 b(scheme)f(to)g(determine)f
(the)i(sub-partition)d(information)g(for)-60 5326 y(probe)j(tuples.)p
2040 -146 1951 4 v 2415 162 a @beginspecial 0 @llx 0
@lly 290 @urx 60 @ury 1440 @rwi @setspecial
%%BeginDocument: graphs/bloom-generic.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bloom-generic.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Nov  9 15:11:25 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 290 60
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 60 moveto 0 0 lineto 290 0 lineto 290 60 lineto closepath clip newpath
0.7 59.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 600 675 m 900 675 l 900 975 l 600 975 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
675 915 m
gs 1 -1 sc (1) col0 sh gr
% Polyline
n 2100 675 m 2400 675 l 2400 975 l 2100 975 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
2175 915 m
gs 1 -1 sc (1) col0 sh gr
% Polyline
n 3000 675 m 3300 675 l 3300 975 l 3000 975 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
3075 915 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
293 195 m
gs 1 -1 sc (h \(key\)=b) col0 sh gr
/Times-Roman ff 210.00 scf sf
413 308 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 210.00 scf sf
1320 292 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1815 195 m
gs 1 -1 sc (h \(key\)=b) col0 sh gr
/Times-Roman ff 210.00 scf sf
1935 308 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 210.00 scf sf
2842 292 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
3300 195 m
gs 1 -1 sc (h \(key\)=b) col0 sh gr
/Times-Roman ff 210.00 scf sf
3420 308 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 210.00 scf sf
4327 292 m
gs 1 -1 sc (2) col0 sh gr
% Polyline
n 0 675 m 300 675 l 300 975 l 0 975 l
 cp gs col0 s gr 
% Polyline
n 300 675 m 600 675 l 600 975 l 300 975 l
 cp gs col0 s gr 
% Polyline
n 900 675 m 1200 675 l 1200 975 l 900 975 l
 cp gs col0 s gr 
% Polyline
n 1200 675 m 1500 675 l 1500 975 l 1200 975 l
 cp gs col0 s gr 
% Polyline
n 1500 675 m 1800 675 l 1800 975 l 1500 975 l
 cp gs col0 s gr 
% Polyline
n 1800 675 m 2100 675 l 2100 975 l 1800 975 l
 cp gs col0 s gr 
% Polyline
n 2400 675 m 2700 675 l 2700 975 l 2400 975 l
 cp gs col0 s gr 
% Polyline
n 2700 675 m 3000 675 l 3000 975 l 2700 975 l
 cp gs col0 s gr 
% Polyline
n 3300 675 m 3600 675 l 3600 975 l 3300 975 l
 cp gs col0 s gr 
% Polyline
n 3600 675 m 3900 675 l 3900 975 l 3600 975 l
 cp gs col0 s gr 
% Polyline
n 3900 675 m 4200 675 l 4200 975 l 3900 975 l
 cp gs col0 s gr 
% Polyline
n 4200 675 m 4500 675 l 4500 975 l 4200 975 l
 cp gs col0 s gr 
% Polyline
n 4500 675 m 4800 675 l 4800 975 l 4500 975 l
 cp gs col0 s gr 
% Polyline
gs  clippath
3166 662 m 3177 603 l 2995 568 l 3137 626 l 2984 627 l cp
eoclip
n 1425 300 m
 3157 630 l gs col0 s gr gr

% arrowhead
n 2984 627 m 3137 626 l 2995 568 l 3019 603 l 2984 627 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2230 609 m 2240 669 l 2422 638 l 2270 634 l 2412 578 l cp
eoclip
n 4207 300 m
 2250 637 l gs col0 s gr gr

% arrowhead
n 2412 578 m 2270 634 l 2422 638 l 2388 613 l 2412 578 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
737 603 m 747 662 l 929 630 l 777 627 l 919 571 l cp
eoclip
n 2700 292 m
 757 630 l gs col0 s gr gr

% arrowhead
n 919 571 m 777 627 l 929 630 l 895 606 l 919 571 l 
 cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs

%%EndDocument
 @endspecial 2040 252 V 2180 392 a(Figure)h(4:)25 b(A)c(Bloom)e
(\002lter)i(with)f(three)g(hash)g(functions)2040 575
y(T)-7 b(able)20 b(2:)25 b(Number)19 b(of)h(bits)g(per)g(k)o(e)o(y)f
(\()p Fg(bpk)s Fq(\))g(under)g(dif)n(ferent)f(f)o(alse)2040
665 y(positi)n(v)o(e)h(rates)i(\()p Fg(f)9 b(pr)r Fq(\))20
b(with)g Fg(d)k Ff(=)e(3)p 2088 724 1838 4 v 2086 795
4 71 v 2138 774 a Fs(f)7 b(pr)p 2297 795 V 134 w Fh(0.1)150
b(0.05)f(0.01)h(0.005)133 b(0.001)117 b(0.0005)p 3924
795 V 2088 799 1838 4 v 2088 815 V 2086 886 4 71 v 2141
865 a Fs(bpk)p 2297 886 V 104 w Fh(4.808)100 b(6.529)g(12.364)g(15.997)
h(28.474)f(36.277)p 3924 886 V 2088 890 1838 4 v 2040
1062 a Fj(4.1)82 b(Bloom)20 b(Filters:)25 b(Backgr)o(ound)2040
1189 y Fq(A)e(Bloom)e(\002lter)i(represents)e(a)i(set)g(of)f(k)o(e)o
(ys)g(and)f(supports)g(mem-)2040 1279 y(bership)32 b(tests)i([2)o(].)64
b(As)34 b(sho)n(wn)e(in)i(Figure)e(4,)k(a)d(Bloom)g(\002lter)2040
1368 y(consists)26 b(of)g(a)g(bit)g(v)o(ector)e(and)h
Fg(d)i Fq(independent)c(hash)i(functions,)2040 1458 y
Fg(h)2088 1470 y Fe(0)2125 1458 y Fg(;)14 b(h)2210 1470
y Fe(1)2247 1458 y Fg(;)g(:)g(:)g(:)g(;)g(h)2480 1470
y Fd(d)p Fr(\000)p Fe(1)2629 1458 y Fq(\()p Fg(d)31 b
Ff(=)h(3)25 b Fq(in)g(the)g(\002gure\).)38 b(T)-7 b(o)26
b(represent)d(a)j(set)2040 1548 y(of)21 b(k)o(e)o(ys,)g(we)h(\002rst)g
(initialize)g(all)g(the)f(bits)h(in)g(the)f(bit)h(v)o(ector)e(to)i(be)
2040 1637 y(0.)44 b(Then,)27 b(for)f(e)n(v)o(ery)f(k)o(e)o(y)-5
b(,)27 b(we)g(compute)e Fg(d)i Fq(bit)g(positions)f(using)2040
1727 y(the)21 b(hash)f(functions)g(and)g(set)i(the)e(bits)i(to)f(1)g
(in)g(the)f(bit)h(v)o(ector)-5 b(.)26 b(\(A)2040 1817
y(bit)20 b(may)g(be)g(set)h(multiple)f(times)g(by)g(multiple)g(k)o(e)o
(ys.\))2140 1906 y(T)-7 b(o)26 b(check)f(whether)h(a)g(test)h(k)o(e)o
(y)f(e)o(xists)h(in)f(the)g(set)h(of)f(kno)n(wn)2040
1996 y(k)o(e)o(ys,)c(we)h(compute)e Fg(d)i Fq(bit)g(positions)f(for)f
(the)i(test)g(k)o(e)o(y)f(using)g(the)2040 2086 y(hash)f(functions)f
(and)h(check)f(the)h(bits)h(in)f(the)h(bit)f(v)o(ector)-5
b(.)28 b(If)21 b(some)2040 2175 y(of)c(the)g Fg(d)h Fq(bits)g(are)f(0,)
g(the)g(set)h(of)f(kno)n(wn)f(k)o(e)o(ys)h(can)g(not)f(contain)h(the)
2040 2265 y(test)25 b(k)o(e)o(y)-5 b(.)34 b(If)23 b(all)i(of)e(the)h
Fg(d)g Fq(bits)g(are)g(1,)g(the)g(test)g(k)o(e)o(y)f(may)h(or)f(may)
2040 2355 y(not)f(e)o(xist)g(in)g(the)g(set)h(of)f(kno)n(wn)e(k)o(e)o
(ys.)30 b(Therefore,)20 b(Bloom)i(\002lter)2040 2444
y(tests)28 b(may)f(generate)f(f)o(alse)h(positi)n(v)o(es)g(b)n(ut)g
(may)f(ne)n(v)o(er)g(generate)2040 2534 y(f)o(alse)21
b(ne)o(gati)n(v)o(e)d(results.)2140 2624 y(Intuiti)n(v)o(ely)-5
b(,)31 b(the)g(lar)o(ger)e(the)i(Bloom)g(\002lter)g(v)o(ector)f(size,)k
(the)2040 2713 y(smaller)19 b(the)g(probability)e(that)i(a)h(test)g
(generates)e(a)h(f)o(alse)h(positi)n(v)o(e,)2040 2803
y(which)32 b(is)h(called)f(the)g(f)o(alse)h(positi)n(v)o(e)e(rate.)62
b(In)32 b(f)o(act,)j(the)d(f)o(alse)2040 2893 y(positi)n(v)o(e)20
b(rate)g Fg(f)9 b(pr)23 b Fq(and)d(the)h(number)e(of)h(bits)h(per)f(k)o
(e)o(y)g Fg(bpk)j Fq(of)e(the)2040 2982 y(bit)f(v)o(ector)f(are)i
(closely)e(related)h(to)g(each)g(other)g([2)o(]:)2203
3122 y Fg(f)9 b(pr)25 b Fp(\031)e Ff(\(1)18 b Fp(\000)g
Fg(e)2659 3088 y Fr(\000)p Fd(d=bpk)2883 3122 y Ff(\))2915
3088 y Fd(d)2954 3122 y Fg(;)c Fq(when)20 b(bit)g(v)o(ector)f(size)k
Fp(\035)h Ff(1)2040 3248 y Fq(T)-7 b(able)17 b(2)h(sho)n(ws)f(the)g
Fg(bpk)k Fq(v)n(alues)c(for)f(v)n(arious)h Fg(f)9 b(pr)r
Fq(.)24 b(In)17 b(this)h(paper)m(,)2040 3337 y(we)24
b(only)e(consider)h(Bloom)g(\002lters)h(with)f Fg(d)30
b Ff(=)e(3)p Fq(.)35 b(W)-7 b(e)24 b(point)f(out,)2040
3427 y(ho)n(we)n(v)o(er)m(,)18 b(that)i(our)f(algorithm)g(w)o(orks)h
(for)f(an)o(y)h(choice)f(of)h Fg(d)p Fq(.)2040 3580 y
Fj(4.2)82 b(Memory)20 b(Space)g(Requir)o(ement)2040 3707
y Fq(In)i(a)h(single)f(\002lter)g(scheme,)g(the)g(total)h(size)g(of)f
(the)g(\002lter)g(in)h(bytes)2040 3797 y(can)i(be)f(computed)f(as)j
(follo)n(ws,)f(where)f Fg(N)35 b Fq(is)25 b(the)g(total)g(number)2040
3886 y(of)20 b(b)n(uild)g(tuples)g(\(assuming)f(that)h(k)o(e)o(ys)g
(are)g(unique\):)2403 4012 y Fg(total)p 2579 4012 25
4 v 31 w(f)9 b(il)r(ter)p 2822 4012 V 31 w(siz)t(e)2996
4024 y Fd(sing)r(le)3205 4012 y Ff(=)22 b Fg(bpk)f Fp(\001)e
Fg(N)r(=)p Ff(8)2040 4137 y Fq(Our)i(multi-\002lter)f(scheme)h
(constructs)f(a)i(\002lter)f(per)g(sub-partition)2040
4227 y(in)i(e)n(v)o(ery)e(b)n(uild)i(partition.)31 b(Ho)n(we)n(v)o(er)m
(,)22 b(the)g(\002lters)i(represent)d(dis-)2040 4317
y(joint)28 b(subsets)g(of)f(b)n(uild)h(tuples;)j(e)n(v)o(ery)c(b)n
(uild)g(tuple)h(belongs)e(to)2040 4406 y(one)d(and)g(only)g(one)g
(sub-partition.)34 b(Therefore,)22 b(e)n(v)o(ery)g(b)n(uild)i(tu-)2040
4496 y(ple)30 b(is)g(still)h(represented)d(by)i(a)g(single)g(\002lter)
-5 b(.)54 b(Let)30 b Fg(bpk)3727 4466 y Fr(0)3780 4496
y Fq(be)g(the)2040 4586 y(number)e(of)i(bits)g(per)f(k)o(e)o(y)h(for)f
(an)h(indi)n(vidual)e(\002lter)-5 b(.)55 b(Then)29 b(the)2040
4675 y(total)20 b(\002lter)h(size)g(of)f(the)g(multi-\002lter)f(scheme)
h(is:)2399 4801 y Fg(total)p 2575 4801 V 31 w(f)9 b(il)r(ter)p
2818 4801 V 31 w(siz)t(e)2992 4813 y Fd(multi)3185 4801
y Ff(=)23 b Fg(bpk)3397 4767 y Fr(0)3438 4801 y Fp(\001)c
Fg(N)r(=)p Ff(8)2040 4926 y Fq(W)-7 b(e)33 b(can)e(quantify)e(the)j
(increase)f(in)g(memory)f(space)h(by)g(using)2040 5016
y(the)24 b(ratio)g(between)g(the)g(\002lter)h(sizes)g(of)f(the)g
(multi-\002lter)g(and)g(the)2040 5106 y(single-\002lter)c(schemes:)2044
5286 y Fg(space)p 2249 5286 V 29 w(incr)r(ease)p 2593
5286 V 29 w(r)r(atio)j Ff(=)2928 5230 y Fg(total)p 3104
5230 V 31 w(f)9 b(il)r(ter)p 3347 5230 V 31 w(siz)t(e)3521
5242 y Fd(multi)p 2920 5267 780 4 v 2920 5343 a Fg(total)p
3096 5343 25 4 v 31 w(f)g(il)r(ter)p 3339 5343 V 31 w(siz)t(e)3513
5355 y Fd(sing)r(le)3732 5286 y Ff(=)3830 5230 y Fg(bpk)3954
5200 y Fr(0)p 3830 5267 147 4 v 3841 5343 a Fg(bpk)p
eop end
%%Page: 6 6
TeXDict begin 6 5 bop -60 -70 a Fq(T)-7 b(able)17 b(3:)23
b(T)-7 b(otal)17 b(\002lter)g(size)h(v)n(arying)c(b)n(uild)j(tuple)f
(size)h(\(1GB)g(b)n(uild)-60 20 y(relation,)i Fg(f)9
b(pr)25 b Ff(=)e(0)p Fg(:)p Ff(05)p Fq(,)c Fg(S)28 b
Ff(=)22 b(50)e Fq(sub-partitions\))p 49 79 1716 4 v 47
150 4 71 v 125 129 a Fh(tuple)f(size)p 453 150 V 198
w(20B)226 b(60B)193 b(100B)176 b(140B)p 1763 150 V 49
154 1716 4 v 49 170 V 47 241 4 71 v 111 220 a(#)17 b(of)g(tuples)p
453 241 V 178 w(50M)186 b(16.7M)169 b(10M)186 b(7.1M)p
1763 241 V 49 245 1716 4 v 47 316 4 71 v 99 294 a(single-\002lter)p
453 316 V 119 w(40.8MB)117 b(13.6MB)g(8.2MB)133 b(5.8MB)p
1763 316 V 49 319 1716 4 v 47 390 4 71 v 108 369 a(multi-\002lter)p
453 390 V 111 w(178.0MB)101 b(59.4MB)f(35.6MB)g(25.3MB)p
1763 390 V 49 393 1716 4 v -60 571 a Fq(T)-7 b(o)24 b(obtain)f
Fg(bpk)406 541 y Fr(0)428 571 y Fq(,)i(we)f(need)f(to)h(compute)f(the)g
(f)o(alse)i(positi)n(v)o(e)e(rate)-60 661 y Fg(f)9 b(pr)71
631 y Fr(0)115 661 y Fq(for)20 b(an)g(indi)n(vidual)e(\002lter)j(in)f
(the)g(multi-\002lter)g(scheme.)40 753 y(Suppose)28 b(there)i(are)f
Fg(S)35 b Fq(sub-partitions)28 b(per)i(b)n(uild)f(partition.)-60
843 y(Then,)19 b(a)h(probe)e(tuple)i(will)g(be)g(check)o(ed)f(against)g
(all)h(the)g Fg(S)25 b Fq(\002lters)-60 932 y(in)g(the)g(partition)g
(to)g(which)g(the)g(probe)e(tuple)i(is)h(hashed.)39 b(If)25
b(an)o(y)-60 1022 y(\002lter)k(test)h(is)f(positi)n(v)o(e,)h(the)f
(join)f(phase)h(algorithm)e(has)i(to)g(join)-60 1112
y(the)c(probe)e(tuple)h(with)h(the)f(corresponding)d(b)n(uild)k
(sub-partition)-60 1201 y(for)j(matches.)103 b(In)28
b(order)g(to)h(k)o(eep)f(the)h(number)e(of)i(additional)-60
1291 y(probes)j(caused)h(by)f(f)o(alse)i(positi)n(v)o(es)f(the)g(same)g
(as)h(the)f(single-)-60 1381 y(\002lter)22 b(scheme,)f(the)h
(single-\002lter)e(scheme)h Fg(f)9 b(pr)25 b Fq(and)c(the)g(indi)n
(vid-)-60 1470 y(ual)f Fg(f)9 b(pr)193 1440 y Fr(0)237
1470 y Fq(of)20 b(the)g(multi-\002lter)g(scheme)g(should)f(satisfy:)668
1618 y Fg(f)9 b(pr)799 1584 y Fr(0)846 1618 y Ff(=)22
b Fg(f)9 b(pr)r(=S)40 1769 y Fq(F)o(or)29 b(e)o(xample,)h(if)g(the)g
(single-\002lter)f(scheme')-5 b(s)29 b Fg(f)9 b(pr)32
b Fq(is)f(0.05,)-60 1859 y(we)23 b(can)g(compute)e(the)i(space)g
(increase)f(ratio)h(as)g(follo)n(ws.)33 b(Since)-60 1948
y Fg(f)9 b(pr)71 1918 y Fr(0)131 1948 y Ff(=)36 b Fg(f)9
b(pr)r(=S)c Fq(,)29 b Fg(f)9 b(pr)642 1918 y Fr(0)702
1948 y Ff(=)36 b(0)p Fg(:)p Ff(001)27 b Fq(if)g Fg(S)42
b Ff(=)36 b(50)p Fq(.)46 b(Then,)29 b Fg(bpk)38 b Ff(=)-60
2038 y(6)p Fg(:)p Ff(529)18 b Fq(and)i Fg(bpk)414 2008
y Fr(0)459 2038 y Ff(=)j(28)p Fg(:)p Ff(474)p Fq(,)18
b(according)f(to)j(T)-7 b(able)20 b(2.)25 b(Therefore,)-60
2128 y Fg(space)p 145 2128 25 4 v 29 w(incr)r(ease)p
489 2128 V 29 w(r)r(atio)30 b Fq(is)f(4.4.)49 b(Similarly)-5
b(,)30 b(if)f Fg(S)43 b Ff(=)38 b(100)p Fq(,)29 b(we)-60
2217 y(can)20 b(compute)f(that)h Fg(space)p 733 2217
V 29 w(incr)r(ease)p 1077 2217 V 29 w(r)r(atio)h Fq(is)g(5.6.)40
2310 y(T)-7 b(able)48 b(3)g(compares)f(the)h(\002lter)h(size)g(of)f
(the)g(multi-\002lter)-60 2399 y(scheme)30 b(with)h(the)f
(single-\002lter)g(scheme)g(when)g(the)h(aggre)o(gate)-60
2489 y(f)o(alse)18 b(positi)n(v)o(e)e(rate)h(is)h(0.05)e(and)g(there)h
(are)g(50)g(sub-partitions)e(per)-60 2579 y(partition.)244
2548 y Fk(4)301 2579 y Fq(The)j(b)n(uild)h(relation)f(is)i(1GB)g(lar)o
(ge,)e(and)g(we)h(v)n(ary)g(the)-60 2668 y(tuple)j(size)h(from)e(20)h
(to)h(140)f(bytes.)31 b(W)-7 b(e)23 b(can)g(see)g(that)f(the)h(space)
-60 2758 y(requirement)17 b(is)j(moderate)e(when)h(the)g(tuple)g(size)h
(is)h(greater)d(than)-60 2848 y(or)27 b(equal)f(to)h(100B,)f(which)g
(is)i(typical)f(in)g(most)g(real-w)o(orld)e(ap-)-60 2937
y(plications.)53 b(Ev)o(en)28 b(if)i(the)g(tuple)f(size)h(is)h(as)f
(small)g(as)g(20B,)g(the)-60 3027 y(memory)18 b(requirement)g(of)i
(178MB)f(can)h(still)h(be)g(satis\002ed)f(easily)-60
3117 y(in)g(today')-5 b(s)20 b(database)g(serv)o(ers.)849
3086 y Fk(5)-60 3287 y Fj(4.3)82 b(Minimizing)21 b(the)g(Number)f(of)g
(Cache)g(Misses)-60 3419 y Fq(The)c(single-\002lter)g(scheme)f(writes)i
(three)f(bits)h(in)f(the)g(Bloom)g(\002lter)-60 3509
y(for)23 b(e)n(v)o(ery)g(b)n(uild)g(tuple.)36 b(F)o(or)24
b(e)n(v)o(ery)e(probe)h(tuple,)h(it)g(reads)g(three)-60
3599 y(bits)33 b(in)f(the)g(Bloom)g(\002lter)-5 b(.)62
b(Since)32 b(the)g(bit)h(positions)e(are)h(ran-)-60 3688
y(dom)18 b(because)g(of)g(the)h(independent)d(hash)i(functions,)f(the)i
(single-)-60 3778 y(\002lter)d(scheme)g(potentially)e(incurs)i(three)f
(cache)h(misses)h(for)e(e)n(v)o(ery)-60 3868 y(b)n(uild)i(tuple)g(and)g
(for)g(e)n(v)o(ery)f(probe)h(tuple,)g(assuming)g(the)g(total)h(\002l-)
-60 3957 y(ter)k(size)g(is)h(lar)o(ger)d(than)h(the)h(CPU)h(cache)e
(size.)60 b(\(W)-7 b(e)23 b(do)e(not)g(use)-60 4047 y(our)i(algorithm)g
(if)i(the)f(relation)f(is)j(so)e(small)h(that)f(the)h(computed)-60
4137 y(single)e(\002lter)h(size)f(is)h(smaller)g(than)e(cache,)h(b)n
(ut)h(the)f(total)g(size)h(of)-60 4226 y(the)c(multiple)g(\002lters)h
(may)e(be)h(lar)o(ger)f(than)h(cache.\))40 4319 y(In)32
b(the)g(multi-\002lter)g(scheme,)j(a)e(b)n(uild)f(tuple)g(is)h(still)h
(repre-)-60 4408 y(sented)24 b(by)g(a)h(single)f(\002lter)h
(corresponding)c(to)j(its)i(sub-partition.)-60 4498 y(Therefore,)41
b(the)d(multi-\002lter)g(scheme)g(still)i(writes)f(three)f(bits)-60
4588 y(for)24 b(e)n(v)o(ery)f(b)n(uild)i(tuple,)g(incurring)d(the)j
(same)g(number)e(of)h(cache)-60 4677 y(misses)d(as)g(the)f
(multi-\002lter)g(scheme.)p -60 4742 780 4 v 30 4798
a Fi(4)60 4821 y Fs(S)27 b Fc(=)d(50)19 b Fh(is)g(a)g(reasonable)j
(choice.)29 b(Ev)o(en)20 b(if)f(the)h(cache)h(size)f(is)f(as)g(small)h
(as)-60 4892 y(1MB,)14 b(and)h(the)h(I/O)e(partition)k(phase)d(can)g
(produce)h(up)f(to)g(500)g(partitions)i(\(limited)-60
4963 y(by)h(the)h(capability)j(of)c(the)h(storage)g(manager\),)h(it)f
(allo)n(ws)g(the)g(b)o(uild)g(relation)i(size)-60 5034
y(to)c(be)h(as)f(lar)o(ge)h(as)f(25GB.)30 5089 y Fi(5)60
5113 y Fh(Hash)k(join)h(may)f(choose)h(to)f(hold)h(intermediate)j
(partition)f(pages)e(in)f(mem-)-60 5184 y(ory)l(.)30
b(Therefore,)22 b(the)f(abo)o(v)o(e)g(additional)j(memory)c(space)h
(requirement)i(may)d(re-)-60 5255 y(sult)g(in)f(e)o(xtra)h(I/Os.)27
b(Ho)n(we)n(v)o(er)m(,)21 b(hash)e(join)h(is)f(CPU)g(bound)g(with)h
(reasonable)h(I/O)-60 5326 y(bandwidth)e([4],)e(and)g(this)h(is)f(a)g
(minor)g(ef)n(fect.)p 2040 -146 1951 4 v 2023 518 a @beginspecial
0 @llx 0 @lly 290 @urx 146 @ury 1440 @rwi @setspecial
%%BeginDocument: graphs/bloom-v.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bloom-v.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Wed Nov 17 19:31:57 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 290 146
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 146 moveto 0 0 lineto 290 0 lineto 290 146 lineto closepath clip newpath
-0.0 144.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 2325 0 m 2625 0 l 2625 300 l 2325 300 l
 cp gs col0 s gr 
% Polyline
n 2325 300 m 2625 300 l 2625 600 l 2325 600 l
 cp gs col0 s gr 
% Polyline
n 2325 600 m 2625 600 l 2625 900 l 2325 900 l
 cp gs col0 s gr 
% Polyline
n 2325 900 m 2625 900 l 2625 1200 l 2325 1200 l
 cp gs col0 s gr 
% Polyline
n 2325 1200 m 2625 1200 l 2625 1500 l 2325 1500 l
 cp gs col0 s gr 
% Polyline
n 2325 1500 m 2625 1500 l 2625 1800 l 2325 1800 l
 cp gs col0 s gr 
% Polyline
n 2325 1800 m 2625 1800 l 2625 2100 l 2325 2100 l
 cp gs col0 s gr 
% Polyline
n 2325 2100 m 2625 2100 l 2625 2400 l 2325 2400 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
2400 240 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 540 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 840 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 1140 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 1440 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 1740 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 2040 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 2340 m
gs 1 -1 sc (1) col0 sh gr
% Polyline
n 525 0 m 825 0 l 825 300 l 525 300 l
 cp gs col0 s gr 
% Polyline
n 525 300 m 825 300 l 825 600 l 525 600 l
 cp gs col0 s gr 
% Polyline
n 525 600 m 825 600 l 825 900 l 525 900 l
 cp gs col0 s gr 
% Polyline
n 525 900 m 825 900 l 825 1200 l 525 1200 l
 cp gs col0 s gr 
% Polyline
n 525 1200 m 825 1200 l 825 1500 l 525 1500 l
 cp gs col0 s gr 
% Polyline
n 525 1500 m 825 1500 l 825 1800 l 525 1800 l
 cp gs col0 s gr 
% Polyline
n 525 1800 m 825 1800 l 825 2100 l 525 2100 l
 cp gs col0 s gr 
% Polyline
n 525 2100 m 825 2100 l 825 2400 l 525 2400 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
600 240 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 540 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 840 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 1140 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 1440 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 1740 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
600 2340 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 225 m
gs 1 -1 sc (sub0) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 825 m
gs 1 -1 sc (b0) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 1425 m
gs 1 -1 sc (b1) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 2025 m
gs 1 -1 sc (b2) col0 sh gr
% Polyline
n 1425 0 m 1725 0 l 1725 300 l 1425 300 l
 cp gs col0 s gr 
% Polyline
n 1425 300 m 1725 300 l 1725 600 l 1425 600 l
 cp gs col0 s gr 
% Polyline
n 1425 600 m 1725 600 l 1725 900 l 1425 900 l
 cp gs col0 s gr 
% Polyline
n 1425 900 m 1725 900 l 1725 1200 l 1425 1200 l
 cp gs col0 s gr 
% Polyline
n 1425 1200 m 1725 1200 l 1725 1500 l 1425 1500 l
 cp gs col0 s gr 
% Polyline
n 1425 1500 m 1725 1500 l 1725 1800 l 1425 1800 l
 cp gs col0 s gr 
% Polyline
n 1425 1800 m 1725 1800 l 1725 2100 l 1425 2100 l
 cp gs col0 s gr 
% Polyline
n 1425 2100 m 1725 2100 l 1725 2400 l 1425 2400 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
1500 240 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 540 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 840 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 1140 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 1440 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 1740 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1500 2340 m
gs 1 -1 sc (0) col0 sh gr
% Polyline
n 3907 1200 m 4207 1200 l 4207 1500 l 3907 1500 l
 cp gs col0 s gr 
% Polyline
n 4207 1200 m 4507 1200 l 4507 1500 l 4207 1500 l
 cp gs col0 s gr 
% Polyline
n 4507 1200 m 4807 1200 l 4807 1500 l 4507 1500 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
3982 1440 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
4282 1440 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
4582 1440 m
gs 1 -1 sc (0) col0 sh gr
% Ellipse
n 3422 1346 300 150 0 360 DrawEllipse gs col0 s gr

% Polyline
 [60] 0 sd
n 510 630 m 405 630 405 757 105 arcto 4 {pop} repeat
  405 862 2640 862 105 arcto 4 {pop} repeat
  2745 862 2745 735 105 arcto 4 {pop} repeat
  2745 630 510 630 105 arcto 4 {pop} repeat
 cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 502 1238 m 397 1238 397 1365 105 arcto 4 {pop} repeat
  397 1470 2632 1470 105 arcto 4 {pop} repeat
  2737 1470 2737 1343 105 arcto 4 {pop} repeat
  2737 1238 502 1238 105 arcto 4 {pop} repeat
 cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 502 1830 m 397 1830 397 1957 105 arcto 4 {pop} repeat
  397 2062 2632 2062 105 arcto 4 {pop} repeat
  2737 2062 2737 1935 105 arcto 4 {pop} repeat
  2737 1830 502 1830 105 arcto 4 {pop} repeat
 cp gs col0 s gr  [] 0 sd
% Polyline
n 2775 1950 m
 3195 1485 l gs col0 s gr 
% Polyline
n 2775 1350 m 2850 1350 l 2925 1350 l 2940 1350 l 3105 1350 l
 3000 1350 l gs col0 s gr 
% Polyline
n 2775 750 m
 3187 1185 l gs col0 s gr 
% Polyline
gs  clippath
3914 1372 m 3914 1312 l 3814 1312 l 3889 1342 l 3814 1372 l cp
eoclip
n 3720 1342 m
 3899 1342 l gs col0 s gr gr

% arrowhead
n 3814 1372 m 3889 1342 l 3814 1312 l 3829 1342 l 3814 1372 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 270.00 scf sf
900 225 m
gs 1 -1 sc (sub1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1800 225 m
gs 1 -1 sc (sub2) col0 sh gr
/Times-Roman ff 270.00 scf sf
3225 1425 m
gs 1 -1 sc (and) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1334 w @beginspecial 0 @llx 0 @lly 146 @urx
134 @ury 720 @rwi @setspecial
%%BeginDocument: graphs/bloom-h.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bloom-h.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Nov  9 15:52:32 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 146 134
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 134 moveto 0 0 lineto 146 0 lineto 146 134 lineto closepath clip newpath
0.7 135.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 0 300 m 300 300 l 300 600 l 0 600 l
 cp gs col0 s gr 
% Polyline
n 300 300 m 600 300 l 600 600 l 300 600 l
 cp gs col0 s gr 
% Polyline
n 600 300 m 900 300 l 900 600 l 600 600 l
 cp gs col0 s gr 
% Polyline
n 900 300 m 1200 300 l 1200 600 l 900 600 l
 cp gs col0 s gr 
% Polyline
n 1200 300 m 1500 300 l 1500 600 l 1200 600 l
 cp gs col0 s gr 
% Polyline
n 1500 300 m 1800 300 l 1800 600 l 1500 600 l
 cp gs col0 s gr 
% Polyline
n 1800 300 m 2100 300 l 2100 600 l 1800 600 l
 cp gs col0 s gr 
% Polyline
n 2100 300 m 2400 300 l 2400 600 l 2100 600 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
75 540 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
375 540 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
675 540 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
975 540 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1275 540 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1575 540 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1875 540 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 540 m
gs 1 -1 sc (0) col0 sh gr
% Polyline
n 0 1050 m 300 1050 l 300 1350 l 0 1350 l
 cp gs col0 s gr 
% Polyline
n 300 1050 m 600 1050 l 600 1350 l 300 1350 l
 cp gs col0 s gr 
% Polyline
n 600 1050 m 900 1050 l 900 1350 l 600 1350 l
 cp gs col0 s gr 
% Polyline
n 900 1050 m 1200 1050 l 1200 1350 l 900 1350 l
 cp gs col0 s gr 
% Polyline
n 1200 1050 m 1500 1050 l 1500 1350 l 1200 1350 l
 cp gs col0 s gr 
% Polyline
n 1500 1050 m 1800 1050 l 1800 1350 l 1500 1350 l
 cp gs col0 s gr 
% Polyline
n 1800 1050 m 2100 1050 l 2100 1350 l 1800 1350 l
 cp gs col0 s gr 
% Polyline
n 2100 1050 m 2400 1050 l 2400 1350 l 2100 1350 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
75 1290 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
375 1290 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
675 1290 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
975 1290 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1275 1290 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1575 1290 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1875 1290 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 1290 m
gs 1 -1 sc (0) col0 sh gr
% Polyline
n 0 1800 m 300 1800 l 300 2100 l 0 2100 l
 cp gs col0 s gr 
% Polyline
n 300 1800 m 600 1800 l 600 2100 l 300 2100 l
 cp gs col0 s gr 
% Polyline
n 600 1800 m 900 1800 l 900 2100 l 600 2100 l
 cp gs col0 s gr 
% Polyline
n 900 1800 m 1200 1800 l 1200 2100 l 900 2100 l
 cp gs col0 s gr 
% Polyline
n 1200 1800 m 1500 1800 l 1500 2100 l 1200 2100 l
 cp gs col0 s gr 
% Polyline
n 1500 1800 m 1800 1800 l 1800 2100 l 1500 2100 l
 cp gs col0 s gr 
% Polyline
n 1800 1800 m 2100 1800 l 2100 2100 l 1800 2100 l
 cp gs col0 s gr 
% Polyline
n 2100 1800 m 2400 1800 l 2400 2100 l 2100 2100 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
75 2040 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
375 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
675 2040 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
975 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1275 2040 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
1575 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
1875 2040 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 2040 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 225 m
gs 1 -1 sc (sub0) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 975 m
gs 1 -1 sc (sub1) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 1725 m
gs 1 -1 sc (sub2) col0 sh gr
% Polyline
n 0 2250 m
 2400 2250 l gs col7 s gr 
$F2psEnd
rs

%%EndDocument
 @endspecial 2323 608 a Fq(\(a\))j(V)-9 b(ertical)20
b(layout)382 b(\(b\))20 b(Horizontal)e(layout)p 2040
698 V 2295 838 a(Figure)i(5:)25 b(Layouts)19 b(of)h(multiple)g(Bloom)g
(\002lters)p 2040 950 V 2183 1610 a @beginspecial 0 @llx
0 @lly 405 @urx 146 @ury 720 @rhi @setspecial
%%BeginDocument: graphs/bloom-convert.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bloom-convert.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Nov  9 16:42:57 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 405 146
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 146 moveto 0 0 lineto 405 0 lineto 405 146 lineto closepath clip newpath
0.7 144.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 3750 600 m 4200 600 l 4200 1200 l 3750 1200 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 3750 0 m 4200 0 l 4200 600 l 3750 600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 250.00 0.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4650 225 m 5250 225 l 5250 675 l 4650 675 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 310.00 15.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4650 900 m 5250 900 l 5250 1350 l 4650 1350 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 0 450 m 600 450 l 600 900 l 0 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 0.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 450 m 1200 450 l 1200 900 l 600 900 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 3750 0 m 3900 0 l 3900 2400 l 3750 2400 l
 cp gs col0 s gr 
% Polyline
n 3900 0 m 4050 0 l 4050 2400 l 3900 2400 l
 cp gs col0 s gr 
% Polyline
n 4050 0 m 4200 0 l 4200 2400 l 4050 2400 l
 cp gs col0 s gr 
% Polyline
n 0 450 m 2400 450 l 2400 600 l 0 600 l
 cp gs col0 s gr 
% Polyline
n 0 600 m 2400 600 l 2400 750 l 0 750 l
 cp gs col0 s gr 
% Polyline
n 0 750 m 2400 750 l 2400 900 l 0 900 l
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
3465 810 m 3465 690 l 3110 690 l 3410 750 l 3110 810 l cp
eoclip
n 2700 750 m
 3450 750 l gs col0 s gr gr

% arrowhead
n 3110 810 m 3410 750 l 3110 690 l 3170 750 l 3110 810 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
7.500 slw
n 0 1050 m
 0 1350 l gs col0 s gr 
% Polyline
n 600 1050 m
 600 1350 l gs col0 s gr 
% Polyline
n 1200 1050 m
 1200 1350 l gs col0 s gr 
% Polyline
n 0 1200 m
 75 1200 l gs col0 s gr 
% Polyline
n 525 1200 m
 600 1200 l gs col0 s gr 
% Polyline
n 600 1200 m
 675 1200 l gs col0 s gr 
% Polyline
n 1125 1200 m
 1200 1200 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
75 300 m
gs 1 -1 sc (Horizontal layout) col0 sh gr
/Times-Roman ff 270.00 scf sf
2700 1650 m
gs 1 -1 sc (Vertical) col0 sh gr
/Times-Roman ff 270.00 scf sf
2775 1950 m
gs 1 -1 sc (layout) col0 sh gr
/Times-Roman ff 270.00 scf sf
5400 525 m
gs 1 -1 sc (Converting) col0 sh gr
/Times-Roman ff 270.00 scf sf
5400 1200 m
gs 1 -1 sc (Prefetching) col0 sh gr
/Times-Roman ff 270.00 scf sf
150 1275 m
gs 1 -1 sc (8L) col0 sh gr
/Times-Roman ff 270.00 scf sf
150 1590 m
gs 1 -1 sc (bits) col0 sh gr
/Times-Roman ff 270.00 scf sf
750 1275 m
gs 1 -1 sc (8L) col0 sh gr
/Times-Roman ff 270.00 scf sf
750 1575 m
gs 1 -1 sc (bits) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 2040 1701 V 2192 1840 a(Figure)g(6:)25 b(Horizontal)19
b(to)h(v)o(ertical)g(layout)f(con)m(v)o(ersion)2140 2008
y(Ho)n(we)n(v)o(er)m(,)d(the)j(multi-\002lter)f(scheme)g(checks)f
Fg(S)24 b Fq(\002lters)19 b(for)f(e)n(v-)2040 2097 y(ery)29
b(probe)f(tuple,)k(where)c Fg(S)35 b Fq(is)c(the)e(number)f(of)h
(sub-partitions)2040 2187 y(per)f(partition.)98 b(W)-7
b(e)29 b(ensure)f(that)g(the)g(\002lters)h(are)f(of)g(the)g(same)2040
2277 y(size.)d(Gi)n(v)o(en)18 b(a)i(probe)d(tuple,)i(the)g
(multi-\002lter)g(scheme)f(still)i(com-)2040 2366 y(putes)26
b(the)g(same)g(number)e(of)i(bit)g(positions)f(as)i(the)f
(single-\002lter)2040 2456 y(scheme,)19 b(then)g(it)h(simply)f(checks)g
(the)g(same)h(bit)f(positions)g(for)g(all)2040 2546 y
Fg(S)36 b Fq(\002lters.)112 b(Ho)n(we)n(v)o(er)m(,)31
b(the)f(\002lter)h(tests)g(may)f(incur)g Ff(3)p Fg(S)35
b Fq(cache)2040 2635 y(misses,)21 b(which)f(is)h(much)e(more)g(than)h
(the)g(single-\002lter)g(scheme.)2140 2725 y(This)f(problem)f(can)h(be)
g(solv)o(ed)g(by)f(laying)h(out)g(the)g(\002lters)h(v)o(er)n(-)2040
2815 y(tically)f(for)f(e)n(v)o(ery)f(partition.)23 b(As)d(sho)n(wn)e
(in)g(Figure)g(5\(a\),)g(the)h(bits)2040 2904 y(at)28
b(the)f(same)h(bit)g(position)e(in)i(all)g(the)f(\002lters)h(of)f(a)h
(partition)f(are)2040 2994 y(consecuti)n(v)o(e)22 b(in)h(memory)-5
b(.)32 b(That)23 b(is,)i(the)f(\002rst)g(bits)g(of)f(all)h(the)f
(\002l-)2040 3084 y(ters)i(are)f(stored)f(together)m(,)h(which)f(are)i
(follo)n(wed)d(by)i(the)g(second)2040 3173 y(bits)29
b(of)g(all)g(the)g(\002lters,)j(so)d(on)f(so)i(forth.)49
b(Note)29 b(that)g(the)g(cache)2040 3263 y(line)21 b(size)h(is)g
(typically)e(32B)h(to)g(128B,)f(or)h(256-1024)d(bits,)j(which)2040
3353 y(is)30 b(much)e(lar)o(ger)g(than)h(the)g(number)f(of)h(\002lters)
h(per)e(partition)h Fg(S)5 b Fq(.)2040 3442 y(Therefore,)16
b(under)h(the)i(v)o(ertical)e(layout,)h(we)h(can)f(read)g(the)g(bits)h
(of)2040 3532 y(a)25 b(gi)n(v)o(en)f(position)g(from)g(all)i(the)f
(\002lters)h(while)f(incurring)e(only)h(a)2040 3622 y
Fo(single)f Fq(cache)f(miss.)34 b(In)23 b(this)g(w)o(ay)-5
b(,)23 b(the)g(multi-\002lter)f(scheme)h(can)2040 3711
y(k)o(eep)28 b(the)h(number)d(of)i(cache)h(misses)g(the)g(same)f(as)h
(the)g(single-)2040 3801 y(\002lter)21 b(scheme)e(for)h(testing)g(a)h
(probe)d(tuple.)2140 3891 y(Figure)29 b(5\(a\))g(sho)n(ws)h(that)g(we)g
(can)g(test)h(all)f(the)g(\002lters)h(for)e(a)2040 3980
y(gi)n(v)o(en)e(probe)f(tuple)i(using)g(a)g(bit)g(operation)f(under)f
(the)i(v)o(ertical)2040 4070 y(layout.)43 b(W)-7 b(e)28
b(simply)e(compute)f(a)i(bit-wise)f(AND)h(operation)e(of)2040
4160 y(the)34 b Fg(b)2212 4172 y Fe(0)2284 4160 y Fq(bits,)k(the)c
Fg(b)2635 4172 y Fe(1)2706 4160 y Fq(bits,)k(and)c(the)g
Fg(b)3212 4172 y Fe(2)3283 4160 y Fq(bits.)68 b(A)34
b(1)g(in)h(the)f(re-)2040 4249 y(sult)25 b(means)g(all)h(three)e(bits)i
(for)e(the)h(corresponding)c(\002lter)26 b(are)f(1.)2040
4339 y(Therefore,)17 b(a)i(1/0)g(resulting)f(bit)i(means)f(a)g(positi)n
(v)o(e/ne)o(gati)n(v)o(e)d(test)2040 4429 y(result)k(for)g(the)g
(corresponding)d(\002lter)-5 b(.)2140 4519 y(A)20 b(ne)n(w)g(problem)f
(occurs)g(when)h(we)g(lay)h(out)e(the)i(\002lters)f(v)o(erti-)2040
4608 y(cally:)j(ne)n(w)16 b(\002lters)g(can)g(not)g(be)g(easily)g
(allocated)f(and)g(the)h(number)2040 4698 y(of)g(\002lters)i(in)f(a)g
(partition)f(must)h(be)f(determined)f(before)h(allocating)2040
4788 y(the)25 b(memory)f(space)h(for)g(the)g(v)o(ertical)f(\002lters.)
41 b(Since)25 b(the)h(actual)2040 4877 y(partition)f(size)i(may)f(v)n
(ary)f(due)h(to)h(data)f(sk)o(e)n(w)-5 b(,)27 b(using)f(the)g(maxi-)
2040 4967 y(mal)h(possible)g(number)e(of)i(sub-partitions)e(may)i(w)o
(aste)h(a)f(lot)h(of)2040 5057 y(memory)18 b(space.)2140
5146 y(W)-7 b(e)17 b(solv)o(e)f(this)g(dynamic)f(allocation)g(problem)f
(by)i(using)g(hori-)2040 5236 y(zontal)h(layout)h(when)f(partitioning)f
(the)i(b)n(uild)g(relations)f(and)g(gen-)2040 5326 y(erating)22
b(the)h(\002lters,)h(as)g(sho)n(wn)e(in)i(Figure)e(5\(b\).)32
b(Then,)23 b(we)g(con-)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop -60 -146 1951 4 v -57 645 a @beginspecial
0 @llx 0 @lly 218 @urx 177 @ury 1080 @rwi @setspecial
%%BeginDocument: graphs/part-build.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: part-build.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Nov  9 17:14:23 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 218 177
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 177 moveto 0 0 lineto 218 0 lineto 218 177 lineto closepath clip newpath
0.7 178.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 2850 675 m 3600 675 l 3600 825 l 2850 825 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Ellipse
n 1290 1680 106 106 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
1200 1717 m 1200 1657 l 1015 1657 l 1165 1687 l 1015 1717 l cp
eoclip
n 915 1687 m
 1185 1687 l gs col0 s gr gr

% arrowhead
n 1015 1717 m 1165 1687 l 1015 1657 l 1045 1687 l 1015 1717 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1698 701 m 1641 680 l 1578 854 l 1658 724 l 1634 875 l cp
eoclip
n 1342 1590 m
 1665 705 l gs col0 s gr gr

% arrowhead
n 1634 875 m 1658 724 l 1578 854 l 1616 836 l 1634 875 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1680 1725 m 1680 1665 l 1495 1665 l 1645 1695 l 1495 1725 l cp
eoclip
n 1395 1695 m
 1665 1695 l gs col0 s gr gr

% arrowhead
n 1495 1725 m 1645 1695 l 1495 1665 l 1525 1695 l 1495 1725 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1634 2611 m 1690 2589 l 1623 2418 l 1650 2569 l 1567 2440 l cp
eoclip
n 1342 1785 m
 1657 2587 l gs col0 s gr gr

% arrowhead
n 1567 2440 m 1650 2569 l 1623 2418 l 1606 2457 l 1567 2440 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1800 525 m 2400 525 l 2400 675 l 1800 675 l
 cp gs col0 s gr 
% Polyline
n 1665 375 m 2550 375 l 2550 1125 l 1665 1125 l
 cp gs col0 s gr 
% Polyline
n 1665 1275 m 2557 1275 l 2557 2029 l 1665 2029 l
 cp gs col0 s gr 
% Polyline
n 1665 2175 m 2550 2175 l 2550 2955 l 1665 2955 l
 cp gs col0 s gr 
% Polyline
n 0 1275 m 900 1275 l 900 2025 l 0 2025 l
 cp gs col0 s gr 
% Polyline
n 150 1650 m 750 1650 l 750 1800 l 150 1800 l
 cp gs col0 s gr 
% Polyline
n 2850 450 m 3600 450 l 3600 600 l 2850 600 l
 cp gs col0 s gr 
% Polyline
n 2850 1350 m 3600 1350 l 3600 1500 l 2850 1500 l
 cp gs col0 s gr 
% Polyline
n 2850 1575 m 3600 1575 l 3600 1725 l 2850 1725 l
 cp gs col0 s gr 
% Polyline
n 2850 1800 m 3600 1800 l 3600 1950 l 2850 1950 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 2850 2250 m 3600 2250 l 3600 2400 l 2850 2400 l
 cp gs col0 s gr 
% Polyline
n 2850 2475 m 3600 2475 l 3600 2625 l 2850 2625 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
/Times-Roman ff 270.00 scf sf
150 1575 m
gs 1 -1 sc (tuple) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 1125 m
gs 1 -1 sc (Input buffer) col0 sh gr
/Times-Roman ff 270.00 scf sf
2850 225 m
gs 1 -1 sc (Filters) col0 sh gr
/Times-Roman ff 270.00 scf sf
900 225 m
gs 1 -1 sc (Partition buffers) col0 sh gr
/Courier-Bold ff 180.00 scf sf
2955 815 m
gs 1 -1 sc (1) col0 sh gr
/Courier-Bold ff 180.00 scf sf
3250 815 m
gs 1 -1 sc (1) col0 sh gr
/Courier-Bold ff 180.00 scf sf
3400 815 m
gs 1 -1 sc (1) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 1044 w @beginspecial 0 @llx 0 @lly 227 @urx
177 @ury 1080 @rwi @setspecial
%%BeginDocument: graphs/part-probe.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: part-probe.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Nov  9 17:19:56 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 227 177
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 177 moveto 0 0 lineto 227 0 lineto 227 177 lineto closepath clip newpath
0.7 178.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 2850 375 m 3000 375 l 3000 1125 l 2850 1125 l
 cp gs col0 s gr 
% Polyline
n 3150 375 m 3300 375 l 3300 1125 l 3150 1125 l
 cp gs col0 s gr 
% Polyline
n 3450 375 m 3600 375 l 3600 1125 l 3450 1125 l
 cp gs col0 s gr 
% Polyline
n 2850 1275 m 3000 1275 l 3000 2025 l 2850 2025 l
 cp gs col0 s gr 
% Polyline
n 3150 1275 m 3300 1275 l 3300 2025 l 3150 2025 l
 cp gs col0 s gr 
% Polyline
n 3450 1275 m 3600 1275 l 3600 2025 l 3450 2025 l
 cp gs col0 s gr 
% Polyline
n 2850 2175 m 3000 2175 l 3000 2925 l 2850 2925 l
 cp gs col0 s gr 
% Polyline
n 3150 2175 m 3300 2175 l 3300 2925 l 3150 2925 l
 cp gs col0 s gr 
% Polyline
n 3450 2175 m 3600 2175 l 3600 2925 l 3450 2925 l
 cp gs col0 s gr 
% Ellipse
n 1290 1680 106 106 0 360 DrawEllipse gs col0 s gr

% Polyline
gs  clippath
1200 1717 m 1200 1657 l 1015 1657 l 1165 1687 l 1015 1717 l cp
eoclip
n 915 1687 m
 1185 1687 l gs col0 s gr gr

% arrowhead
n 1015 1717 m 1165 1687 l 1015 1657 l 1045 1687 l 1015 1717 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1698 701 m 1641 680 l 1578 854 l 1658 724 l 1634 875 l cp
eoclip
n 1342 1590 m
 1665 705 l gs col0 s gr gr

% arrowhead
n 1634 875 m 1658 724 l 1578 854 l 1616 836 l 1634 875 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1680 1725 m 1680 1665 l 1495 1665 l 1645 1695 l 1495 1725 l cp
eoclip
n 1395 1695 m
 1665 1695 l gs col0 s gr gr

% arrowhead
n 1495 1725 m 1645 1695 l 1495 1665 l 1525 1695 l 1495 1725 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1634 2611 m 1690 2589 l 1623 2418 l 1650 2569 l 1567 2440 l cp
eoclip
n 1342 1785 m
 1657 2587 l gs col0 s gr gr

% arrowhead
n 1567 2440 m 1650 2569 l 1623 2418 l 1606 2457 l 1567 2440 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1800 525 m 2400 525 l 2400 675 l 1800 675 l
 cp gs col0 s gr 
% Polyline
n 1665 375 m 2550 375 l 2550 1125 l 1665 1125 l
 cp gs col0 s gr 
% Polyline
n 1665 1275 m 2557 1275 l 2557 2029 l 1665 2029 l
 cp gs col0 s gr 
% Polyline
n 1665 2175 m 2550 2175 l 2550 2955 l 1665 2955 l
 cp gs col0 s gr 
% Polyline
n 0 1275 m 900 1275 l 900 2025 l 0 2025 l
 cp gs col0 s gr 
% Polyline
n 150 1650 m 750 1650 l 750 1800 l 150 1800 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2700 525 m 3750 525 l 3750 600 l 2700 600 l
 cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2700 750 m 3750 750 l 3750 825 l 2700 825 l
 cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2700 975 m 3750 975 l 3750 1050 l 2700 1050 l
 cp gs col0 s gr  [] 0 sd
/Times-Roman ff 270.00 scf sf
0 1125 m
gs 1 -1 sc (Input buffer) col0 sh gr
/Times-Roman ff 270.00 scf sf
2850 225 m
gs 1 -1 sc (Filters) col0 sh gr
/Times-Roman ff 270.00 scf sf
900 225 m
gs 1 -1 sc (Partition buffers) col0 sh gr
/Times-Roman ff 270.00 scf sf
150 1575 m
gs 1 -1 sc (tuple) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial -37 734 a Fq(\(a\))19 b(P)o(artition)h(b)n(uild)g
(relation)167 b(\(b\))20 b(P)o(artition)f(probe)g(relation)p
-60 825 V 373 964 a(Figure)g(7:)26 b(I/O)20 b(partition)f(algorithm)-60
1132 y(v)o(ert)h(the)h(horizontal)e(layout)h(into)h(an)g(equi)n(v)n
(alent)e(v)o(ertical)h(layout)-60 1221 y(before)f(partitioning)f(the)i
(probe)f(relation.)40 1311 y(Figure)31 b(6)h(illustrates)g(the)g(con)m
(v)o(ersion)e(algorithm.)119 b(Hori-)-60 1401 y(zontal)27
b(\002lters)h(are)f(allocated)g(at)h(cache)e(line)i(boundaries.)91
b(W)-7 b(e)-60 1490 y(transpose)22 b(the)h(\002lters)h(one)f(block)f
(at)h(a)h(time.)34 b(Ev)o(ery)21 b(block)h(con-)-60 1580
y(sists)h(of)f(a)g(cache)g(line)g(\()p Ff(8)p Fg(L)f
Fq(bits\))h(for)f(all)h(the)g(\002lters.)31 b(The)21
b(source)-60 1670 y(cache)27 b(lines)g(of)g(dif)n(ferent)f(\002lters)i
(in)f(the)h(horizontal)d(layout)i(are)-60 1759 y(not)h(contiguous)e(in)
j(memory)-5 b(,)28 b(while)g(the)g(destination)f(block)h(is)-60
1849 y(a)22 b(continuous)e(chunk)h(of)h(memory)-5 b(.)28
b(Ev)o(ery)21 b(outer)n(-loop)e(iteration)-60 1939 y(of)i(the)f
(algorithm)g(prefetches)f(the)i(ne)o(xt)f(source)g(and)h(destination)
-60 2028 y(blocks)k(in)h(addition)e(to)h(con)m(v)o(erting)e(the)j
(current)e(block.)40 b(In)25 b(this)-60 2118 y(w)o(ay)-5
b(,)26 b(we)f(hide)g(most)g(of)g(the)g(cache)g(miss)h(latenc)o(y)e(of)h
(accessing)-60 2208 y(the)20 b(source)g(and)f(destination)g(\002lters.)
-60 2363 y Fj(4.4)82 b(P)o(artition)19 b(and)i(Inspection)f(Phase)h
(Algorithm)-60 2490 y Fq(The)f(algorithm)e(consists)j(of)f(the)g(follo)
n(wing)f(three)h(steps:)2 2597 y(1.)41 b(P)o(artition)19
b(b)n(uild)g(relation)g(and)h(compute)e(horizontal)g(\002lters;)2
2722 y(2.)41 b(Con)m(v)o(ert)19 b(horizontal)f(\002lters)j(to)f(v)o
(ertical)g(layout;)2 2847 y(3.)41 b(P)o(artition)20 b(probe)e(relation)
i(and)f(test)i(v)o(ertical)f(\002lters.)-60 2972 y(W)-7
b(e)28 b(ha)n(v)o(e)d(already)h(described)f(the)h(algorithm)f(for)h
(step)h(2.)43 b(This)-60 3062 y(subsection)19 b(describes)h(the)g
(other)g(tw)o(o)g(steps)h(in)f(the)g(algorithm.)40 3151
y(As)f(sho)n(wn)f(in)h(Figure)f(7\(a\),)g(step)h(1)g(allocates)g(an)g
(input)f(b)n(uf)n(fer)-60 3241 y(for)25 b(the)h(b)n(uild)f(relation)g
(and)h(an)f(output)g(b)n(uf)n(fer)f(for)h(e)n(v)o(ery)g(inter)n(-)-60
3331 y(mediate)33 b(partition.)63 b(It)33 b(uses)h(horizontal)e
(\002lters.)64 b(Each)33 b(parti-)-60 3420 y(tion)c(k)o(eeps)f(a)i
(page)e(counter)g(for)g(the)h(outgoing)e(pages.)51 b(When)-60
3510 y(the)35 b(counter)f(equals)h(to)h Fg(K)6 b Fq(,)39
b(the)c(number)f(of)h(pages)g(per)g(sub-)-60 3600 y(partition,)20
b(a)i(ne)n(w)g(\002lter)f(is)i(allocated)d(from)h(a)h(memory)d(pool)i
(and)-60 3689 y(the)15 b(counter)f(is)j(reset)f(to)f(0.)24
b(F)o(or)15 b(e)n(v)o(ery)f(b)n(uild)h(tuple,)h(the)f(algorithm)-60
3779 y(e)o(xtracts)20 b(the)h(join)g(attrib)n(ute)g(to)g(compute)e(a)i
(32-bit)f(hash)h(code.)26 b(It)-60 3869 y(determines)16
b(the)g(partition)g(number)f(by)h(using)h(the)g(hash)f(code)g(and)-60
3958 y(copies)29 b(the)g(tuple)g(\(with)f(projection)g(if)h(needed\))e
(to)j(the)f(output)-60 4048 y(b)n(uf)n(fer)-5 b(.)35
b(The)23 b(algorithm)f(also)j(computes)d(and)h(sets)i(the)f(three)f
(bit)-60 4138 y(positions)k(of)g(the)g(current)f(horizontal)g(\002lter)
-5 b(.)47 b(F)o(or)27 b(better)g(cache)-60 4227 y(performance,)33
b(we)h(emplo)o(y)e(group)f(prefetching)g(as)j(described)-60
4317 y(in)17 b([4)o(].)25 b(The)16 b(only)h(dif)n(ference)e(is)j(the)f
(addition)f(of)g(prefetching)f(for)-60 4407 y(the)k(Bloom)f(\002lter)h
(positions.)24 b(Moreo)o(v)o(er)m(,)16 b(a)j(tuple')-5
b(s)19 b(hash)g(code)f(is)-60 4496 y(stored)i(in)g(the)g(page)g(slot)g
(area)g(as)h(recommended)c(in)k([4)o(].)1633 4466 y Fk(6)40
4586 y Fq(As)e(sho)n(wn)e(in)i(Figure)e(7\(b\),)h(Step)g(3)g(is)i
(similar)e(to)h(Step)f(1)g(with)-60 4676 y(the)27 b(follo)n(wing)f(dif)
n(ferences.)44 b(First,)29 b(the)e(algorithm)f(tests)i(e)n(v)o(ery)-60
4765 y(probe)d(tuple)i(against)f(the)h(set)g(of)f(v)o(ertical)h
(\002lters)g(in)g(the)g(tuple')-5 b(s)-60 4855 y(partition.)59
b(A)32 b(tuple)f(is)i(dropped)d(when)h(all)h(the)g(resulting)f(bits)-60
4945 y(are)c(0.)45 b(Second,)27 b(positi)n(v)o(e)f(results)h(sho)n(w)g
(which)f(sub-partitions)-60 5034 y(may)17 b(contain)g(matching)f
(tuples)i(for)f(the)g(gi)n(v)o(en)g(probe)f(tuple.)24
b(The)p -60 5105 780 4 v 30 5160 a Fi(6)60 5184 y Fh(A)17
b(b)o(uild)i(partition)h(page)f(slot)g(consists)g(of)e(a)h(4B)h(hash)f
(code)h(and)f(a)g(2B)g(tuple)-60 5255 y(of)n(fset.)34
b(Ev)o(ery)21 b(tw)o(o)g(slots)g(are)h(combined)h(together)g(to)e
(align)h(the)g(hash)f(codes)h(at)-60 5326 y(4B)17 b(boundaries.)p
2040 -146 1951 4 v 2092 439 a @beginspecial 0 @llx 0
@lly 450 @urx 128 @ury 630 @rhi @setspecial
%%BeginDocument: graphs/counting-sort.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: counting-sort.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Wed Nov 10 15:04:04 2004
%%For: chensm@GS16.SP.CS.CMU.EDU (Shimin Chen)
%%BoundingBox: 0 0 450 128
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 128 moveto 0 0 lineto 450 0 lineto 450 128 lineto closepath clip newpath
-0.0 126.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 1125 450 m
 1875 450 l gs col0 s gr 
% Polyline
n 1125 0 m 1875 0 l 1875 750 l 1125 750 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
1275 675 m
gs 1 -1 sc (slots) col0 sh gr
% Ellipse
n 1500 1050 50 50 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1275 1050 50 50 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 1725 1050 50 50 0 360 DrawEllipse gs col0 s gr

% Polyline
n 1125 1800 m
 1875 1800 l gs col0 s gr 
% Polyline
n 1125 1350 m 1875 1350 l 1875 2100 l 1125 2100 l
 cp gs col0 s gr 
/Times-Roman ff 270.00 scf sf
1275 2025 m
gs 1 -1 sc (slots) col0 sh gr
% Polyline
n 3525 0 m 6225 0 l 6225 300 l 3525 300 l
 cp gs col0 s gr 
% Polyline
n 3825 0 m
 3825 300 l gs col0 s gr 
% Polyline
n 4125 0 m
 4125 300 l gs col0 s gr 
% Polyline
n 4425 0 m
 4425 300 l gs col0 s gr 
% Polyline
n 4725 0 m
 4725 300 l gs col0 s gr 
% Polyline
n 5025 0 m
 5025 300 l gs col0 s gr 
% Polyline
n 5325 0 m
 5325 300 l gs col0 s gr 
% Polyline
n 5625 0 m
 5625 300 l gs col0 s gr 
% Polyline
n 5925 0 m
 5925 300 l gs col0 s gr 
% Polyline
n 3525 375 m
 3525 525 l gs col0 s gr 
% Polyline
n 6225 375 m
 6225 525 l gs col0 s gr 
% Polyline
n 3525 450 m
 4275 450 l gs col0 s gr 
% Polyline
n 5550 450 m
 6225 450 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
4350 525 m
gs 1 -1 sc (num_sub0) col0 sh gr
% Polyline
n 3525 1125 m
 3525 1275 l gs col0 s gr 
% Polyline
n 3525 1200 m
 4275 1200 l gs col0 s gr 
% Polyline
n 5550 1200 m
 6825 1200 l gs col0 s gr 
% Polyline
n 3825 750 m
 3825 1050 l gs col0 s gr 
% Polyline
n 4125 750 m
 4125 1050 l gs col0 s gr 
% Polyline
n 4425 750 m
 4425 1050 l gs col0 s gr 
% Polyline
n 4725 750 m
 4725 1050 l gs col0 s gr 
% Polyline
n 5025 750 m
 5025 1050 l gs col0 s gr 
% Polyline
n 5325 750 m
 5325 1050 l gs col0 s gr 
% Polyline
n 5625 750 m
 5625 1050 l gs col0 s gr 
% Polyline
n 5925 750 m
 5925 1050 l gs col0 s gr 
% Polyline
n 3525 750 m 6825 750 l 6825 1050 l 3525 1050 l
 cp gs col0 s gr 
% Polyline
n 6225 750 m
 6225 1050 l gs col0 s gr 
% Polyline
n 6525 750 m
 6525 1050 l gs col0 s gr 
% Polyline
n 6825 1125 m
 6825 1275 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
4350 1275 m
gs 1 -1 sc (num_sub1) col0 sh gr
% Polyline
n 3525 1875 m
 3525 2025 l gs col0 s gr 
% Polyline
n 3525 1950 m
 4275 1950 l gs col0 s gr 
% Polyline
n 5550 1950 m
 6525 1950 l gs col0 s gr 
% Polyline
n 3825 1500 m
 3825 1800 l gs col0 s gr 
% Polyline
n 4125 1500 m
 4125 1800 l gs col0 s gr 
% Polyline
n 4425 1500 m
 4425 1800 l gs col0 s gr 
% Polyline
n 4725 1500 m
 4725 1800 l gs col0 s gr 
% Polyline
n 5025 1500 m
 5025 1800 l gs col0 s gr 
% Polyline
n 5325 1500 m
 5325 1800 l gs col0 s gr 
% Polyline
n 5625 1500 m
 5625 1800 l gs col0 s gr 
% Polyline
n 5925 1500 m
 5925 1800 l gs col0 s gr 
% Polyline
n 3525 1500 m 6525 1500 l 6525 1800 l 3525 1800 l
 cp gs col0 s gr 
% Polyline
n 6225 1500 m
 6225 1800 l gs col0 s gr 
% Polyline
n 6525 1875 m
 6525 2025 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
4350 2025 m
gs 1 -1 sc (num_sub2) col0 sh gr
/Times-Roman ff 270.00 scf sf
6375 225 m
gs 1 -1 sc (sub0) col0 sh gr
/Times-Roman ff 270.00 scf sf
6975 975 m
gs 1 -1 sc (sub1) col0 sh gr
/Times-Roman ff 270.00 scf sf
6675 1725 m
gs 1 -1 sc (sub2) col0 sh gr
% Polyline
n 975 300 m
 975 1800 l gs col0 s gr 
% Polyline
n 975 300 m
 1050 225 l gs col0 s gr 
% Polyline
n 975 1800 m
 1050 1875 l gs col0 s gr 
% Polyline
gs  clippath
3398 173 m 3379 116 l 3204 174 l 3356 156 l 3223 231 l cp
eoclip
n 2025 600 m
 3375 150 l gs col0 s gr gr

% arrowhead
n 3223 231 m 3356 156 l 3204 174 l 3242 193 l 3223 231 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
3383 932 m 3396 873 l 3216 834 l 3356 896 l 3203 892 l cp
eoclip
n 2025 600 m
 3375 900 l gs col0 s gr gr

% arrowhead
n 3203 892 m 3356 896 l 3216 834 l 3238 869 l 3203 892 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
gs  clippath
3368 1682 m 3405 1635 l 3259 1522 l 3359 1638 l 3222 1569 l cp
eoclip
n 2025 600 m
 3375 1650 l gs col0 s gr gr

% arrowhead
n 3222 1569 m 3359 1638 l 3259 1522 l 3264 1564 l 3222 1569 l 
 cp gs col7 1.00 shd ef gr  col0 s
/Times-Roman ff 270.00 scf sf
0 1350 m
gs 1 -1 sc (Pages) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 1050 m
gs 1 -1 sc (Partition) col0 sh gr
/Times-Roman ff 270.00 scf sf
0 750 m
gs 1 -1 sc (Probe) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 1575 m
gs 1 -1 sc (tuple ptr) col0 sh gr
/Times-Roman ff 270.00 scf sf
2175 1800 m
gs 1 -1 sc (hash code) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 2040 529 V 2040 669 a Fq(Figure)g(8:)25
b(Extracting)16 b(probe)h(tuple)g(information)f(for)h(e)n(v)o(ery)g
(sub-)2040 758 y(partition)i(using)h(counting)e(sort)2040
930 y(sub-partition)j(ID\(s\))i(is)i(recorded)c(in)i(the)h(slot)g(area)
f(of)g(the)g(same)2040 1019 y(output)h(page)g(containing)g(the)h
(tuple.)3152 989 y Fk(7)3224 1019 y Fq(In)g(most)g(cases,)i(a)f(single)
2040 1109 y(sub-partition)e(ID)i(is)i(found.)41 b(Note)26
b(that)g(slots)h(may)f(be)g(of)g(v)n(ari-)2040 1199 y(able)e(size)i(no)
n(w)-5 b(.)37 b(This)25 b(is)g(not)f(a)h(problem)e(since)i(the)g(probe)
e(slots)2040 1288 y(will)g(only)e(be)g(visited)h(sequentially)f(\(in)h
(the)g(counting)e(sort)i(step\))2040 1378 y(in)31 b(the)g(join)f(phase)
g(algorithm,)i(as)f(will)h(be)e(described)g(in)g(Sec-)2040
1468 y(tion)25 b(5.)42 b(Third,)25 b(the)h(number)e(of)h(probe)f
(tuples)i(associated)f(with)2040 1557 y(each)e(sub-partition)f(is)i
(counted,)f(which)g(is)i(used)e(\(in)g(the)h(count-)2040
1647 y(ing)c(sort)g(step\))g(in)h(the)f(join)g(phase)g(algorithm.)2040
1853 y Fn(5)99 b(Cache-Stationary)26 b(J)o(oin)f(Phase)2040
1992 y Fq(The)20 b(join)g(phase)g(algorithm)e(consists)j(of)f(the)g
(follo)n(wing)f(steps:)2102 2106 y(1.)41 b(Read)20 b(b)n(uild)g(and)g
(probe)f(partitions)g(into)h(main)g(memory;)2102 2239
y(2.)41 b(Extract)20 b(per)n(-sub-partition)d(probe)h(tuple)i
(pointers;)2102 2373 y(3.)41 b(Join)20 b(each)g(pair)g(of)g(b)n(uild)g
(and)f(probe)g(sub-partitions.)2040 2505 y(By)h(using)e(the)h
(sub-partition)e(information)g(collected)i(in)g(the)g(par)n(-)2040
2594 y(tition)32 b(and)f(inspection)g(phase,)j(the)e(algorithm)f(achie)
n(v)o(es)g(good)2040 2684 y(cache)26 b(performance)f(without)h(cop)o
(ying)f(an)o(y)h(tuples.)45 b(The)27 b(sub-)2040 2774
y(partition)c(information)e(is)k(stored)f(in)g(the)g(order)e(of)i
(probe)f(tuples)2040 2863 y(in)c(the)h(probe)e(intermediate)g
(partitions.)23 b(Ho)n(we)n(v)o(er)m(,)18 b(Step)h(3)h(visits)2040
2953 y(all)d(the)g(probe)e(tuples)i(of)f(a)h(single)g(sub-partition)d
(and)j(then)f(mo)o(v)o(es)2040 3043 y(on)30 b(to)g(the)g(ne)o(xt)f
(sub-partition.)53 b(It)30 b(requires)g(the)g(sub-partition)2040
3132 y(information)d(in)j(the)f(order)g(of)g(sub-partition)e(IDs.)54
b(Therefore,)2040 3222 y(probe)25 b(tuple)h(sub-partition)e
(information)g(has)j(to)g(be)f(sorted)g(be-)2040 3312
y(fore)k(use.)56 b(In)31 b(the)f(follo)n(wing,)i(we)e(\002rst)i
(describe)e(ho)n(w)g(Step)g(2)2040 3401 y(performs)19
b(counting)g(sort,)i(then)g(discuss)g(the)g(use)g(of)g(prefetching)2040
3491 y(to)f(impro)o(v)o(e)e(performance)g(and)h(rob)n(ustness)h(in)g
(Step)h(3.)2040 3658 y Fj(5.1)82 b(Counting)20 b(Sort)2040
3788 y Fq(The)i(algorithm)e(kno)n(ws)i(the)g(number)e(of)i
(sub-partitions)e(and)i(the)2040 3878 y(number)d(of)i(probe)f(tuples)h
(associated)g(with)g(each)g(sub-partition;)2040 3967
y(the)33 b(latter)g(is)h(collected)f(in)g(the)g(I/O)g(partition)f
(phase.)64 b(There-)2040 4057 y(fore,)33 b(we)g(can)e(use)h(counting)e
(sort,)k(which)d(is)i(a)f(f)o(ast)g(O\(N\))f(al-)2040
4147 y(gorithm,)23 b(for)h(e)o(xtracting)e(probe)h(tuple)h(information)
d(\(the)j(probe)2040 4236 y(tuple)c(pointers)f(and)h(hash)g(codes\))f
(for)h(e)n(v)o(ery)e(sub-partition.)2140 4328 y(As)25
b(sho)n(wn)f(in)g(Figure)g(8,)i(for)e(e)n(v)o(ery)f(sub-partition,)g
(we)i(allo-)2040 4418 y(cate)i(an)f(array)-5 b(,)26 b(whose)g(size)h
(is)h(equal)d(to)i(the)f(number)f(of)h(probe)2040 4507
y(tuples)18 b(associated)h(with)f(the)h(sub-partition.)j(The)c
(algorithm)f(vis-)2040 4597 y(its)i(the)e(slot)i(area)e(of)g(all)i(the)
e(probe)g(partition)f(pages)h(sequentially)-5 b(.)2040
4687 y(F)o(or)18 b(e)n(v)o(ery)e(slot,)j(it)g(computes)d(the)i(tuple)g
(address)g(using)f(the)h(tuple)2040 4776 y(of)n(fset.)26
b(Then)20 b(the)h(algorithm)e(copies)h(the)h(tuple)f(address)g(and)h
(the)2040 4866 y(hash)27 b(code)f(to)h(the)g(destination)f(array\(s\))g
(that)h(are)g(speci\002ed)g(by)2040 4956 y(the)18 b(sub-partition)f
(ID\(s\))h(recorded)e(in)j(the)g(page)e(slot.)25 b(Assuming)p
2040 5034 780 4 v 2130 5089 a Fi(7)2160 5113 y Fh(From)e(high)h
(address)h(to)f(lo)n(w)g(address,)i(a)e(probe)g(partition)j(page)e
(slot)f(con-)2040 5184 y(sists)15 b(of)h(a)f(4B)h(hash)g(code,)g(a)g
(2B)f(tuple)i(of)n(fset,)g(a)e(1B)h(number)g(of)f(sub-partitions,)k(a)
2040 5255 y(sequence)d(of)d(sub-partition)k(IDs)d(each)h(taking)g(1B.)f
(W)-5 b(e)13 b(align)i(slots)f(on)g(4B)g(bound-)2040
5326 y(aries)k(and)g(a)f(slot)g(tak)o(es)i(8B)e(when)g(there)i(is)d(a)i
(single)g(sub-partition)i(ID.)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop -60 -146 1951 4 v -17 589 a @beginspecial
0 @llx 0 @lly 453 @urx 164 @ury 810 @rhi @setspecial
%%BeginDocument: graphs/join-algo.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: join-algo.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Mar  1 14:16:14 2005
%%For: chensm@lemieux.stampede.cs.cmu.edu (Shimin Chen)
%%BoundingBox: 0 0 453 164
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 164 moveto 0 0 lineto 453 0 lineto 453 164 lineto closepath clip newpath
-0.0 162.7 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 750 975 m 2850 975 l 2850 1425 l 750 1425 l
 cp gs 0.75 setgray ef gr gs col0 s gr 
% Polyline
n 6450 0 m 5250 0 l 5250 150 l 6450 150 l
 cp gs col0 s gr 
% Polyline
n 6450 150 m 5250 150 l 5250 300 l 6450 300 l
 cp gs col0 s gr 
% Polyline
n 6450 300 m 5250 300 l 5250 450 l 6450 450 l
 cp gs col0 s gr 
% Polyline
n 6450 450 m 5250 450 l 5250 600 l 6450 600 l
 cp gs col0 s gr 
% Polyline
n 6450 600 m 5250 600 l 5250 750 l 6450 750 l
 cp gs col0 s gr 
% Polyline
n 6450 750 m 5250 750 l 5250 900 l 6450 900 l
 cp gs col0 s gr 
% Polyline
n 6450 900 m 5250 900 l 5250 1050 l 6450 1050 l
 cp gs col0 s gr 
% Polyline
n 6450 1050 m 5250 1050 l 5250 1200 l 6450 1200 l
 cp gs col0 s gr 
% Polyline
n 6450 1200 m 5250 1200 l 5250 1350 l 6450 1350 l
 cp gs col0 s gr 
% Polyline
n 6450 1350 m 5250 1350 l 5250 1500 l 6450 1500 l
 cp gs col0 s gr 
% Polyline
n 6450 1500 m 5250 1500 l 5250 1650 l 6450 1650 l
 cp gs col0 s gr 
% Polyline
n 6450 1650 m 5250 1650 l 5250 1800 l 6450 1800 l
 cp gs col0 s gr 
% Polyline
n 6450 1800 m 5250 1800 l 5250 1950 l 6450 1950 l
 cp gs col0 s gr 
% Polyline
n 6450 1950 m 5250 1950 l 5250 2100 l 6450 2100 l
 cp gs col0 s gr 
% Polyline
n 6450 2100 m 5250 2100 l 5250 2250 l 6450 2250 l
 cp gs col0 s gr 
% Polyline
n 6450 2250 m 5250 2250 l 5250 2400 l 6450 2400 l
 cp gs col0 s gr 
% Polyline
n 6450 2400 m 5250 2400 l 5250 2550 l 6450 2550 l
 cp gs col0 s gr 
% Polyline
n 6450 2550 m 5250 2550 l 5250 2700 l 6450 2700 l
 cp gs col0 s gr 
% Polyline
n 4725 1050 m
 4575 1050 l gs col0 s gr 
% Polyline
n 4725 1200 m
 4575 1200 l gs col0 s gr 
% Polyline
n 4725 1350 m
 4575 1350 l gs col0 s gr 
% Polyline
n 4725 1500 m
 4575 1500 l gs col0 s gr 
% Polyline
n 4725 1650 m
 4575 1650 l gs col0 s gr 
% Polyline
n 4725 900 m 4575 900 l 4575 1800 l 4725 1800 l
 cp gs col0 s gr 
% Polyline
n 6450 150 m 5250 150 l 5250 300 l 6450 300 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 10.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6450 2550 m 5250 2550 l 5250 2700 l 6450 2700 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 170.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6450 1200 m 5250 1200 l 5250 1350 l 6450 1350 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6450 750 m 5250 750 l 5250 900 l 6450 900 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6450 1950 m 5250 1950 l 5250 2100 l 6450 2100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 130.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6450 2100 m 5250 2100 l 5250 2250 l 6450 2250 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 350.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
5282 232 m 5235 194 l 5141 312 l 5240 238 l 5188 350 l cp
eoclip
n 4650 975 m
 5250 225 l gs col0 s gr gr

% arrowhead
n 5188 350 m 5240 238 l 5141 312 l  col0 s
% Polyline
gs  clippath
5276 845 m 5250 791 l 5114 858 l 5235 832 l 5141 912 l cp
eoclip
n 4650 1125 m
 5250 825 l gs col0 s gr gr

% arrowhead
n 5141 912 m 5235 832 l 5114 858 l  col0 s
% Polyline
gs  clippath
5265 1305 m 5265 1245 l 5113 1245 l 5233 1275 l 5113 1305 l cp
eoclip
n 4650 1275 m
 5250 1275 l gs col0 s gr gr

% arrowhead
n 5113 1305 m 5233 1275 l 5113 1245 l  col0 s
% Polyline
gs  clippath
5239 2056 m 5281 2014 l 5174 1906 l 5238 2013 l 5131 1949 l cp
eoclip
n 4650 1425 m
 5250 2025 l gs col0 s gr gr

% arrowhead
n 5131 1949 m 5238 2013 l 5174 1906 l  col0 s
% Polyline
gs  clippath
5239 2206 m 5281 2164 l 5174 2056 l 5238 2163 l 5131 2099 l cp
eoclip
n 4650 1575 m
 5250 2175 l gs col0 s gr gr

% arrowhead
n 5131 2099 m 5238 2163 l 5174 2056 l  col0 s
% Polyline
gs  clippath
5233 2654 m 5283 2620 l 5199 2494 l 5241 2611 l 5149 2527 l cp
eoclip
n 4650 1725 m
 5250 2625 l gs col0 s gr gr

% arrowhead
n 5149 2527 m 5241 2611 l 5199 2494 l  col0 s
% Polyline
n 600 1050 m
 600 1350 l gs col0 s gr 
% Polyline
n 600 1050 m
 675 975 l gs col0 s gr 
% Polyline
n 600 1350 m
 675 1425 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
0 1275 m
gs 1 -1 sc (sub1) col0 sh gr
% Polyline
n 600 1500 m
 600 1800 l gs col0 s gr 
% Polyline
n 600 1500 m
 675 1425 l gs col0 s gr 
% Polyline
n 600 1800 m
 675 1875 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
0 1725 m
gs 1 -1 sc (sub2) col0 sh gr
% Polyline
n 600 600 m
 600 900 l gs col0 s gr 
% Polyline
n 600 600 m
 675 525 l gs col0 s gr 
% Polyline
n 600 900 m
 675 975 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
0 825 m
gs 1 -1 sc (sub0) col0 sh gr
% Polyline
n 900 525 m 2100 525 l 2100 675 l 900 675 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 675 m 2100 675 l 2100 825 l 900 825 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 825 m 2100 825 l 2100 975 l 900 975 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 975 m 2100 975 l 2100 1125 l 900 1125 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 1125 m 2100 1125 l 2100 1275 l 900 1275 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 1275 m 2100 1275 l 2100 1425 l 900 1425 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 1425 m 2100 1425 l 2100 1575 l 900 1575 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 1575 m 2100 1575 l 2100 1725 l 900 1725 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 900 1725 m 2100 1725 l 2100 1875 l 900 1875 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2475 975 m 2700 975 l 2700 1125 l 2475 1125 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2475 1125 m 2700 1125 l 2700 1275 l 2475 1275 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2475 1275 m 2700 1275 l 2700 1425 l 2475 1425 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
2908 1020 m 2911 1080 l 3096 1071 l 2945 1049 l 3093 1011 l cp
eoclip
n 4425 975 m
 2925 1050 l gs col0 s gr gr

% arrowhead
n 3093 1011 m 2945 1049 l 3096 1071 l 3064 1043 l 3093 1011 l 
 cp gs col7 1.00 shd ef gr  col0 s
% Polyline
15.000 slw
n 750 975 m 2850 975 l 2850 1425 l 750 1425 l
 cp gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
2074 1162 m 2097 1218 l 2237 1162 l 2115 1179 l 2215 1106 l cp
eoclip
n 2475 1035 m
 2100 1185 l gs col0 s gr gr

% arrowhead
n 2215 1106 m 2115 1179 l 2237 1162 l  col0 s
% Polyline
gs  clippath
2074 1312 m 2097 1368 l 2237 1312 l 2115 1329 l 2215 1256 l cp
eoclip
n 2475 1185 m
 2100 1335 l gs col0 s gr gr

% arrowhead
n 2215 1256 m 2115 1329 l 2237 1312 l  col0 s
% Polyline
gs  clippath
2107 1002 m 2069 1049 l 2187 1143 l 2113 1045 l 2225 1096 l cp
eoclip
n 2100 1035 m
 2475 1335 l gs col0 s gr gr

% arrowhead
n 2225 1096 m 2113 1045 l 2187 1143 l  col0 s
/Times-Roman ff 270.00 scf sf
2175 900 m
gs 1 -1 sc (Cache) col0 sh gr
/Times-Roman ff 270.00 scf sf
6525 225 m
gs 1 -1 sc (Probe) col0 sh gr
/Times-Roman ff 270.00 scf sf
6525 525 m
gs 1 -1 sc (Partition) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 2250 m
gs 1 -1 sc (& probe tuple pointer) col0 sh gr
/Times-Roman ff 270.00 scf sf
2400 1950 m
gs 1 -1 sc (Array of hash code) col0 sh gr
/Times-Roman ff 270.00 scf sf
825 375 m
gs 1 -1 sc (Build Partition) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial -60 679 V -29 819 a Fq(Figure)20 b(9:)25
b(Joining)19 b(a)i(pair)f(of)g(b)n(uild)g(and)f(probe)g(sub-partitions)
-60 989 y(the)e(b)n(uild)f(join)g(attrib)n(ute)h(v)n(alues)f(are)g
(mostly)h(unique,)e(there)i(is)g(of-)-60 1079 y(ten)h(a)g(single)g
(sub-partition)e(ID)i(for)g(a)g(probe)f(tuple,)h(and)f(the)h(tuple)-60
1169 y(address)f(and)h(hash)f(code)h(are)f(only)g(copied)g(once.)24
b(After)17 b(process-)-60 1258 y(ing)22 b(all)h(the)f(probe)e(page)i
(slots,)h(the)f(algorithm)f(obtains)g(an)h(array)-60
1348 y(of)k(\(tuple)f(pointer)m(,)g(hash)h(code\))f(pairs)h(for)f(e)n
(v)o(ery)g(sub-partition.)-60 1438 y(Note)h(that)f(the)h(tuples)f
(themselv)o(es)g(are)h(not)f(visited)h(nor)f(copied)-60
1527 y(in)20 b(the)h(counting)d(sort.)40 1619 y(W)-7
b(e)36 b(use)g(cache)g(prefetching)d(to)j(hide)f(the)h(cache)f(miss)h
(la-)-60 1708 y(tenc)o(y)27 b(of)g(reading)f(page)h(slots)i(and)e
(writing)g(to)h(the)g(destination)-60 1798 y(arrays.)g(W)-7
b(e)23 b(k)o(eep)e(a)h(pointer)e(to)i(the)f(ne)o(xt)g(probe)f(page)h
(and)g(issue)-60 1888 y(prefetches)h(for)g(the)h(ne)o(xt)g(page)f(slot)
i(area)f(while)g(processing)f(the)-60 1977 y(slot)j(area)g(of)f(the)h
(current)f(page.)38 b(Similarly)-5 b(,)25 b(for)f(e)n(v)o(ery)f
(destina-)-60 2067 y(tion)e(array)-5 b(,)20 b(we)h(k)o(eep)g(a)h
(pointer)e(to)h(the)g(ne)o(xt)g(cache)g(line)g(starting)-60
2157 y(address.)30 b(W)-7 b(e)23 b(issue)g(a)g(prefetch)d(instruction)h
(for)h(the)g(ne)o(xt)f(cache)-60 2246 y(line)c(before)e(we)j(start)f
(using)f(the)h(current)f(cache)g(line)h(in)g(the)g(array)-5
b(.)-60 2411 y Fj(5.2)82 b(Exploiting)20 b(Pr)o(efetching)e(in)j(the)g
(J)o(oin)e(Step)-60 2541 y Fq(F)o(or)24 b(e)n(v)o(ery)g(pair)g(of)h(b)n
(uild)f(and)g(probe)g(sub-partitions,)g(the)g(algo-)-60
2631 y(rithm)k(\002rst)h(constructs)e(a)i(hash)f(table.)49
b(\(W)-7 b(e)29 b(assume)f(the)g(same)-60 2721 y(hash)i(table)h
(structure)f(as)h(in)g([4)o(].\))56 b(Since)31 b(the)g(hash)f(codes)h
(are)-60 2810 y(stored)d(in)h(the)f(b)n(uild)h(page)f(slot)h(area,)h
(the)f(algorithm)e(does)h(not)-60 2900 y(need)22 b(to)h(access)g(the)g
(actual)f(b)n(uild)g(tuples)h(for)f(creating)f(the)i(hash)-60
2990 y(table.)35 b(Ho)n(we)n(v)o(er)m(,)23 b(we)h(e)o(xpect)f(the)g(b)n
(uild)h(tuples)f(to)h(be)g(used)f(fre-)-60 3079 y(quently)k(during)h
(probing.)48 b(Therefore,)29 b(we)g(issue)g(prefetch)f(in-)-60
3169 y(structions)e(for)g(all)h(b)n(uild)g(tuples)f(of)h(the)f
(sub-partition)f(to)i(bring)-60 3259 y(them)20 b(into)g(cache,)f(as)i
(sho)n(wn)f(in)g(Figure)f(9.)40 3350 y(After)f(b)n(uilding)f(the)i
(hash)f(table,)h(the)f(algorithm)f(visits)j(the)f(ar)n(-)-60
3439 y(ray)26 b(containing)e(the)i(probe)e(tuple)i(pointers)f(and)g
(hash)h(codes)g(of)-60 3529 y(the)d(sub-partition,)f(as)i(sho)n(wn)e
(in)i(Figure)f(9.)34 b(It)23 b(probes)g(the)g(hash)-60
3619 y(table)e(with)h(hash)f(codes)g(in)h(the)f(array)-5
b(.)28 b(If)21 b(a)h(probe)e(is)i(successful,)-60 3708
y(the)27 b(algorithm)e(visits)i(the)g(probe)f(tuple)g(and)g(the)h(b)n
(uild)f(tuple)g(to)-60 3798 y(v)o(erify)h(that)i(their)g(join)f(attrib)
n(utes)h(are)f(actually)h(equal.)50 b(It)29 b(pro-)-60
3888 y(duces)20 b(an)g(output)f(tuple)h(for)f(a)i(true)f(match.)40
3979 y(W)-7 b(e)24 b(issue)g(prefetches)e(for)h(the)h(probe)e(tuples)h
(and)g(for)g(the)h(ar)n(-)-60 4069 y(ray)16 b(containing)e(probe)h
(tuple)h(information.)22 b(Here,)16 b(we)h(use)g(a)g(spe-)-60
4158 y(cial)26 b(kind)e(of)h(prefetch)f(instruction,)h(non-temporal)d
(prefetches,)-60 4248 y(which)i(are)h(supported)e(by)i(Intel)f(Itanium)
g(2)h(and)f(Pentium)h(4)g(ar)n(-)-60 4338 y(chitectures)34
b([6,)h(8].)70 b(Non-temporal)32 b(prefetches)i(are)h(used)g(to)-60
4427 y(read)f(cache)g(lines)i(that)e(do)h(not)f(ha)n(v)o(e)g(temporal)g
(locality;)42 b(the)-60 4517 y(cache)34 b(lines)h(are)g(supposed)f(to)h
(be)f(used)h(only)f(once.)68 b(There-)-60 4607 y(fore,)33
b(cache)d(lines)h(read)g(by)f(non-temporal)e(prefetches)i(ignore)-60
4696 y(the)16 b(LR)m(U)g(states)g(in)g(the)g(cache,)g(and)f(the)o(y)g
(go)g(to)h(a)g(particular)e(loca-)-60 4786 y(tion)20
b(in)h(the)f(corresponding)d(cache)j(set,)h(thus)f(minimizing)f(cache)
-60 4876 y(pollution)i(by)h(the)h(prefetched)e(line.)32
b(Since)23 b(we)g(aim)g(to)f(k)o(eep)h(the)-60 4965 y(b)n(uild)29
b(sub-partition)f(and)g(the)i(hash)f(table)h(in)f(cache,)j(minimiz-)-60
5055 y(ing)24 b(the)h(cache)f(pollution)f(caused)i(by)f(visiting)g
(other)g(structures)-60 5145 y(is)d(e)o(xactly)e(what)i(we)f(w)o(ant.)
40 5236 y(T)-7 b(o)15 b(prefetch)f(the)i(array)e(containing)g(probe)g
(tuple)h(pointers)f(and)-60 5326 y(probe)22 b(hash)h(codes,)h(we)f(k)o
(eep)g(a)h(pointer)e Fg(p)i Fq(to)g(the)f(cache)g(line)g(in)2040
-66 y(the)e(array)g(that)g(are)h Fg(dist)f Fq(lines)h(ahead)f(of)g(the)
g(current)g(cache)f(line)2040 23 y(\()p Fg(dist)28 b
Ff(=)g(20)22 b Fq(in)i(our)e(implementation\).)65 b(Suppose)22
b(there)h(are)g Fg(m)2040 113 y Fq(pairs)j(of)g(pointers)f(and)g(hash)h
(codes)f(in)h(e)n(v)o(ery)f(cache)h(line.)42 b(The)2040
203 y(algorithm)22 b(\002rst)i(issues)g(prefetches)d(for)i(the)g
(\002rst)h Fg(dist)g Fq(lines)f(and)2040 292 y(then)29
b(sets)i Fg(p)e Fq(to)h(the)g(be)o(ginning)c(of)k Fg(dist)25
b Ff(+)g(1)k Fq(line.)53 b(Whene)n(v)o(er)2040 382 y(the)23
b(algorithm)f(\002nishes)i(processing)d Fg(m)j Fq(probe)e(tuples,)i(it)
g(issues)2040 472 y(a)17 b(prefetch)e(for)h(the)h(cache)f(line)h
(pointed)e(by)h Fg(p)h Fq(and)f(increases)h Fg(p)g Fq(by)2040
561 y(a)k(cache)e(line.)25 b(The)20 b(algorithm)f(checks)g
Fg(p)i Fq(against)e(the)h(end)g(of)g(the)2040 651 y(array)f(to)h(stop)f
(prefetching.)48 b(T)-7 b(o)20 b(prefetch)f(for)g(the)h(probe)e
(tuples,)2040 741 y(we)29 b(use)g(a)g(b)n(uf)n(fer)f(to)h(temporarily)e
(store)h(the)h(pairs)g(of)g(pointers)2040 830 y(pointing)f(to)i(the)g
(b)n(uild)f(and)g(probe)g(tuples)g(that)h(correspond)d(to)2040
920 y(successful)e(hash)g(table)g(probes.)39 b(When)25
b(this)g(b)n(uf)n(fer)f(is)i(full,)g(we)2040 1010 y(visit)18
b(these)g(tuple)f(pairs)g(using)g(softw)o(are-pipelined)e(prefetching.)
2140 1100 y(Finally)-5 b(,)23 b(we)h(impro)o(v)o(e)d(the)i(rob)n
(ustness)g(of)g(our)g(algorithm)f(by)2040 1189 y(issuing)c(prefetches)f
(for)g(the)h(b)n(uild)g(tuples)f(while)i(prefetching)c(for)2040
1279 y(the)32 b(probe)e(tuples.)60 b(In)32 b(most)g(cases,)j(the)d(b)n
(uild)g(tuples)g(are)f(al-)2040 1369 y(ready)e(in)h(cache,)i(and)d
(these)h(prefetches)f(do)g(not)h(ha)n(v)o(e)f(ef)n(fects.)2040
1458 y(Ho)n(we)n(v)o(er)m(,)38 b(if)e(the)f(b)n(uild)h(tuples)g(are)f
(replaced)g(someho)n(w)-5 b(,)38 b(the)2040 1548 y(prefetches)28
b(can)i(bring)f(the)h(b)n(uild)f(tuples)h(back)f(into)g(the)h(cache)
2040 1638 y(quickly)-5 b(.)53 b(W)-7 b(e)31 b(do)f(not)g(prefetch)f
(the)h(hash)g(table)g(for)f(the)h(same)2040 1727 y(purpose)18
b(because)h(it)i(requires)d(lar)o(ger)h(changes)f(to)i(the)g(algorithm)
2040 1817 y(and)g(therefore)e(may)i(incur)f(signi\002cant)h(run-time)e
(cost.)2040 2015 y Fn(6)99 b(Experimental)26 b(Results)2040
2151 y Fq(In)32 b(this)g(section,)j(we)d(e)n(v)n(aluate)g(the)g(CPU)h
(cache)e(performance)2040 2241 y(of)j(our)g(inspector)g(joins)g
(against)g(the)h(cache)f(prefetching)e(and)2040 2331
y(cache)k(partitioning)e(algorithms)i(through)e(detailed)i(c)o
(ycle-by-)2040 2420 y(c)o(ycle)c(simulations.)61 b(Moreo)o(v)o(er)m(,)
32 b(in)g(Section)g(6.5,)j(we)e(e)o(xploit)2040 2510
y(the)18 b(inspection)g(approach)e(to)i(detect)h(situations)f(where)g
(there)g(are)2040 2600 y(duplicate)28 b(b)n(uild)g(k)o(e)o(ys)h(or)g
(where)f(relations)g(are)h(nearly)f(sorted,)2040 2689
y(and)20 b(choose)f(the)h(best)h(join)f(phase)f(algorithm.)2040
2848 y Fj(6.1)82 b(Experimental)20 b(Setup)2040 2993
y(Implementation)42 b(Details.)132 b Fq(W)-7 b(e)42 b(implemented)e
(\002)n(v)o(e)i(hash)2040 3083 y(join)17 b(algorithms:)22
b(group)15 b(prefetching,)g(softw)o(are-pipelined)f(pre-)2040
3173 y(fetching,)34 b(cache)d(partitioning,)i(enhanced)e(cache)h
(partitioning)2040 3262 y(with)25 b(adv)n(anced)e(prefetching)f
(support,)j(and)f(our)g(inspector)g(join)2040 3352 y(algorithm.)51
b(W)-7 b(e)30 b(store)f(relations)g(and)g(intermediate)e(partitions)
2040 3442 y(as)j(disk)g(\002les,)i(and)d(the)h(join)f(algorithms)g(are)
g(implemented)f(as)2040 3531 y(stand-alone)c(programs)f(that)i(read)g
(and)g(write)g(relations)g(in)h(disk)2040 3621 y(\002les.)45
b(W)-7 b(e)28 b(k)o(eep)e(schemas)g(and)g(statistics)j(in)d(separate)h
(descrip-)2040 3711 y(tion)36 b(\002les)h(for)e(simplicity)-5
b(.)72 b(Statistics)37 b(about)f(the)g(number)e(of)2040
3800 y(pages)25 b(and)g(the)h(number)e(of)h(tuples)h(are)f(used)h(to)g
(compute)e(hash)2040 3890 y(table)c(sizes,)h(numbers)e(of)h
(partitions,)f(and)g(Bloom)h(\002lter)h(sizes.)2140 3980
y(Our)30 b(cache)g(prefetching)e(implementations)h(mainly)g(follo)n(w)
2040 4070 y(the)h(descriptions)e(in)i([4].)54 b(Prefetch)29
b(instructions)f(are)i(inserted)2040 4160 y(into)22 b(C++)g(source)g
(codes)f(using)h(gcc)g(inline)g(ASM)g(macros.)30 b(The)2040
4249 y(only)17 b(dif)n(ference)e(is)k(that)e(the)h(algorithms)e
(utilize)i(a)g(single)f(Bloom)2040 4339 y(\002lter)g(for)f(remo)o(ving)
f(probe)g(tuples)i(ha)n(ving)e(no)i(matches.)23 b(W)-7
b(e)18 b(add)2040 4429 y(prefetches)24 b(for)h(the)h(Bloom)f(\002lter)h
(to)g(the)f(group)f(and)h(softw)o(are-)2040 4518 y(pipelined)e
(prefetching)e(algorithm)i(in)h(the)g(I/O)g(partition)f(phase.)2040
4608 y(In)d(our)f(e)o(xperiments,)g(we)h(\002nd)g(that)h(the)f
(performance)d(results)k(of)2040 4697 y(the)15 b(tw)o(o)h(prefetching)d
(algorithms)h(are)h(v)o(ery)f(similar)-5 b(.)24 b(T)-7
b(o)15 b(simplify)2040 4787 y(presentation,)27 b(we)h(only)e(sho)n(w)h
(the)g(group)f(prefetching)f(curv)o(es,)2040 4877 y(which)20
b(are)g(labeled)f(as)i(\223)p Fo(cac)o(he)e(pr)m(ef)p
Fq(\224.)2140 4967 y(The)42 b(tw)o(o)i(cache)f(partitioning)e
(algorithms)h(both)g(use)i(the)2040 5057 y(group)e(prefetching)g
(implementation)f(for)j(the)g(I/O)g(partition)2040 5146
y(phase;)26 b(the)o(y)e(perform)e(re-partition)g(and)i(join)g
(cache-sized)f(sub-)2040 5236 y(partitions)34 b(in)i(the)f(join)f
(phase.)70 b(The)34 b(enhanced)g(cache)g(parti-)2040
5326 y(tioning)e(performs)g(adv)n(anced)f(prefetching)g(similar)i(to)h
(that)f(of)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop -60 -66 a Fq(the)35 b(inspector)e(join)i(for)f
(joining)g(a)h(pair)f(of)h(cache-sized)e(sub-)-60 23
y(partitions.)26 b(It)21 b(also)g(performs)e(adv)n(anced)g(prefetching)
g(to)i(reduce)-60 113 y(the)30 b(re-partition)d(cost.)54
b(This)30 b(algorithm)e(serv)o(es)h(as)i(a)f(stronger)-60
203 y(competitor)18 b(to)j(our)e(algorithm.)40 309 y(In)25
b(e)n(v)o(ery)f(e)o(xperiment,)h(the)h(number)d(of)j(I/O)g(partitions)e
(gen-)-60 398 y(erated)19 b(is)i(a)f(multiple)f(of)g(the)h(number)d(of)
j(CPUs.)26 b(Then)19 b(the)g(same)-60 488 y(join)28 b(phase)f
(algorithm)f(is)j(run)e(on)g(e)n(v)o(ery)g(CPU)i(to)f(process)f(dif-)
-60 578 y(ferent)20 b(partitions)g(in)g(parallel.)26
b(The)20 b(partition)g(phase)g(algorithms)-60 667 y(tak)o(e)28
b(adv)n(antage)e(of)i(multiple)f(CPUs)j(by)d(conceptually)f(cutting)-60
757 y(input)16 b(relations)h(into)g(equal-sized)f(chunks)f(and)i
(partitioning)e(one)-60 847 y(chunk)20 b(on)h(e)n(v)o(ery)g(CPU.)44
b(Ev)o(ery)21 b(processor)f(generates)h(the)g(same)-60
936 y(number)27 b(of)h(partition)g(outputs.)50 b(The)28
b Fo(i)p Fq(-th)h(b)n(uild)f(partition)g(will)-60 1026
y(conceptually)d(consist)i(of)g(the)h Fo(i)p Fq(-th)f(b)n(uild)g
(output)e(generated)h(by)-60 1116 y(e)n(v)o(ery)f(processor)-5
b(.)44 b(The)26 b(probe)f(partitions)h(are)g(generated)f(simi-)-60
1205 y(larly)-5 b(.)70 b(Ev)o(ery)22 b(CPU)j(will)f(b)n(uild)f(its)i(o)
n(wn)e(\002lter\(s\))g(based)g(on)h(the)-60 1295 y(b)n(uild)17
b(tuples)g(it)h(sees.)25 b(After)17 b(partitioning)e(the)j(b)n(uild)f
(relation,)g(the)-60 1385 y(generated)24 b(\002lters)i(are)g(mer)o
(ged.)40 b(F)o(or)25 b(the)h(single-\002lter)f(scheme,)-60
1474 y(all)g(\002lters)h(are)f(OR-ed)f(together)g(to)h(get)g(a)g
(single)f(\002lter)-5 b(.)40 b(F)o(or)25 b(the)-60 1564
y(multi-\002lter)h(scheme,)h(dif)n(ferent)d(CPUs)k(actually)d(generate)
g(hor)n(-)-60 1654 y(izontal)32 b(\002lters)g(for)g(dif)n(ferent)e
(sub-partitions.)59 b(Therefore,)33 b(the)-60 1743 y(algorithm)24
b(can)i(directly)f(perform)f(horizontal)g(to)i(v)o(ertical)f(\002lter)
-60 1833 y(con)m(v)o(ersion.)f(Then,)c(the)g(same)h(\002lter\(s\))g(is)
h(shared)d(across)i(all)h(the)-60 1923 y(CPUs)g(for)d(testing)h(probe)f
(tuples.)40 2047 y Fj(Experimental)h(Design.)49 b Fq(W)-7
b(e)22 b(use)f(a)g(simple)g(schema)g(for)f(all)-60 2136
y(the)k(relations:)32 b(a)24 b(tuple)f(consists)h(of)g(a)g(4-byte)e
(randomly)g(gener)n(-)-60 2226 y(ated)j(join)g(k)o(e)o(y)f(and)g(a)i
(\002x)o(ed-length)c(payload.)38 b(An)25 b(output)f(tuple)-60
2316 y(contains)h(all)h(the)f(\002elds)h(of)f(the)g(matching)f(b)n
(uild)h(and)g(probe)f(tu-)-60 2405 y(ples.)40 b(In)24
b(all)i(the)f(e)o(xperiments)e(e)o(xcept)h(those)h(in)g(Section)g(6.5,)
g(a)-60 2495 y(probe)d(tuple)h(can)g(match)g(zero)f(or)h(one)g(b)n
(uild)g(tuple,)g(and)g(a)h(b)n(uild)-60 2585 y(tuple)31
b(may)g(match)f(one)h(or)g(more)f(probe)g(tuples.)58
b(W)-7 b(e)32 b(test)h(the)-60 2674 y(performance)22
b(of)i(our)g(solution)g(in)h(v)n(arious)e(situations)i(by)f(v)n(ary-)
-60 2764 y(ing)i(the)g(tuple)g(size,)i(the)e(number)f(of)g(probe)g
(tuples)h(matching)f(a)-60 2854 y(b)n(uild)d(tuple)g(\(which)f(is)i
(the)g(ratio)f(between)f(probe)g(and)h(b)n(uild)g(re-)-60
2943 y(lation)j(sizes\),)i(and)e(the)h(percentage)d(of)i(probe)f
(tuples)i(that)f(ha)n(v)o(e)-60 3033 y(matches.)f(W)-7
b(e)21 b(v)n(ary)e(the)g(latter)h(from)f(5\045)g(to)h(100\045)f(to)h
(model)f(the)-60 3123 y(ef)n(fects)i(of)g(a)h(selection)f(on)g(a)h(b)n
(uild)f(attrib)n(ute)g(dif)n(ferent)e(from)i(the)-60
3212 y(join)f(attrib)n(ute.)40 3319 y(In)d(all)h(our)f(e)o(xperiments,)
f(we)j(assume)e(the)h(a)n(v)n(ailable)f(memory)-60 3408
y(size)k(for)f(the)g(join)g(phase)g(is)h(50MB)f(and)g(the)g(cache)g
(size)h(is)h(1MB,)-60 3498 y(which)j(follo)n(w)g(the)h(settings)g(in)g
([4)o(].)42 b(Note)25 b(that)h(when)f(multiple)-60 3587
y(join)i(instances)g(are)g(running)e(on)h(multiple)h(processors,)h(the)
f(ac-)-60 3677 y(tual)e(memory)e(allocated)h(is)h(50MB)g(multiplied)e
(by)i(the)f(number)-60 3767 y(of)f(instances.)33 b(F)o(or)23
b(e)o(xample,)f(in)h(the)g(case)h(of)e(32)h(CPUs,)i(the)e(to-)-60
3856 y(tal)d(memory)d(used)h(for)h(the)g(join)f(phase)h(is)h(1600MB.)d
(The)i(Bloom)-60 3946 y(\002lter)f(f)o(alse)g(positi)n(v)o(e)e(rate)i
(for)f(the)g(cache)g(prefetching)e(algorithm,)-60 4036
y(and)21 b(the)g(tw)o(o)g(cache)g(partitioning)e(algorithms)h(is)i(set)
g(to)f(be)g(0.05.)-60 4125 y(The)28 b(indi)n(vidual)f(Bloom)i(\002lter)
g(f)o(alse)g(positi)n(v)o(e)f(rate)h(for)f(our)g(in-)-60
4215 y(spector)20 b(join)f(algorithm)g(is)i(set)g(to)g(be)f(0.001.)40
4339 y Fj(Simulation)25 b(P)o(arameters.)67 b Fq(W)-7
b(e)27 b(e)n(v)n(aluate)e(the)g(CPU)i(cache)-60 4429
y(performance)35 b(\(of)i(user)h(mode)e(e)o(x)o(ecutions\))g(of)h(all)i
(the)e(algo-)-60 4519 y(rithms)f(through)d(detailed)j(c)o(ycle-by-c)o
(ycle)c(simulations.)71 b(W)-7 b(e)-60 4608 y(generate)22
b(fully-functional)e(e)o(x)o(ecutables)i(with)i(gcc)f(and)g(run)g(the)
-60 4698 y(programs)28 b(on)61 b(a)31 b(simulator)e(that)i(models)e(a)i
(shared-b)n(us)e(SMP)-60 4788 y(system)g(with)h(1.5GHz)e(processors.)51
b(W)-7 b(e)31 b(v)n(ary)d(the)h(number)f(of)-60 4877
y(processors)23 b(in)i(our)e(e)o(xperiments.)73 b(The)24
b(memory)f(hierarchy)f(is)-60 4967 y(based)27 b(on)g(the)h(Itanium)f(2)
g(processor)g([7)o(].)47 b(Ho)n(we)n(v)o(er)m(,)28 b(the)f(sim-)-60
5057 y(ulator)e(only)g(supports)g(tw)o(o)h(le)n(v)o(els)g(of)g(caches)g
(while)g(Itanium)e(2)-60 5146 y(processor)c(has)h(three)f(le)n(v)o(els)
h(of)g(caches.)27 b(Therefore,)18 b(we)j(choose)-60 5236
y(the)27 b(size)h(of)f(L2)f(cache)h(to)g(be)g(in)h(between)e(the)h
(sizes)h(of)f(the)g(L2)-60 5326 y(and)18 b(L3)g(caches)h(on)f(an)g
(Itanium2)f(machine.)23 b(The)18 b(latenc)o(y)g(is)h(also)2494
-70 y(T)-7 b(able)20 b(4:)25 b(Simulation)19 b(parameters)p
2183 -17 1647 4 v 2183 -1 V 2181 70 4 71 v 2198 70 V
2608 49 a Fh(Processor)f(pipeline)i(parameters)p 3812
70 V 3828 70 V 2183 74 1647 4 v 2183 90 V 2181 161 4
71 v 2198 161 V 2250 140 a(Clock)e(Rate)p 3006 161 V
994 w(1.5)e(GHz)p 3812 161 V 3828 161 V 2183 165 1647
4 v 2181 236 4 71 v 2198 236 V 2250 214 a(Issue)h(W)m(idth)p
3006 236 V 869 w(4)g(insts/c)o(ycle)p 3812 236 V 3828
236 V 2183 239 1647 4 v 2181 310 4 71 v 2198 310 V 2250
289 a(Functional)i(Units)p 3006 310 V 372 w(2)e(Inte)o(ger)m(,)i(1)e
(inte)o(ger)i(di)n(vide,)p 3812 310 V 3828 310 V 2181
381 V 2198 381 V 3006 381 V 3058 360 a(2)e(Memory)l(,)f(1)h(Branch,)h
(2)f(FP)p 3812 381 V 3828 381 V 2183 384 1647 4 v 2181
455 4 71 v 2198 455 V 2250 434 a(Reorder)h(Buf)n(fer)h(Size)p
3006 455 V 744 w(128)e(insts)p 3812 455 V 3828 455 V
2183 459 1647 4 v 2181 530 4 71 v 2198 530 V 2250 508
a(Inte)o(ger)h(Multiply/Di)n(vide)p 3006 530 V 586 w(4/50)g(c)o(ycles)p
3812 530 V 3828 530 V 2183 533 1647 4 v 2181 604 4 71
v 2198 604 V 2250 583 a(All)f(Other)h(Inte)o(ger)p 3006
604 V 871 w(1)f(c)o(ycle)p 3812 604 V 3828 604 V 2183
607 1647 4 v 2181 678 4 71 v 2198 678 V 2250 657 a(Branch)h(Prediction)
i(Scheme)p 3006 678 V 506 w(gshare)e([14)q(])p 3812 678
V 3828 678 V 2183 681 1647 4 v 2183 698 V 2176 770 1679
4 v 2176 786 V 2174 857 4 71 v 2191 857 V 2747 836 a(Memory)f
(parameters)p 3836 857 V 3853 857 V 2176 861 1679 4 v
2176 877 V 2174 948 4 71 v 2191 948 V 2242 927 a(Line)h(Size)p
2991 948 V 1071 w(64)f(bytes)p 3836 948 V 3853 948 V
2176 951 1679 4 v 2174 1022 4 71 v 2191 1022 V 2242 1001
a(Primary)h(Instruction)h(Cache)p 2991 1022 V 200 w(16)e(KB,)g(4-w)o
(ay)g(set-assoc.)p 3836 1022 V 3853 1022 V 2176 1026
1679 4 v 2174 1097 4 71 v 2191 1097 V 2242 1075 a(Primary)h(Data)g
(Cache)p 2991 1097 V 362 w(16)f(KB,)g(4-w)o(ay)g(set-assoc.)p
3836 1097 V 3853 1097 V 2176 1100 1679 4 v 2174 1171
4 71 v 2191 1171 V 2242 1150 a(Miss)g(Handlers)p 2991
1171 V 584 w(32)g(for)h(data,)f(2)g(for)g(inst.)p 3836
1171 V 3853 1171 V 2176 1174 1679 4 v 2174 1245 4 71
v 2191 1245 V 2242 1224 a(DTLB)p 2991 1245 V 737 w(128)h(entries,)g
(fully-assoc.)p 3836 1245 V 3853 1245 V 2176 1249 1679
4 v 2174 1320 4 71 v 2191 1320 V 2242 1298 a(DTLB)e(Miss)h(Handlers)p
2991 1320 V 939 w(1)p 3836 1320 V 3853 1320 V 2176 1323
1679 4 v 2174 1394 4 71 v 2191 1394 V 2242 1373 a(P)o(age)h(Size)p
2991 1394 V 1146 w(8)f(KB)p 3836 1394 V 3853 1394 V 2176
1397 1679 4 v 2174 1468 4 71 v 2191 1468 V 2242 1447
a(Uni\002ed)h(Secondary)h(Cache)p 2991 1468 V 244 w(1)e(MB,)g(8-w)o(ay)
g(set-assoc.)p 3836 1468 V 3853 1468 V 2176 1472 1679
4 v 2174 1543 4 71 v 2191 1543 V 2242 1521 a(Primary-to-Secondary)p
2991 1543 V 248 w(10)g(c)o(ycles)i(\(plus)e(an)o(y)h(delays)p
3836 1543 V 3853 1543 V 2174 1601 V 2191 1601 V 2242
1580 a(Miss)f(Latenc)o(y)p 2991 1601 V 606 w(caused)h(by)f
(contention\))p 3836 1601 V 3853 1601 V 2176 1604 1679
4 v 2174 1675 4 71 v 2191 1675 V 2242 1654 a(DTLB)f(Miss)h(Latenc)o(y)p
2991 1675 V 287 w(30)g(c)o(ycles)i(\(plus)e(an)o(y)h(delays)p
3836 1675 V 3853 1675 V 2174 1734 V 2191 1734 V 2991
1734 V 3205 1713 a(caused)g(by)f(contention\))p 3836
1734 V 3853 1734 V 2176 1737 1679 4 v 2174 1808 4 71
v 2191 1808 V 2242 1787 a(Primary-to-Memory)p 2991 1808
V 265 w(250)g(c)o(ycles)i(\(plus)e(an)o(y)h(delays)p
3836 1808 V 3853 1808 V 2174 1867 V 2191 1867 V 2242
1846 a(Miss)f(Latenc)o(y)p 2991 1867 V 606 w(caused)h(by)f
(contention\))p 3836 1867 V 3853 1867 V 2176 1870 1679
4 v 2174 1941 4 71 v 2191 1941 V 2242 1920 a(Main)h(Memory)f(Bandwidth)
p 2991 1941 V 269 w(1)g(access)h(per)g(15)f(c)o(ycles)p
3836 1941 V 3853 1941 V 2176 1944 1679 4 v 2176 1961
V 2040 2075 a Fq(chosen)e(to)h(be)g(in)h(between)e(the)h(actual)g(L2)g
(and)f(L3)h(latencies.)24 b(The)2040 2165 y(Itanium)18
b(2)g(processor)g(supports)f(only)h(softw)o(are-simulated)f(inte-)2040
2255 y(ger)k(di)n(vide.)30 b(W)-7 b(e)23 b(measured)d(on)i(a)g(real)g
(machine)f(that)h(an)g(inte)o(ger)2040 2344 y(di)n(vide)17
b(tak)o(es)h(about)f(50)g(c)o(ycles.)24 b(The)18 b(simulator)f(does)g
(not)h(drop)e(a)2040 2434 y(prefetch)j(when)h(miss)i(handlers)e(are)g
(all)i(b)n(usy)e(and/or)g(if)h(it)g(incurs)2040 2524
y(a)26 b(DTLB)g(miss.)43 b(This)26 b(models)f(the)h(beha)n(vior)f(of)g
Fg(l)r(f)9 b(etch:f)g(aul)r(t)2040 2613 y Fq(instruction)18
b(of)h(Itanium)f(2)h(processor)-5 b(.)24 b(Important)17
b(simulator)i(pa-)2040 2703 y(rameters)h(are)g(sho)n(wn)f(in)i(T)-7
b(able)20 b(4.)2040 2864 y Fj(6.2)82 b(V)-8 b(arying)19
b(the)i(Number)g(of)f(CPUs)2040 2993 y Fq(Figure)40 b(10)f(compares)g
(the)h(performance)e(of)i(the)g(algorithms)2040 3082
y(while)c(v)n(arying)f(the)h(number)f(of)h(CPUs.)74 b(The)36
b(le)o(gend)f(labels)2040 3172 y(and)f(the)h(corresponding)c
(algorithms)i(are)i(as)g(follo)n(ws:)54 b Fo(cac)o(he)2040
3262 y(pr)m(ef)31 b Fq(\(group)d(prefetching\),)i Fo(cac)o(he)f(part)i
Fq(\(cache)e(partitioning\),)2040 3351 y Fo(enhanced)e(cp)h
Fq(\(cache)h(partitioning)e(enhanced)f(with)k(adv)n(anced)2040
3441 y(prefetching)16 b(support\),)g Fo(inspector)h Fq(\(inspector)g
(join\).)23 b(The)18 b(e)o(xper)n(-)2040 3531 y(iments)23
b(join)f(a)h(500MB)f(b)n(uild)g(relation)g(and)g(a)h(2GB)g(probe)e
(rela-)2040 3620 y(tion.)30 b(The)21 b(tuple)h(size)h(is)f(100B.)g
(50\045)f(of)h(the)g(probe)e(tuples)i(ha)n(v)o(e)2040
3710 y(no)e(matches)g(and)f(e)n(v)o(ery)g(b)n(uild)h(tuple)g(matches)f
(2)i(probe)e(tuples.)2140 3800 y(Figure)d(10\(a\))f(sho)n(ws)i(the)f
(partition)g(phase)g(performance,)e(and)2040 3890 y(Figure)j(10\(b\))f
(sho)n(ws)i(the)g(aggre)o(gate)d(performance)g(on)i(all)h(CPUs)2040
3980 y(used)j(in)h(the)g(partition)e(phase.)29 b(W)-7
b(e)23 b(see)f(that)g(the)f(partition)g(phase)2040 4069
y(curv)o(es)28 b(are)g(v)o(ery)g(similar)-5 b(.)51 b(Compared)27
b(to)h(the)h(other)f(schemes,)2040 4159 y(the)23 b(inspector)e(join)i
(incurs)f(a)h(slight)g(o)o(v)o(erhead.)63 b(\(The)22
b(ratio)h(be-)2040 4249 y(tween)f(the)g(partition)f(phase)h(e)o(x)o
(ecution)e(times)j(of)f(the)g(best)g(algo-)2040 4338
y(rithm)h(and)f(the)i(inspector)e(join)h(is)h(0.88-0.94.\))65
b(This)23 b(is)h(mainly)2040 4428 y(because)c(of)h(the)g(computational)
e(cost)i(of)g(con)m(v)o(erting)d(horizontal)2040 4518
y(\002lters)26 b(into)f(v)o(ertical)g(\002lters)h(and)f(testing)g(a)h
(set)g(of)f(\002lters.)83 b(The)2040 4607 y(most)26 b(costly)f
(operation)f(is)i(e)o(xtracting)e(the)i(bit)g(positions)f(of)g(1')-5
b(s)2040 4697 y(from)17 b(a)i(bit)f(v)o(ector)f(in)i(both)e(con)m(v)o
(ersion)f(and)h(\002lter)i(testing.)49 b(This)2040 4787
y(o)o(v)o(erhead)14 b(will)k(become)e(less)i(signi\002cant)e(as)i
(processors)e(are)h(get-)2040 4876 y(ting)f(f)o(aster)-5
b(.)24 b(As)18 b(sho)n(wn)e(in)g(Figure)g(10\(a\),)g(all)h(the)f(curv)o
(es)g(become)2040 4966 y(\003at)25 b(after)f(the)g(4-CPU)h(case.)37
b(Therefore,)23 b(all)i(the)g(follo)n(wing)d(e)o(x-)2040
5056 y(periments)d(use)i(up)e(to)i(4)f(CPUs)i(in)e(the)g(partition)f
(phase.)2140 5146 y(Figure)d(10\(c\))f(sho)n(ws)i(the)g(total)g(aggre)o
(gate)e(times)i(of)g(all)g(CPUs)2040 5236 y(for)26 b(the)h(join)g
(phase.)45 b(The)27 b Fo(cac)o(he)f(pr)m(ef)h Fq(and)g
Fo(cac)o(he)f(part)h Fq(curv)o(es)2040 5326 y(are)i(the)g(same)g(as)h
(in)f(Figure)f(1\(b\).)50 b(Our)29 b(inspector)f(join)h(is)h(the)p
eop end
%%Page: 10 10
TeXDict begin 10 9 bop -60 -146 4050 4 v -83 754 a @beginspecial
167 @llx 272 @lly 451 @urx 522 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/cpu-part-actual.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: cpu-part-actual.eps
%%CreationDate: 02/28/2005  15:32:04
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   522
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   522
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    20  3406  3004 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 1) s
1141 2594 mt 1141 2566 L
1141  162 mt 1141  189 L
1071 2784 mt 
( 2) s
1695 2594 mt 1695 2566 L
1695  162 mt 1695  189 L
1625 2784 mt 
( 4) s
2249 2594 mt 2249 2566 L
2249  162 mt 2249  189 L
2179 2784 mt 
( 8) s
2803 2594 mt 2803 2566 L
2803  162 mt 2803  189 L
2710 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2107 mt  614 2107 L
3357 2107 mt 3329 2107 L
 459 2169 mt 
(2) s
 587 1621 mt  614 1621 L
3357 1621 mt 3329 1621 L
 459 1683 mt 
(4) s
 587 1134 mt  614 1134 L
3357 1134 mt 3329 1134 L
 459 1196 mt 
(6) s
 587  648 mt  614  648 L
3357  648 mt 3329  648 L
 459  710 mt 
(8) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(10) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
554 -9 554 2 554 40 554 524 554 1088 587 401 6 MP stroke
gr

c8
 551  401 mt  623  401 L
 587  365 mt  587  437 L
1105 1489 mt 1177 1489 L
1141 1453 mt 1141 1525 L
1659 2013 mt 1731 2013 L
1695 1977 mt 1695 2049 L
2213 2053 mt 2285 2053 L
2249 2017 mt 2249 2089 L
2767 2055 mt 2839 2055 L
2803 2019 mt 2803 2091 L
3321 2046 mt 3393 2046 L
3357 2010 mt 3357 2082 L
gs 587 162 2771 2433 rc
0 sg
554 -6 554 5 554 34 554 520 554 1074 587 423 6 MP stroke
gr

0 sg
 551  423 mt  623  423 L
 587  387 mt  587  459 L
1105 1497 mt 1177 1497 L
1141 1461 mt 1141 1533 L
1659 2017 mt 1731 2017 L
1695 1981 mt 1695 2053 L
2213 2051 mt 2285 2051 L
2249 2015 mt 2249 2087 L
2767 2056 mt 2839 2056 L
2803 2020 mt 2803 2092 L
3321 2050 mt 3393 2050 L
3357 2014 mt 3357 2086 L
 562  398 mt  612  448 L
 612  398 mt  562  448 L
1116 1472 mt 1166 1522 L
1166 1472 mt 1116 1522 L
1670 1992 mt 1720 2042 L
1720 1992 mt 1670 2042 L
2224 2026 mt 2274 2076 L
2274 2026 mt 2224 2076 L
2778 2031 mt 2828 2081 L
2828 2031 mt 2778 2081 L
3332 2025 mt 3382 2075 L
3382 2025 mt 3332 2075 L
gs 587 162 2771 2433 rc
554 -6 554 5 554 34 554 520 554 1074 587 423 6 MP stroke
gr

  36   36  587  423 FO
  36   36 1141 1497 FO
  36   36 1695 2017 FO
  36   36 2249 2051 FO
  36   36 2803 2056 FO
  36   36 3357 2050 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
554 -2 554 10 554 25 554 529 554 1125 587 322 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 346 4 MP
DP
-41 71 -41 -71 82 0 1100 1471 4 MP
DP
-41 71 -41 -71 82 0 1654 2000 4 MP
DP
-41 71 -41 -71 82 0 2208 2025 4 MP
DP
-41 71 -41 -71 82 0 2762 2035 4 MP
DP
-41 71 -41 -71 82 0 3316 2033 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
1404 2962 mt 
(num cpus used) s
 274 2317 mt  -90 rotate
(execution time \(G cycles\)) s
90 rotate
2243  393 mt 
(cache pref) s
2243  586 mt 
(cache part) s
2243  779 mt 
(enhanced cp) s
2243  972 mt 
(inspector) s
gs 1775 222 1523 804 rc
c8
281 0 1868 336 2 MP stroke
gs 1936 263 147 147 rc
1973  336 mt 2045  336 L
2009  300 mt 2009  372 L
gr

0 sg
281 0 1868 529 2 MP stroke
gs 1936 456 147 147 rc
1973  529 mt 2045  529 L
2009  493 mt 2009  565 L
1984  504 mt 2034  554 L
2034  504 mt 1984  554 L
gr

281 0 1868 723 2 MP stroke
gs 1936 650 147 147 rc
  36   36 2009  723 FO
gr

c9
281 0 1868 916 2 MP stroke
gs 1936 843 147 147 rc
-41 71 -41 -71 82 0 1968 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1007 w @beginspecial 167 @llx 272 @lly 451
@urx 526 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/cpu-part.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: cpu-part.eps
%%CreationDate: 02/28/2005  15:31:20
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   526
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   526
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93   -30  3406  3054 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 1) s
1141 2594 mt 1141 2566 L
1141  162 mt 1141  189 L
1071 2784 mt 
( 2) s
1695 2594 mt 1695 2566 L
1695  162 mt 1695  189 L
1625 2784 mt 
( 4) s
2249 2594 mt 2249 2566 L
2249  162 mt 2249  189 L
2179 2784 mt 
( 8) s
2803 2594 mt 2803 2566 L
2803  162 mt 2803  189 L
2710 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2323 mt  614 2323 L
3357 2323 mt 3329 2323 L
 366 2385 mt 
(10) s
 587 2053 mt  614 2053 L
3357 2053 mt 3329 2053 L
 366 2115 mt 
(20) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 366 1845 mt 
(30) s
 587 1513 mt  614 1513 L
3357 1513 mt 3329 1513 L
 366 1575 mt 
(40) s
 587 1242 mt  614 1242 L
3357 1242 mt 3329 1242 L
 366 1304 mt 
(50) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 366 1034 mt 
(60) s
 587  702 mt  614  702 L
3357  702 mt 3329  702 L
 366  764 mt 
(70) s
 587  432 mt  614  432 L
3357  432 mt 3329  432 L
 366  494 mt 
(80) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(90) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
554 -989 554 -478 554 -222 554 -13 554 -2 587 2350 6 MP stroke
gr

c8
 551 2350 mt  623 2350 L
 587 2314 mt  587 2386 L
1105 2348 mt 1177 2348 L
1141 2312 mt 1141 2384 L
1659 2335 mt 1731 2335 L
1695 2299 mt 1695 2371 L
2213 2113 mt 2285 2113 L
2249 2077 mt 2249 2149 L
2767 1635 mt 2839 1635 L
2803 1599 mt 2803 1671 L
3321  646 mt 3393  646 L
3357  610 mt 3357  682 L
gs 587 162 2771 2433 rc
0 sg
554 -977 554 -474 554 -225 554 -13 554 -2 587 2352 6 MP stroke
gr

0 sg
 551 2352 mt  623 2352 L
 587 2316 mt  587 2388 L
1105 2350 mt 1177 2350 L
1141 2314 mt 1141 2386 L
1659 2337 mt 1731 2337 L
1695 2301 mt 1695 2373 L
2213 2112 mt 2285 2112 L
2249 2076 mt 2249 2148 L
2767 1638 mt 2839 1638 L
2803 1602 mt 2803 1674 L
3321  661 mt 3393  661 L
3357  625 mt 3357  697 L
 562 2327 mt  612 2377 L
 612 2327 mt  562 2377 L
1116 2325 mt 1166 2375 L
1166 2325 mt 1116 2375 L
1670 2312 mt 1720 2362 L
1720 2312 mt 1670 2362 L
2224 2087 mt 2274 2137 L
2274 2087 mt 2224 2137 L
2778 1613 mt 2828 1663 L
2828 1613 mt 2778 1663 L
3332  636 mt 3382  686 L
3382  636 mt 3332  686 L
gs 587 162 2771 2433 rc
554 -977 554 -474 554 -225 554 -13 554 -2 587 2352 6 MP stroke
gr

  36   36  587 2352 FO
  36   36 1141 2350 FO
  36   36 1695 2337 FO
  36   36 2249 2112 FO
  36   36 2803 1638 FO
  36   36 3357  661 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
554 -1043 554 -510 554 -252 554 -20 554 -2 587 2341 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2365 4 MP
DP
-41 71 -41 -71 82 0 1100 2363 4 MP
DP
-41 71 -41 -71 82 0 1654 2343 4 MP
DP
-41 71 -41 -71 82 0 2208 2091 4 MP
DP
-41 71 -41 -71 82 0 2762 1581 4 MP
DP
-41 71 -41 -71 82 0 3316 538 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
1404 2962 mt 
(num cpus used) s
 274 2716 mt  -90 rotate
(aggregate execution time \(G cycles\)) s
90 rotate
1115  393 mt 
(cache pref) s
1115  586 mt 
(cache part) s
1115  779 mt 
(enhanced cp) s
1115  972 mt 
(inspector) s
gs 647 222 1523 804 rc
c8
281 0 740 336 2 MP stroke
gs 808 263 147 147 rc
 845  336 mt  917  336 L
 881  300 mt  881  372 L
gr

0 sg
281 0 740 529 2 MP stroke
gs 808 456 147 147 rc
 845  529 mt  917  529 L
 881  493 mt  881  565 L
 856  504 mt  906  554 L
 906  504 mt  856  554 L
gr

281 0 740 723 2 MP stroke
gs 808 650 147 147 rc
  36   36  881  723 FO
gr

c9
281 0 740 916 2 MP stroke
gs 808 843 147 147 rc
-41 71 -41 -71 82 0 840 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 992 w @beginspecial 167 @llx 272 @lly 451
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/cpu-join.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: cpu-join.eps
%%CreationDate: 02/28/2005  15:33:13
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3406  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 1) s
1141 2594 mt 1141 2566 L
1141  162 mt 1141  189 L
1071 2784 mt 
( 2) s
1695 2594 mt 1695 2566 L
1695  162 mt 1695  189 L
1625 2784 mt 
( 4) s
2249 2594 mt 2249 2566 L
2249  162 mt 2249  189 L
2179 2784 mt 
( 8) s
2803 2594 mt 2803 2566 L
2803  162 mt 2803  189 L
2710 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2188 mt  614 2188 L
3357 2188 mt 3329 2188 L
 366 2250 mt 
(10) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 366 1845 mt 
(20) s
 587 1378 mt  614 1378 L
3357 1378 mt 3329 1378 L
 366 1440 mt 
(30) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 366 1034 mt 
(40) s
 587  567 mt  614  567 L
3357  567 mt 3329  567 L
 366  629 mt 
(50) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(60) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
554 -888 554 -491 554 -230 554 -36 554 -7 587 2378 6 MP stroke
gr

c8
 551 2378 mt  623 2378 L
 587 2342 mt  587 2414 L
1105 2371 mt 1177 2371 L
1141 2335 mt 1141 2407 L
1659 2335 mt 1731 2335 L
1695 2299 mt 1695 2371 L
2213 2105 mt 2285 2105 L
2249 2069 mt 2249 2141 L
2767 1614 mt 2839 1614 L
2803 1578 mt 2803 1650 L
3321  726 mt 3393  726 L
3357  690 mt 3357  762 L
gs 587 162 2771 2433 rc
0 sg
554 -972 554 -453 554 -153 554 -37 554 -11 587 2258 6 MP stroke
gr

0 sg
 551 2258 mt  623 2258 L
 587 2222 mt  587 2294 L
1105 2247 mt 1177 2247 L
1141 2211 mt 1141 2283 L
1659 2210 mt 1731 2210 L
1695 2174 mt 1695 2246 L
2213 2057 mt 2285 2057 L
2249 2021 mt 2249 2093 L
2767 1604 mt 2839 1604 L
2803 1568 mt 2803 1640 L
3321  632 mt 3393  632 L
3357  596 mt 3357  668 L
 562 2233 mt  612 2283 L
 612 2233 mt  562 2283 L
1116 2222 mt 1166 2272 L
1166 2222 mt 1116 2272 L
1670 2185 mt 1720 2235 L
1720 2185 mt 1670 2235 L
2224 2032 mt 2274 2082 L
2274 2032 mt 2224 2082 L
2778 1579 mt 2828 1629 L
2828 1579 mt 2778 1629 L
3332  607 mt 3382  657 L
3382  607 mt 3332  657 L
gs 587 162 2771 2433 rc
554 -798 554 -347 554 -134 554 -16 554 -4 587 2285 6 MP stroke
gr

  36   36  587 2285 FO
  36   36 1141 2281 FO
  36   36 1695 2265 FO
  36   36 2249 2131 FO
  36   36 2803 1784 FO
  36   36 3357  986 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
554 -486 554 -207 554 -79 554 -3 554 1 587 2387 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2411 4 MP
DP
-41 71 -41 -71 82 0 1100 2412 4 MP
DP
-41 71 -41 -71 82 0 1654 2409 4 MP
DP
-41 71 -41 -71 82 0 2208 2330 4 MP
DP
-41 71 -41 -71 82 0 2762 2123 4 MP
DP
-41 71 -41 -71 82 0 3316 1637 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
1404 2962 mt 
(num cpus used) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
1115  393 mt 
(cache pref) s
1115  586 mt 
(cache part) s
1115  779 mt 
(enhanced cp) s
1115  972 mt 
(inspector) s
gs 647 222 1523 804 rc
c8
281 0 740 336 2 MP stroke
gs 808 263 147 147 rc
 845  336 mt  917  336 L
 881  300 mt  881  372 L
gr

0 sg
281 0 740 529 2 MP stroke
gs 808 456 147 147 rc
 845  529 mt  917  529 L
 881  493 mt  881  565 L
 856  504 mt  906  554 L
 906  504 mt  856  554 L
gr

281 0 740 723 2 MP stroke
gs 808 650 147 147 rc
  36   36  881  723 FO
gr

c9
281 0 740 916 2 MP stroke
gs 808 843 147 147 rc
-41 71 -41 -71 82 0 840 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1075 w @beginspecial 167 @llx 272 @lly 451
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/cpu-total.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: cpu-total.eps
%%CreationDate: 02/28/2005  15:33:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   451   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   451   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3406  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 517 2784 mt 
( 1) s
1141 2594 mt 1141 2566 L
1141  162 mt 1141  189 L
1071 2784 mt 
( 2) s
1695 2594 mt 1695 2566 L
1695  162 mt 1695  189 L
1625 2784 mt 
( 4) s
2249 2594 mt 2249 2566 L
2249  162 mt 2249  189 L
2179 2784 mt 
( 8) s
2803 2594 mt 2803 2566 L
2803  162 mt 2803  189 L
2710 2784 mt 
(16) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(32) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2188 mt  614 2188 L
3357 2188 mt 3329 2188 L
 366 2250 mt 
(10) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 366 1845 mt 
(20) s
 587 1378 mt  614 1378 L
3357 1378 mt 3329 1378 L
 366 1440 mt 
(30) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 366 1034 mt 
(40) s
 587  567 mt  614  567 L
3357  567 mt 3329  567 L
 366  629 mt 
(50) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(60) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
554 -888 554 -490 554 -230 554 -56 554 -10 587 2013 6 MP stroke
gr

c8
 551 2013 mt  623 2013 L
 587 1977 mt  587 2049 L
1105 2003 mt 1177 2003 L
1141 1967 mt 1141 2039 L
1659 1947 mt 1731 1947 L
1695 1911 mt 1695 1983 L
2213 1717 mt 2285 1717 L
2249 1681 mt 2249 1753 L
2767 1227 mt 2839 1227 L
2803 1191 mt 2803 1263 L
3321  339 mt 3393  339 L
3357  303 mt 3357  375 L
gs 587 162 2771 2433 rc
0 sg
554 -972 554 -453 554 -153 554 -55 554 -15 587 1896 6 MP stroke
gr

0 sg
 551 1896 mt  623 1896 L
 587 1860 mt  587 1932 L
1105 1881 mt 1177 1881 L
1141 1845 mt 1141 1917 L
1659 1826 mt 1731 1826 L
1695 1790 mt 1695 1862 L
2213 1673 mt 2285 1673 L
2249 1637 mt 2249 1709 L
2767 1220 mt 2839 1220 L
2803 1184 mt 2803 1256 L
3321  248 mt 3393  248 L
3357  212 mt 3357  284 L
 562 1871 mt  612 1921 L
 612 1871 mt  562 1921 L
1116 1856 mt 1166 1906 L
1166 1856 mt 1116 1906 L
1670 1801 mt 1720 1851 L
1720 1801 mt 1670 1851 L
2224 1648 mt 2274 1698 L
2274 1648 mt 2224 1698 L
2778 1195 mt 2828 1245 L
2828 1195 mt 2778 1245 L
3332  223 mt 3382  273 L
3382  223 mt 3332  273 L
gs 587 162 2771 2433 rc
554 -798 554 -347 554 -134 554 -34 554 -9 587 1924 6 MP stroke
gr

  36   36  587 1924 FO
  36   36 1141 1915 FO
  36   36 1695 1881 FO
  36   36 2249 1747 FO
  36   36 2803 1400 FO
  36   36 3357  602 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
554 -486 554 -206 554 -80 554 -32 554 -2 587 2008 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2032 4 MP
DP
-41 71 -41 -71 82 0 1100 2030 4 MP
DP
-41 71 -41 -71 82 0 1654 1998 4 MP
DP
-41 71 -41 -71 82 0 2208 1918 4 MP
DP
-41 71 -41 -71 82 0 2762 1712 4 MP
DP
-41 71 -41 -71 82 0 3316 1226 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
 912 2962 mt 
(num cpus used in join phase) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
1115  393 mt 
(cache pref) s
1115  586 mt 
(cache part) s
1115  779 mt 
(enhanced cp) s
1115  972 mt 
(inspector) s
gs 647 222 1523 804 rc
c8
281 0 740 336 2 MP stroke
gs 808 263 147 147 rc
 845  336 mt  917  336 L
 881  300 mt  881  372 L
gr

0 sg
281 0 740 529 2 MP stroke
gs 808 456 147 147 rc
 845  529 mt  917  529 L
 881  493 mt  881  565 L
 856  504 mt  906  554 L
 906  504 mt  856  554 L
gr

281 0 740 723 2 MP stroke
gs 808 650 147 147 rc
  36   36  881  723 FO
gr

c9
281 0 740 916 2 MP stroke
gs 808 843 147 147 rc
-41 71 -41 -71 82 0 840 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 90 844 a Fq(\(a\))20 b(P)o(artition)f(phase)389
b(\(b\))20 b(P)o(artition)f(phase)288 b(\(c\))20 b(Join)g(phase)g
(aggre)o(gate)136 b(\(d\))20 b(T)-7 b(otal)20 b(aggre)o(gate)e
(performance)184 933 y(performance)406 b(aggre)o(gate)18
b(performance)402 b(performance)313 b(\(up)19 b(to)h(4)h(CPUs)g(in)g
(partition)e(phase\))p -60 1023 V 1212 1163 a(Figure)g(10:)25
b(V)-9 b(arying)19 b(the)h(number)e(of)i(CPUs)i(used)p
-60 1276 V -59 2356 a @beginspecial 22 @llx 14 @lly 360
@urx 262 @ury 1224 @rhi @setspecial
%%BeginDocument: graphs/cpu-1-breakdown.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 22 14 360 262
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
360 72 S9
[] 24.000000 SL
360 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
256.32 72 S9
[] 24.000000 SL
256.32 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
256.32 72 S9
[] 21.600000 SL
256.32 251.6 M9
D9
256.32 72 S9
[] 24.000000 SL
256.32 240 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
256.32 72 S9
[] 21.600000 SL
256.32 239.6 M9
gsave 0.900000 G9
D9
grestore
256.32 72 S9
[] 24.000000 SL
256.32 228 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
256.32 72 S9
[] 21.600000 SL
256.32 227.6 M9
gsave 0.600000 G9
D9
grestore
256.32 72 S9
[] 24.000000 SL
256.32 216 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
256.32 72 S9
[] 21.600000 SL
256.32 215.6 M9
gsave 0.300000 G9
D9
grestore
256.32 72 S9
[] 24.000000 SL
256.32 204 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
105.226 72 S9
[] 24.000000 SL
105.226 181.322 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.226 72 S9
[] 21.600000 SL
105.226 180.922 M9
D9
105.226 72 S9
[] 24.000000 SL
105.226 155.274 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.226 72 S9
[] 21.600000 SL
105.226 154.874 M9
gsave 0.900000 G9
D9
grestore
105.226 72 S9
[] 24.000000 SL
105.226 154.263 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.226 72 S9
[] 21.600000 SL
105.226 153.863 M9
gsave 0.600000 G9
D9
grestore
105.226 72 S9
[] 24.000000 SL
105.226 110.183 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.226 72 S9
[] 21.600000 SL
105.226 109.783 M9
gsave 0.300000 G9
D9
grestore
160.613 72 S9
[] 24.000000 SL
160.613 242.404 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
160.613 72 S9
[] 21.600000 SL
160.613 242.004 M9
D9
160.613 72 S9
[] 24.000000 SL
160.613 173.52 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
160.613 72 S9
[] 21.600000 SL
160.613 173.12 M9
gsave 0.900000 G9
D9
grestore
160.613 72 S9
[] 24.000000 SL
160.613 173.049 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
160.613 72 S9
[] 21.600000 SL
160.613 172.649 M9
gsave 0.600000 G9
D9
grestore
160.613 72 S9
[] 24.000000 SL
160.613 120.631 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
160.613 72 S9
[] 21.600000 SL
160.613 120.231 M9
gsave 0.300000 G9
D9
grestore
216 72 S9
[] 24.000000 SL
216 228.376 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 227.976 M9
D9
216 72 S9
[] 24.000000 SL
216 178.441 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 178.041 M9
gsave 0.900000 G9
D9
grestore
216 72 S9
[] 24.000000 SL
216 178.338 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 177.938 M9
gsave 0.600000 G9
D9
grestore
216 72 S9
[] 24.000000 SL
216 123.224 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 122.824 M9
gsave 0.300000 G9
D9
grestore
271.387 72 S9
[] 24.000000 SL
271.387 177.053 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
271.387 72 S9
[] 21.600000 SL
271.387 176.653 M9
D9
271.387 72 S9
[] 24.000000 SL
271.387 146.272 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
271.387 72 S9
[] 21.600000 SL
271.387 145.872 M9
gsave 0.900000 G9
D9
grestore
271.387 72 S9
[] 24.000000 SL
271.387 146.107 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
271.387 72 S9
[] 21.600000 SL
271.387 145.707 M9
gsave 0.600000 G9
D9
grestore
271.387 72 S9
[] 24.000000 SL
271.387 108.814 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
271.387 72 S9
[] 21.600000 SL
271.387 108.414 M9
gsave 0.300000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
12 /Helvetica-Bold SetTxt
(10) 0 66 119.529 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
12 /Helvetica-Bold SetTxt
(20) 0 66 170.957 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
12 /Helvetica-Bold SetTxt
(30) 0 66 222.386 TXR
13 /Helvetica-Bold SetTxt
( ) 0 216 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 360 43.25 TXR
( Execution Time (G cycles)) 90 35.4 252 TXR
14 /Helvetica-Bold SetTxt
(\ \ dcache stalls) 0 264.226 244.6 TXL
(\ \ tlb stalls) 0 264.226 232.6 TXL
(\ \ other stalls) 0 264.226 220.6 TXL
(\ \ busy) 0 264.226 208.6 TXL
(21.3) 0 105.226 182.522 TXC
(cache) 0 105.226 58.32 TXC
(33.1) 0 160.613 243.604 TXC
(cache\ \ ) 0 160.613 58.32 TXC
(30.4) 0 216 229.576 TXC
(cp\ \ ) 0 216 58.32 TXC
(20.4) 0 271.387 178.253 TXC
(\ \ inspector) 0 271.387 58.32 TXC
() 0 264.226 229.9 TXL
() 0 264.226 217.9 TXL
() 0 264.226 205.9 TXL
() 0 264.226 193.9 TXL
() 0 105.226 167.822 TXC
(pref) 0 105.226 43.62 TXC
() 0 160.613 228.904 TXC
(part\ \ \ ) 0 160.613 43.62 TXC
() 0 216 214.876 TXC
(enhanced\ \ ) 0 216 43.62 TXC
() 0 271.387 163.553 TXC
() 0 271.387 43.62 TXC
() 0 105.226 28.92 TXC
() 0 160.613 28.92 TXC
() 0 216 28.92 TXC
7 SetSym
showpage
%%Trailer
end

%%EndDocument
 @endspecial 1509 w @beginspecial 22 @llx 14 @lly 303
@urx 262 @ury 1224 @rhi @setspecial
%%BeginDocument: graphs/cpu-8-breakdown.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 22 14 303 262
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
302.4 72 S9
[] 24.000000 SL
302.4 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 238 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 237.6 M9
D9
104.91 72 S9
[] 24.000000 SL
104.91 127.942 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 127.542 M9
gsave 0.900000 G9
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 127.334 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 126.934 M9
gsave 0.600000 G9
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 97.5219 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 97.1219 M9
gsave 0.300000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 251.6 M9
D9
159.77 72 S9
[] 24.000000 SL
159.77 139.673 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 139.273 M9
gsave 0.900000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 139.359 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 138.959 M9
gsave 0.600000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 104.421 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 104.021 M9
gsave 0.300000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 226.86 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 226.46 M9
D9
214.63 72 S9
[] 24.000000 SL
214.63 142.756 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 142.356 M9
gsave 0.900000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 142.687 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 142.287 M9
gsave 0.600000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 106.149 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 105.749 M9
gsave 0.300000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 169.473 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 169.073 M9
D9
269.49 72 S9
[] 24.000000 SL
269.49 122.529 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 122.129 M9
gsave 0.900000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 122.399 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 121.999 M9
gsave 0.600000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 96.6975 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 96.2975 M9
gsave 0.300000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 126.886 TXC
12 /Helvetica-Bold SetTxt
(2) 0 66 122.986 TXR
12 /Helvetica SetTxt
(|) -90 72 181.771 TXC
12 /Helvetica-Bold SetTxt
(4) 0 66 177.871 TXR
12 /Helvetica SetTxt
(|) -90 72 236.657 TXC
12 /Helvetica-Bold SetTxt
(6) 0 66 232.757 TXR
13 /Helvetica-Bold SetTxt
( ) 0 187.2 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 302.4 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 302.4 43.25 TXR
( Execution Time (G cycles)) 90 35.4 252 TXR
14 /Helvetica-Bold SetTxt
(6.0) 0 104.91 239.2 TXC
(cache) 0 104.91 58.32 TXC
(6.6) 0 159.77 253.2 TXC
(cache\ \ ) 0 159.77 58.32 TXC
(5.6) 0 214.63 228.06 TXC
(cp\ \ ) 0 214.63 58.32 TXC
(3.6) 0 269.49 170.673 TXC
(\ inspector) 0 269.49 58.32 TXC
() 0 104.91 224.5 TXC
(pref) 0 104.91 43.62 TXC
() 0 159.77 238.5 TXC
(part\ \ \ ) 0 159.77 43.62 TXC
() 0 214.63 213.36 TXC
(enhanced\ \ ) 0 214.63 43.62 TXC
() 0 269.49 155.973 TXC
() 0 269.49 43.62 TXC
() 0 104.91 28.92 TXC
() 0 159.77 28.92 TXC
() 0 214.63 28.92 TXC
7 SetSym
showpage
%%Trailer
end

%%EndDocument
 @endspecial 1329 w @beginspecial 22 @llx 14 @lly 303
@urx 262 @ury 1224 @rhi @setspecial
%%BeginDocument: graphs/cpu-32-breakdown.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 22 14 303 262
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
302.4 72 S9
[] 24.000000 SL
302.4 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 242.716 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 242.316 M9
D9
104.91 72 S9
[] 24.000000 SL
104.91 87.0389 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 86.6389 M9
gsave 0.900000 G9
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 86.9001 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 86.5001 M9
gsave 0.600000 G9
D9
grestore
104.91 72 S9
[] 24.000000 SL
104.91 78.8694 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
104.91 72 S9
[] 21.600000 SL
104.91 78.4695 M9
gsave 0.300000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 251.6 M9
D9
159.77 72 S9
[] 24.000000 SL
159.77 90.665 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 90.265 M9
gsave 0.900000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 90.5777 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 90.1777 M9
gsave 0.600000 G9
D9
grestore
159.77 72 S9
[] 24.000000 SL
159.77 80.7608 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
159.77 72 S9
[] 21.600000 SL
159.77 80.3608 M9
gsave 0.300000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 218.893 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 218.493 M9
D9
214.63 72 S9
[] 24.000000 SL
214.63 91.5108 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 91.1108 M9
gsave 0.900000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 91.4926 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 91.0926 M9
gsave 0.600000 G9
D9
grestore
214.63 72 S9
[] 24.000000 SL
214.63 81.228 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
214.63 72 S9
[] 21.600000 SL
214.63 80.828 M9
gsave 0.300000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 162.03 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 161.63 M9
D9
269.49 72 S9
[] 24.000000 SL
269.49 85.9467 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 85.5467 M9
gsave 0.900000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 85.8843 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 85.4843 M9
gsave 0.600000 G9
D9
grestore
269.49 72 S9
[] 24.000000 SL
269.49 78.6565 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
269.49 72 S9
[] 21.600000 SL
269.49 78.2565 M9
gsave 0.300000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 131.171 TXC
12 /Helvetica-Bold SetTxt
(2) 0 66 127.271 TXR
12 /Helvetica SetTxt
(|) -90 72 190.343 TXC
12 /Helvetica-Bold SetTxt
(4) 0 66 186.443 TXR
12 /Helvetica SetTxt
(|) -90 72 249.514 TXC
12 /Helvetica-Bold SetTxt
(6) 0 66 245.614 TXR
13 /Helvetica-Bold SetTxt
( ) 0 187.2 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 302.4 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 302.4 43.25 TXR
( Execution Time (G cycles)) 90 35.4 252 TXR
14 /Helvetica-Bold SetTxt
(5.8) 0 104.91 243.916 TXC
(cache) 0 104.91 58.32 TXC
(6.1) 0 159.77 253.2 TXC
(cache\ \ ) 0 159.77 58.32 TXC
(5.0) 0 214.63 220.093 TXC
(cp\ \ ) 0 214.63 58.32 TXC
(3.0) 0 269.49 163.23 TXC
(\ inspector) 0 269.49 58.32 TXC
() 0 104.91 229.216 TXC
(pref) 0 104.91 43.62 TXC
() 0 159.77 238.5 TXC
(part\ \ \ ) 0 159.77 43.62 TXC
() 0 214.63 205.393 TXC
(enhanced\ \ ) 0 214.63 43.62 TXC
() 0 269.49 148.53 TXC
() 0 269.49 43.62 TXC
() 0 104.91 28.92 TXC
() 0 159.77 28.92 TXC
() 0 214.63 28.92 TXC
7 SetSym
showpage
%%Trailer
end

%%EndDocument
 @endspecial -2754 w(\(a\))d(num)h(CPUs)h(used)f(in)h(join)f(phase)f(=)
i(1)166 b(\(b\))20 b(num)f(CPUs)j(used)d(in)i(join)f(phase)g(=)g(8)83
b(\(c\))20 b(num)f(CPUs)i(used)f(in)h(join)f(phase)f(=)i(32)p
-60 2446 V 1040 2585 a(Figure)e(11:)25 b(Join)20 b(phase)g(CPU)i(time)e
(breakdo)n(wns)e(for)h(CPU)j(0)-60 2753 y(best.)j(Because)20
b(of)f(the)g(memory)f(bandwidth)f(sharing,)i(the)g(cache)-60
2842 y(prefetching)25 b(curv)o(e)h(de)o(grades)g(signi\002cantly)g
(when)h(there)g(are)g(8)-60 2932 y(or)18 b(more)f(CPUs.)25
b(Since)18 b(our)f(algorithm)f(combines)h(locality)g(opti-)-60
3022 y(mizations)f(and)f(cache)h(prefetching,)f(it)i(is)g(less)g
(sensiti)n(v)o(e)g(to)f(band-)-60 3111 y(width)28 b(contention.)47
b(Compared)27 b(to)h(the)h(cache)e(prefetching)f(al-)-60
3201 y(gorithms,)32 b(our)d(inspector)h(join)g(algorithm)f(achie)n(v)o
(es)h(1.7-2.1X)-60 3291 y(speedups)19 b(when)h(8)g(or)g(more)f(CPUs)j
(are)e(used.)40 3381 y(As)31 b(sho)n(wn)f(in)h(Figure)f(10\(c\),)h(the)
g(tw)o(o)g(cache)f(partition)f(al-)-60 3470 y(gorithms)h(are)h(w)o
(orse)g(than)g(the)g(cache)f(prefetching)f(algorithm)-60
3560 y(and)h(our)h(inspector)e(join)i(when)g(there)f(are)h(less)h(than)
e(4)h(CPUs.)-60 3650 y(This)c(is)i(mainly)d(because)h(of)g(the)g(lar)o
(ge)f(re-partition)f(o)o(v)o(erhead,)-60 3739 y(which)k(consists)i(of)e
(more)h(than)f(36\045)h(of)f(their)h(join)g(phase)f(e)o(x-)-60
3829 y(ecution)j(times.)64 b(The)33 b(enhanced)e(algorithm)g(is)j(al)o
(w)o(ays)g(better)-60 3919 y(than)f(the)h(original)f(algorithm,)i
(which)e(v)o(eri\002es)h(the)f(ef)n(fecti)n(v)o(e-)-60
4008 y(ness)23 b(of)f(the)g(applied)f(prefetching)f(techniques.)29
b(As)23 b(the)f(number)-60 4098 y(of)c(CPUs)h(increase,)f(the)g
(enhanced)e(algorithm)h(becomes)g(signi\002-)-60 4188
y(cantly)g(better)h(than)f(the)h(cache)f(prefetching)f(algorithms)g
(because)-60 4277 y(it)26 b(utilizes)f(cache-sized)f(sub-partitions)f
(to)i(reduce)f(the)h(number)-60 4367 y(of)20 b(cache)h(misses.)27
b(Ho)n(we)n(v)o(er)m(,)19 b(it)i(still)h(de)o(grades)d(quickly)h(be)o
(yond)-60 4457 y(4)15 b(CPUs.)25 b(This)16 b(is)g(mainly)e(because)h
(the)h(re-partition)d(step)j(is)g(quite)-60 4546 y(sensiti)n(v)o(e)25
b(to)g(memory)e(bandwidth)g(sharing.)39 b(Compared)23
b(to)j(the)-60 4636 y(enhanced)g(cache)h(partitioning)f(algorithm,)i
(our)f(inspector)g(join)-60 4726 y(achie)n(v)o(es)19
b(1.6-2.0X)f(speedups)h(with)i(1-32)e(CPUs.)40 4816 y(Figure)25
b(10\(d\))g(sho)n(ws)i(the)f(aggre)o(gate)f(performance)e(of)j(both)-60
4905 y(phases)i(using)g(up)g(to)g(4)h(CPUs)h(in)e(the)g(partition)g
(phase.)49 b(When)-60 4995 y(there)18 b(are)h(8)g(or)g(more)f(CPUs,)i
(inspector)e(join)h(achie)n(v)o(es)f(1.3-1.7X)-60 5085
y(speedups)j(o)o(v)o(er)g(the)h(cache)g(prefetching)e(algorithm)g(and)i
(the)g(en-)-60 5174 y(hanced)d(cache)h(partitioning)e(algorithm.)1160
5144 y Fk(8)p -60 5247 780 4 v 30 5302 a Fi(8)60 5326
y Fh(The)13 b(abo)o(v)o(e)j(\002gures)e(omit)h(the)f(GRA)m(CE)h(hash)f
(join)h(curv)o(es)g(for)f(clarity)l(.)22 b(Com-)2140
2753 y Fq(Figure)g(11)g(sho)n(ws)g(the)h(CPU)g(time)g(breakdo)n(wns)d
(for)i(the)h(join)2040 2842 y(phase)f(of)h(the)g(algorithms.)31
b(The)23 b(breakdo)n(wns)d(are)j(for)f(the)h(tasks)2040
2932 y(running)15 b(on)h(CPU)j(0)e(in)g(the)g(system.)24
b(The)17 b(Y)g(axis)g(sho)n(ws)h(the)f(e)o(x)o(e-)2040
3022 y(cution)h(time.)24 b(Ev)o(ery)17 b(bar)h(is)i(brok)o(en)d(do)n
(wn)g(into)h(four)g(cate)o(gories:)2040 3111 y(CPU)33
b(b)n(usy)f(time,)j(stalls)f(due)e(to)g(data)g(cache)g(misses)h
(\(includ-)2040 3201 y(ing)d(the)g(ef)n(fect)g(of)g(L2)g(misses\),)j
(stalls)e(due)f(to)g(DTLB)h(misses,)2040 3291 y(and)21
b(other)g(resource)f(stalls.)30 b(Comparing)19 b(Figure)i(11\(a\))g
(and)f(\(b\),)2040 3380 y(we)32 b(can)f(see)h(that)f(the)g(fractions)f
(of)h(data)h(cache)e(stalls)j(for)e(the)2040 3470 y(three)17
b(left)h(bars)g(increase)f(dramatically)-5 b(.)22 b(This)c(clearly)f
(sho)n(ws)h(the)2040 3560 y(impact)k(of)f(memory)g(bandwidth)f(sharing)
h(on)h(the)g(performance.)2040 3649 y(In)27 b(contrast,)i(our)e
(cache-stationary)e(algorithm)h(achie)n(v)o(es)h(quite)2040
3739 y(good)c(cache)h(performance.)36 b(At)25 b(32)f(CPUs,)j(cache)d
(stalls)i(domi-)2040 3829 y(nate)e(all)i(bars,)f(as)g(sho)n(wn)f(in)h
(Figure)e(11\(c\).)37 b(Ev)o(en)24 b(in)g(this)h(case,)2040
3918 y(our)19 b(algorithm)g(is)i(better)f(than)g(the)g(other)f
(algorithms.)2040 4095 y Fj(6.3)82 b(V)-8 b(arying)19
b(Other)h(P)o(arameters)2040 4229 y Fq(Figure)15 b(12)h(sho)n(ws)g(the)
g(bene\002ts)g(of)f(our)h(inspector)e(join)i(algorithm)2040
4318 y(v)n(arying)29 b(the)h(number)f(of)h(probe)f(tuples)i(matching)e
(a)i(b)n(uild)f(tu-)2040 4408 y(ple)j(\(which)f(is)i(the)f(ratio)f
(between)g(probe)g(and)g(b)n(uild)g(relation)2040 4498
y(sizes\),)h(the)e(percentage)e(of)h(probe)f(tuples)i(that)f(ha)n(v)o
(e)g(matches,)2040 4587 y(and)24 b(the)g(tuple)g(size.)39
b(All)25 b(the)f(e)o(xperiments)f(use)i(8)f(CPUs)i(in)f(the)2040
4677 y(join)18 b(phase.)24 b(The)17 b(three)h(\002gures)f(share)h(a)g
(common)f(set)h(of)g(e)o(xperi-)2040 4767 y(ments,)h(which)f
(correspond)e(to)j(the)g(8-CPU)g(points)f(in)h(Figure)f(10.)2140
4860 y(Figure)i(10\(a\))h(v)n(aries)g(the)g(number)f(of)h(matches)h
(per)f(b)n(uild)g(tu-)2040 4950 y(ple)d(from)e(1)i(to)f(8)h(\(while)f
(k)o(eeping)f(the)i(b)n(uild)f(relation)g(size)h(\002x)o(ed\).)p
2040 5036 V 2040 5113 a Fh(pared)g(to)f(the)h(GRA)m(CE)e(hash)i(join)f
(algorithm,)i(our)e(inspector)i(join)e(achie)n(v)o(es)j(1.5-)2040
5184 y(4.1X)25 b(speedups)i(for)e(the)i(join)f(phase)h(and)f(1.7-2.9X)f
(speedups)i(for)e(the)i(entire)2040 5255 y(hash)19 b(join)g(with)g
(1-32)g(CPUs.)25 b(The)18 b(speedups)i(at)f(32)f(CPUs)g(are)h(1.5X)f
(and)h(1.7X,)2040 5326 y(respecti)n(v)o(ely)l(.)p eop
end
%%Page: 11 11
TeXDict begin 11 10 bop -60 -146 4050 4 v 281 754 a @beginspecial
167 @llx 272 @lly 449 @urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/many-total.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: many-total.eps
%%CreationDate: 02/28/2005  15:50:29
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   449   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   449   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3386  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 541 2784 mt 
(1) s
1510 2594 mt 1510 2566 L
1510  162 mt 1510  189 L
1464 2784 mt 
(2) s
2433 2594 mt 2433 2566 L
2433  162 mt 2433  189 L
2387 2784 mt 
(4) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3311 2784 mt 
(8) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2290 mt  614 2290 L
3357 2290 mt 3329 2290 L
 366 2352 mt 
(10) s
 587 1986 mt  614 1986 L
3357 1986 mt 3329 1986 L
 366 2048 mt 
(20) s
 587 1682 mt  614 1682 L
3357 1682 mt 3329 1682 L
 366 1744 mt 
(30) s
 587 1378 mt  614 1378 L
3357 1378 mt 3329 1378 L
 366 1440 mt 
(40) s
 587 1074 mt  614 1074 L
3357 1074 mt 3329 1074 L
 366 1136 mt 
(50) s
 587  770 mt  614  770 L
3357  770 mt 3329  770 L
 366  832 mt 
(60) s
 587  466 mt  614  466 L
3357  466 mt 3329  466 L
 366  528 mt 
(70) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(80) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
924 -1122 923 -567 923 -282 587 2218 4 MP stroke
gr

c8
 551 2218 mt  623 2218 L
 587 2182 mt  587 2254 L
1474 1936 mt 1546 1936 L
1510 1900 mt 1510 1972 L
2397 1369 mt 2469 1369 L
2433 1333 mt 2433 1405 L
3321  247 mt 3393  247 L
3357  211 mt 3357  283 L
gs 587 162 2771 2433 rc
0 sg
924 -1149 923 -538 923 -275 587 2178 4 MP stroke
gr

0 sg
 551 2178 mt  623 2178 L
 587 2142 mt  587 2214 L
1474 1903 mt 1546 1903 L
1510 1867 mt 1510 1939 L
2397 1365 mt 2469 1365 L
2433 1329 mt 2433 1401 L
3321  216 mt 3393  216 L
3357  180 mt 3357  252 L
 562 2153 mt  612 2203 L
 612 2153 mt  562 2203 L
1485 1878 mt 1535 1928 L
1535 1878 mt 1485 1928 L
2408 1340 mt 2458 1390 L
2458 1340 mt 2408 1390 L
3332  191 mt 3382  241 L
3382  191 mt 3332  241 L
gs 587 162 2771 2433 rc
924 -965 923 -489 923 -242 587 2201 4 MP stroke
gr

  36   36  587 2201 FO
  36   36 1510 1959 FO
  36   36 2433 1470 FO
  36   36 3357  505 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
924 -799 923 -406 923 -207 587 2276 4 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2300 4 MP
DP
-41 71 -41 -71 82 0 1469 2093 4 MP
DP
-41 71 -41 -71 82 0 2392 1687 4 MP
DP
-41 71 -41 -71 82 0 3316 888 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
 922 2962 mt 
(num matches per build tuple) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
1115  393 mt 
(cache pref) s
1115  586 mt 
(cache part) s
1115  779 mt 
(enhanced cp) s
1115  972 mt 
(inspector) s
gs 647 222 1523 804 rc
c8
281 0 740 336 2 MP stroke
gs 808 263 147 147 rc
 845  336 mt  917  336 L
 881  300 mt  881  372 L
gr

0 sg
281 0 740 529 2 MP stroke
gs 808 456 147 147 rc
 845  529 mt  917  529 L
 881  493 mt  881  565 L
 856  504 mt  906  554 L
 906  504 mt  856  554 L
gr

281 0 740 723 2 MP stroke
gs 808 650 147 147 rc
  36   36  881  723 FO
gr

c9
281 0 740 916 2 MP stroke
gs 808 843 147 147 rc
-41 71 -41 -71 82 0 840 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1302 w @beginspecial 167 @llx 272 @lly 455
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/percent2-total.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: percent2-total.eps
%%CreationDate: 02/28/2005  15:51:48
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   455   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   455   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3453  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 494 2784 mt 
(5  ) s
 732 2594 mt  732 2566 L
 732  162 mt  732  189 L
 616 2784 mt 
( 10) s
1170 2594 mt 1170 2566 L
1170  162 mt 1170  189 L
1054 2784 mt 
( 25) s
1899 2594 mt 1899 2566 L
1899  162 mt 1899  189 L
1783 2784 mt 
( 50) s
2628 2594 mt 2628 2566 L
2628  162 mt 2628  189 L
2512 2784 mt 
( 75) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3217 2784 mt 
(100) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 1986 mt  614 1986 L
3357 1986 mt 3329 1986 L
 366 2048 mt 
(10) s
 587 1378 mt  614 1378 L
3357 1378 mt 3329 1378 L
 366 1440 mt 
(20) s
 587  770 mt  614  770 L
3357  770 mt 3329  770 L
 366  832 mt 
(30) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(40) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
729 -451 729 -465 729 -473 438 -307 145 -102 587 2161 6 MP stroke
gr

c8
 551 2161 mt  623 2161 L
 587 2125 mt  587 2197 L
 696 2059 mt  768 2059 L
 732 2023 mt  732 2095 L
1134 1752 mt 1206 1752 L
1170 1716 mt 1170 1788 L
1863 1279 mt 1935 1279 L
1899 1243 mt 1899 1315 L
2592  814 mt 2664  814 L
2628  778 mt 2628  850 L
3321  363 mt 3393  363 L
3357  327 mt 3357  399 L
gs 587 162 2771 2433 rc
0 sg
729 -483 729 -512 729 -500 438 -322 145 -105 587 2140 6 MP stroke
gr

0 sg
 551 2140 mt  623 2140 L
 587 2104 mt  587 2176 L
 696 2035 mt  768 2035 L
 732 1999 mt  732 2071 L
1134 1713 mt 1206 1713 L
1170 1677 mt 1170 1749 L
1863 1213 mt 1935 1213 L
1899 1177 mt 1899 1249 L
2592  701 mt 2664  701 L
2628  665 mt 2628  737 L
3321  218 mt 3393  218 L
3357  182 mt 3357  254 L
 562 2115 mt  612 2165 L
 612 2115 mt  562 2165 L
 707 2010 mt  757 2060 L
 757 2010 mt  707 2060 L
1145 1688 mt 1195 1738 L
1195 1688 mt 1145 1738 L
1874 1188 mt 1924 1238 L
1924 1188 mt 1874 1238 L
2603  676 mt 2653  726 L
2653  676 mt 2603  726 L
3332  193 mt 3382  243 L
3382  193 mt 3332  243 L
gs 587 162 2771 2433 rc
729 -440 729 -452 729 -453 438 -280 145 -93 587 2150 6 MP stroke
gr

  36   36  587 2150 FO
  36   36  732 2057 FO
  36   36 1170 1777 FO
  36   36 1899 1324 FO
  36   36 2628  872 FO
  36   36 3357  432 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
729 -353 729 -316 729 -339 438 -219 145 -75 587 2178 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2202 4 MP
DP
-41 71 -41 -71 82 0 691 2127 4 MP
DP
-41 71 -41 -71 82 0 1129 1908 4 MP
DP
-41 71 -41 -71 82 0 1858 1569 4 MP
DP
-41 71 -41 -71 82 0 2587 1253 4 MP
DP
-41 71 -41 -71 82 0 3316 900 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
 509 2962 mt 
(percent of probe tuples having matches) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
1115  393 mt 
(cache pref) s
1115  586 mt 
(cache part) s
1115  779 mt 
(enhanced cp) s
1115  972 mt 
(inspector) s
gs 647 222 1523 804 rc
c8
281 0 740 336 2 MP stroke
gs 808 263 147 147 rc
 845  336 mt  917  336 L
 881  300 mt  881  372 L
gr

0 sg
281 0 740 529 2 MP stroke
gs 808 456 147 147 rc
 845  529 mt  917  529 L
 881  493 mt  881  565 L
 856  504 mt  906  554 L
 906  504 mt  856  554 L
gr

281 0 740 723 2 MP stroke
gs 808 650 147 147 rc
  36   36  881  723 FO
gr

c9
281 0 740 916 2 MP stroke
gs 808 843 147 147 rc
-41 71 -41 -71 82 0 840 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1214 w @beginspecial 167 @llx 272 @lly 455
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/tuple-total.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: tuple-total.eps
%%CreationDate: 02/28/2005  15:53:28
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   455   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   455   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3453  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 494 2784 mt 
(20) s
1510 2594 mt 1510 2566 L
1510  162 mt 1510  189 L
1417 2784 mt 
(60) s
2433 2594 mt 2433 2566 L
2433  162 mt 2433  189 L
2293 2784 mt 
(100) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3217 2784 mt 
(140) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2323 mt  614 2323 L
3357 2323 mt 3329 2323 L
 366 2385 mt 
(10) s
 587 2053 mt  614 2053 L
3357 2053 mt 3329 2053 L
 366 2115 mt 
(20) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 366 1845 mt 
(30) s
 587 1513 mt  614 1513 L
3357 1513 mt 3329 1513 L
 366 1575 mt 
(40) s
 587 1242 mt  614 1242 L
3357 1242 mt 3329 1242 L
 366 1304 mt 
(50) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 366 1034 mt 
(60) s
 587  702 mt  614  702 L
3357  702 mt 3329  702 L
 366  764 mt 
(70) s
 587  432 mt  614  432 L
3357  432 mt 3329  432 L
 366  494 mt 
(80) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(90) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
924 87 923 299 923 1333 587 377 4 MP stroke
gr

c8
 551  377 mt  623  377 L
 587  341 mt  587  413 L
1474 1710 mt 1546 1710 L
1510 1674 mt 1510 1746 L
2397 2009 mt 2469 2009 L
2433 1973 mt 2433 2045 L
3321 2096 mt 3393 2096 L
3357 2060 mt 3357 2132 L
gs 587 162 2771 2433 rc
0 sg
924 62 923 228 923 1179 587 573 4 MP stroke
gr

0 sg
 551  573 mt  623  573 L
 587  537 mt  587  609 L
1474 1752 mt 1546 1752 L
1510 1716 mt 1510 1788 L
2397 1980 mt 2469 1980 L
2433 1944 mt 2433 2016 L
3321 2042 mt 3393 2042 L
3357 2006 mt 3357 2078 L
 562  548 mt  612  598 L
 612  548 mt  562  598 L
1485 1727 mt 1535 1777 L
1535 1727 mt 1485 1777 L
2408 1955 mt 2458 2005 L
2458 1955 mt 2408 2005 L
3332 2017 mt 3382 2067 L
3382 2017 mt 3332 2067 L
gs 587 162 2771 2433 rc
924 55 923 238 923 1202 587 589 4 MP stroke
gr

  36   36  587  589 FO
  36   36 1510 1791 FO
  36   36 2433 2029 FO
  36   36 3357 2084 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
924 85 923 203 923 1153 587 771 4 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 795 4 MP
DP
-41 71 -41 -71 82 0 1469 1948 4 MP
DP
-41 71 -41 -71 82 0 2392 2151 4 MP
DP
-41 71 -41 -71 82 0 3316 2236 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
1340 2962 mt 
(tuple size \(bytes\)) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
2243  393 mt 
(cache pref) s
2243  586 mt 
(cache part) s
2243  779 mt 
(enhanced cp) s
2243  972 mt 
(inspector) s
gs 1775 222 1523 804 rc
c8
281 0 1868 336 2 MP stroke
gs 1936 263 147 147 rc
1973  336 mt 2045  336 L
2009  300 mt 2009  372 L
gr

0 sg
281 0 1868 529 2 MP stroke
gs 1936 456 147 147 rc
1973  529 mt 2045  529 L
2009  493 mt 2009  565 L
1984  504 mt 2034  554 L
2034  504 mt 1984  554 L
gr

281 0 1868 723 2 MP stroke
gs 1936 650 147 147 rc
  36   36 2009  723 FO
gr

c9
281 0 1868 916 2 MP stroke
gs 1936 843 147 147 rc
-41 71 -41 -71 82 0 1968 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 173 844 a Fq(\(a\))20 b(V)-9 b(arying)19
b(the)h(number)e(of)i(matches)142 b(\(b\))20 b(V)-9 b(arying)18
b(the)j(percentage)d(of)i(probe)204 b(\(c\))19 b(V)-9
b(arying)19 b(the)h(tuple)g(size)509 933 y(per)g(b)n(uild)g(tuple)701
b(tuples)20 b(ha)n(ving)g(matches)p -60 1023 V 212 1163
a(Figure)g(12:)k(Aggre)o(gate)18 b(total)j(performance)c(v)n(arying)h
(three)i(parameters)f(when)h(8)g(CPUs)h(are)f(used)g(in)h(the)f(join)g
(phase)p -60 1251 1951 4 v 410 2151 a @beginspecial 160
@llx 272 @lly 451 @urx 514 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/robust.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: robust.eps
%%CreationDate: 02/28/2005  15:58:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   160   272   451   514
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   160   272   451   514
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

    0   114  3499  2910 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 541 2784 mt 
(2) s
1279 2594 mt 1279 2566 L
1279  162 mt 1279  189 L
1233 2784 mt 
(4) s
1972 2594 mt 1972 2566 L
1972  162 mt 1972  189 L
1926 2784 mt 
(6) s
2664 2594 mt 2664 2566 L
2664  162 mt 2664  189 L
2618 2784 mt 
(8) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3264 2784 mt 
(10) s
 587 2345 mt  614 2345 L
3357 2345 mt 3329 2345 L
 272 2407 mt 
(100) s
 587 1849 mt  614 1849 L
3357 1849 mt 3329 1849 L
 272 1911 mt 
(110) s
 587 1353 mt  614 1353 L
3357 1353 mt 3329 1353 L
 272 1415 mt 
(120) s
 587  856 mt  614  856 L
3357  856 mt 3329  856 L
 272  918 mt 
(130) s
 587  360 mt  614  360 L
3357  360 mt 3329  360 L
 272  422 mt 
(140) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
693 -32 692 8 693 73 692 -7 587 2280 5 MP stroke
gr

c8
 551 2280 mt  623 2280 L
 587 2244 mt  587 2316 L
1243 2273 mt 1315 2273 L
1279 2237 mt 1279 2309 L
1936 2346 mt 2008 2346 L
1972 2310 mt 1972 2382 L
2628 2354 mt 2700 2354 L
2664 2318 mt 2664 2390 L
3321 2322 mt 3393 2322 L
3357 2286 mt 3357 2358 L
gs 587 162 2771 2433 rc
0 sg
693 57 692 102 693 425 692 853 587 610 5 MP stroke
gr

0 sg
 551  610 mt  623  610 L
 587  574 mt  587  646 L
1243 1463 mt 1315 1463 L
1279 1427 mt 1279 1499 L
1936 1888 mt 2008 1888 L
1972 1852 mt 1972 1924 L
2628 1990 mt 2700 1990 L
2664 1954 mt 2664 2026 L
3321 2047 mt 3393 2047 L
3357 2011 mt 3357 2083 L
 562  585 mt  612  635 L
 612  585 mt  562  635 L
1254 1438 mt 1304 1488 L
1304 1438 mt 1254 1488 L
1947 1863 mt 1997 1913 L
1997 1863 mt 1947 1913 L
2639 1965 mt 2689 2015 L
2689 1965 mt 2639 2015 L
3332 2022 mt 3382 2072 L
3382 2022 mt 3332 2072 L
gs 587 162 2771 2433 rc
693 26 692 28 693 133 692 353 587 1670 5 MP stroke
gr

  36   36  587 1670 FO
  36   36 1279 2023 FO
  36   36 1972 2156 FO
  36   36 2664 2184 FO
  36   36 3357 2210 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
693 77 692 38 693 179 692 270 587 1625 5 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 1649 4 MP
DP
-41 71 -41 -71 82 0 1238 1919 4 MP
DP
-41 71 -41 -71 82 0 1931 2098 4 MP
DP
-41 71 -41 -71 82 0 2623 2136 4 MP
DP
-41 71 -41 -71 82 0 3316 2213 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
1011 2962 mt 
(period to flush cache \(ms\)) s
 180 2502 mt  -90 rotate
(self normalized execution time) s
90 rotate
2243  393 mt 
(cache pref) s
2243  586 mt 
(cache part) s
2243  779 mt 
(enhanced cp) s
2243  972 mt 
(inspector) s
gs 1775 222 1523 804 rc
c8
281 0 1868 336 2 MP stroke
gs 1936 263 147 147 rc
1973  336 mt 2045  336 L
2009  300 mt 2009  372 L
gr

0 sg
281 0 1868 529 2 MP stroke
gs 1936 456 147 147 rc
1973  529 mt 2045  529 L
2009  493 mt 2009  565 L
1984  504 mt 2034  554 L
2034  504 mt 1984  554 L
gr

281 0 1868 723 2 MP stroke
gs 1936 650 147 147 rc
  36   36 2009  723 FO
gr

c9
281 0 1868 916 2 MP stroke
gs 1936 843 147 147 rc
-41 71 -41 -71 82 0 1968 940 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial -60 2241 V -60 2381 a(Figure)38 b(13:)62
b(Rob)n(ustness)39 b(against)f(cache)h(interference)d(\()p
Fo(self-)-60 2471 y(normalized)22 b Fq(join)e(phase)f(performance,)e
(num)j(CPUs)h(used=1\))-60 2650 y(Figure)26 b(10\(b\))e(v)n(aries)j
(the)f(percentage)e(of)i(probe)f(tuples)i(ha)n(ving)-60
2740 y(matches)21 b(\(while)f(k)o(eeping)g(the)h(probe)e(relation)i
(size)g(\002x)o(ed\).)27 b(Fig-)-60 2829 y(ure)k(10\(c\))f(v)n(aries)h
(the)h(tuple)f(size)h(from)e(20B)h(to)h(140B)f(\(while)-60
2919 y(k)o(eeping)17 b(the)i(b)n(uild)g(relation)f(size)h(\002x)o
(ed\).)24 b(Note)19 b(that)g(the)f(number)-60 3009 y(of)f(tuples)f
(decreases)h(as)h(the)e(size)i(of)f(the)g(tuple)f(increases.)24
b(There-)-60 3098 y(fore,)19 b(all)h(the)f(curv)o(es)g(ha)n(v)o(e)g
(the)h(do)n(wnw)o(ard)d(shape.)50 b(Note)20 b(that)f(in)-60
3188 y(the)g(20B)f(e)o(xperiments,)f(a)i(cache)f(line)h(of)g(64B)f
(contains)g(multiple)-60 3278 y(probe)26 b(tuples.)48
b(Since)28 b(the)f(cache-stationary)f(join)h(visits)i(probe)-60
3367 y(tuples)19 b(non-sequentially)-5 b(,)15 b(it)20
b(may)e(incur)g(multiple)g(cache)h(misses)-60 3457 y(for)27
b(e)n(v)o(ery)f(cache)h(line)h(in)f(the)h(probe)e(partition.)46
b(Ho)n(we)n(v)o(er)m(,)27 b(our)-60 3546 y(inspector)f(join)i(with)g
(cache-stationary)d(join)i(phase)g(is)i(still)g(the)-60
3636 y(best)20 b(e)n(v)o(en)g(for)f(the)h(20B)h(e)o(xperiments.)40
3732 y(In)33 b(all)i(the)f(e)o(xperiments,)h(we)f(can)g(see)g(that)g
(our)g(inspector)-60 3821 y(join)27 b(algorithm)e(is)j(the)g(best.)46
b(F)o(or)26 b(all)i(the)f(e)o(xperiments)f(e)o(xcept)-60
3911 y(the)21 b(5\045)g(points)f(in)h(Figure)g(10\(b\))926
3881 y Fk(9)957 3911 y Fq(,)g(our)f(inspector)g(join)g(achie)n(v)o(es)
-60 4001 y(1.1-1.4X)26 b(speedups)h(compared)g(to)h(the)h(cache)e
(prefetching)f(al-)-60 4090 y(gorithm)19 b(and)g(the)i(enhanced)d
(cache)h(partitioning)g(algorithm.)-60 4279 y Fj(6.4)82
b(Rob)n(ustness)21 b(of)f(the)h(Algorithms)-60 4418 y
Fq(Figure)f(13)g(sho)n(ws)h(the)g(performance)d(de)o(gradation)g(of)i
(all)i(the)e(al-)-60 4507 y(gorithms)25 b(when)g(the)h(cache)g(is)g
(periodically)f(\003ushed,)h(which)g(is)-60 4597 y(the)20
b(w)o(orst)g(case)g(interference.)j(W)-7 b(e)21 b(v)n(ary)e(the)h
(period)f(to)h(\003ush)g(the)-60 4687 y(cache)k(from)f(2)i(ms)g(to)f
(10)g(ms,)i(and)e(report)f(the)i(e)o(x)o(ecution)d(times)-60
4776 y(self)i(normalized)e(to)i(the)g(no)g(\003ush)g(case.)36
b(That)24 b(is,)h(\223100\224)e(corre-)-60 4866 y(sponds)k(to)h(the)g
(join)f(phase)g(e)o(x)o(ecution)f(time)i(when)f(there)g(is)i(no)-60
4956 y(cache)20 b(\003ush.)p -60 5034 780 4 v 30 5089
a Fi(9)60 5113 y Fh(When)f(there)i(are)f(only)g(5\045)f(probe)h(tuples)
h(ha)o(ving)f(matches,)h(the)f(aggre)o(gate)-60 5184
y(join)h(phase)g(e)o(x)o(ecution)i(time)d(only)h(consists)g(of)f
(10-24\045)h(of)f(the)g(total)i(aggre)o(gate)-60 5255
y(e)o(x)o(ecution)j(time.)38 b(Therefore,)25 b(the)f(dif)n(ference)h
(is)e(small)g(between)i(all)e(the)h(algo-)-60 5326 y(rithms)17
b(optimizing)j(the)e(join)g(phase)f(performance.)p 2040
1251 1951 4 v 2032 2151 a @beginspecial 167 @llx 272
@lly 450 @urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/mn-join.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: mn-join.eps
%%CreationDate: 03/04/2005  10:14:30
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   450   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   450   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3387  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 541 2784 mt 
(1) s
1048 2594 mt 1048 2566 L
1048  162 mt 1048  189 L
1002 2784 mt 
(2) s
1510 2594 mt 1510 2566 L
1510  162 mt 1510  189 L
1464 2784 mt 
(3) s
1972 2594 mt 1972 2566 L
1972  162 mt 1972  189 L
1926 2784 mt 
(4) s
2433 2594 mt 2433 2566 L
2433  162 mt 2433  189 L
2387 2784 mt 
(5) s
2895 2594 mt 2895 2566 L
2895  162 mt 2895  189 L
2849 2784 mt 
(6) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3311 2784 mt 
(7) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2323 mt  614 2323 L
3357 2323 mt 3329 2323 L
 459 2385 mt 
(5) s
 587 2053 mt  614 2053 L
3357 2053 mt 3329 2053 L
 366 2115 mt 
(10) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 366 1845 mt 
(15) s
 587 1513 mt  614 1513 L
3357 1513 mt 3329 1513 L
 366 1575 mt 
(20) s
 587 1242 mt  614 1242 L
3357 1242 mt 3329 1242 L
 366 1304 mt 
(25) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 366 1034 mt 
(30) s
 587  702 mt  614  702 L
3357  702 mt 3329  702 L
 366  764 mt 
(35) s
 587  432 mt  614  432 L
3357  432 mt 3329  432 L
 366  494 mt 
(40) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(45) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1 0 462 -272 462 -258 461 -316 462 -241 462 -297 461 -244 587 1942 8 MP stroke
gr

c8
 551 1942 mt  623 1942 L
 587 1906 mt  587 1978 L
1012 1698 mt 1084 1698 L
1048 1662 mt 1048 1734 L
1474 1401 mt 1546 1401 L
1510 1365 mt 1510 1437 L
1936 1160 mt 2008 1160 L
1972 1124 mt 1972 1196 L
2397  844 mt 2469  844 L
2433  808 mt 2433  880 L
2859  586 mt 2931  586 L
2895  550 mt 2895  622 L
3321  314 mt 3393  314 L
3357  278 mt 3357  350 L
gs 587 162 2771 2433 rc
0 sg
1 0 462 -137 462 -144 461 -152 462 -142 462 -127 461 -79 587 1879 8 MP stroke
gr

0 sg
 551 1879 mt  623 1879 L
 587 1843 mt  587 1915 L
1012 1800 mt 1084 1800 L
1048 1764 mt 1048 1836 L
1474 1673 mt 1546 1673 L
1510 1637 mt 1510 1709 L
1936 1531 mt 2008 1531 L
1972 1495 mt 1972 1567 L
2397 1379 mt 2469 1379 L
2433 1343 mt 2433 1415 L
2859 1235 mt 2931 1235 L
2895 1199 mt 2895 1271 L
3321 1098 mt 3393 1098 L
3357 1062 mt 3357 1134 L
 562 1854 mt  612 1904 L
 612 1854 mt  562 1904 L
1023 1775 mt 1073 1825 L
1073 1775 mt 1023 1825 L
1485 1648 mt 1535 1698 L
1535 1648 mt 1485 1698 L
1947 1506 mt 1997 1556 L
1997 1506 mt 1947 1556 L
2408 1354 mt 2458 1404 L
2458 1354 mt 2408 1404 L
2870 1210 mt 2920 1260 L
2920 1210 mt 2870 1260 L
3332 1073 mt 3382 1123 L
3382 1073 mt 3332 1123 L
gs 587 162 2771 2433 rc
1 0 462 -136 462 -133 461 -164 462 -144 462 -154 461 -144 587 1977 8 MP stroke
gr

  36   36  587 1977 FO
  36   36 1048 1833 FO
  36   36 1510 1679 FO
  36   36 1972 1535 FO
  36   36 2433 1371 FO
  36   36 2895 1238 FO
  36   36 3357 1102 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
1 0 462 -211 462 -264 461 -210 462 -202 462 -212 461 -277 587 2210 8 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 2234 4 MP
DP
-41 71 -41 -71 82 0 1007 1957 4 MP
DP
-41 71 -41 -71 82 0 1469 1745 4 MP
DP
-41 71 -41 -71 82 0 1931 1543 4 MP
DP
-41 71 -41 -71 82 0 2392 1333 4 MP
DP
-41 71 -41 -71 82 0 2854 1069 4 MP
DP
-41 71 -41 -71 82 0 3316 858 4 MP
DP
gs 587 162 2771 2433 rc
gr

0 sg
 708 2962 mt 
(num duplicate tuples per build key) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
2243 1902 mt 
(cache pref) s
2243 2095 mt 
(cache part) s
2243 2288 mt 
(enhanced cp) s
2243 2481 mt 
(inspector) s
gs 1775 1730 1523 805 rc
c8
281 0 1868 1845 2 MP stroke
gs 1936 1772 147 147 rc
1973 1845 mt 2045 1845 L
2009 1809 mt 2009 1881 L
gr

0 sg
281 0 1868 2038 2 MP stroke
gs 1936 1965 147 147 rc
1973 2038 mt 2045 2038 L
2009 2002 mt 2009 2074 L
1984 2013 mt 2034 2063 L
2034 2013 mt 1984 2063 L
gr

281 0 1868 2231 2 MP stroke
gs 1936 2158 147 147 rc
  36   36 2009 2231 FO
gr

c9
281 0 1868 2424 2 MP stroke
gs 1936 2351 147 147 rc
-41 71 -41 -71 82 0 1968 2448 4 MP
DP
gr

gr

c9

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1026 w @beginspecial 167 @llx 272 @lly 449
@urx 524 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/sort.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: sort.eps
%%CreationDate: 03/02/2005  10:39:48
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   167   272   449   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   167   272   449   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1920 6288 csm

   93    -7  3386  3031 rc
92 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3500 3070 rf
6 w
0 2432 2770 0 0 -2432 587 2594 4 MP
PP
-2770 0 0 2432 2770 0 0 -2432 587 2594 5 MP stroke
4 w
DO
SO
6 w
0 sg
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
 587 2594 mt 3357 2594 L
 587 2594 mt  587  162 L
 587 2594 mt  587 2566 L
 587  162 mt  587  189 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

 541 2784 mt 
(0) s
1141 2594 mt 1141 2566 L
1141  162 mt 1141  189 L
1095 2784 mt 
(1) s
1695 2594 mt 1695 2566 L
1695  162 mt 1695  189 L
1649 2784 mt 
(2) s
2249 2594 mt 2249 2566 L
2249  162 mt 2249  189 L
2203 2784 mt 
(3) s
2803 2594 mt 2803 2566 L
2803  162 mt 2803  189 L
2757 2784 mt 
(4) s
3357 2594 mt 3357 2566 L
3357  162 mt 3357  189 L
3311 2784 mt 
(5) s
 587 2594 mt  614 2594 L
3357 2594 mt 3329 2594 L
 459 2656 mt 
(0) s
 587 2188 mt  614 2188 L
3357 2188 mt 3329 2188 L
 459 2250 mt 
(2) s
 587 1783 mt  614 1783 L
3357 1783 mt 3329 1783 L
 459 1845 mt 
(4) s
 587 1378 mt  614 1378 L
3357 1378 mt 3329 1378 L
 459 1440 mt 
(6) s
 587  972 mt  614  972 L
3357  972 mt 3329  972 L
 459 1034 mt 
(8) s
 587  567 mt  614  567 L
3357  567 mt 3329  567 L
 366  629 mt 
(10) s
 587  162 mt  614  162 L
3357  162 mt 3329  162 L
 366  224 mt 
(12) s
 587 2594 mt 3357 2594 L
 587  162 mt 3357  162 L
 587 2594 mt  587  162 L
3357 2594 mt 3357  162 L
gs 587 162 2771 2433 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
554 -19 554 -15 554 -20 554 -15 554 -26 587 958 6 MP stroke
gr

c8
 551  958 mt  623  958 L
 587  922 mt  587  994 L
1105  932 mt 1177  932 L
1141  896 mt 1141  968 L
1659  917 mt 1731  917 L
1695  881 mt 1695  953 L
2213  897 mt 2285  897 L
2249  861 mt 2249  933 L
2767  882 mt 2839  882 L
2803  846 mt 2803  918 L
3321  863 mt 3393  863 L
3357  827 mt 3357  899 L
gs 587 162 2771 2433 rc
0 sg
554 -2 554 1 554 -3 554 2 554 -2 587 347 6 MP stroke
gr

0 sg
  36   36  587  347 FO
  36   36 1141  345 FO
  36   36 1695  347 FO
  36   36 2249  344 FO
  36   36 2803  345 FO
  36   36 3357  343 FO
gs 587 162 2771 2433 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
554 -9 554 3 554 -26 554 11 554 -8 587 1529 6 MP stroke
gr

c9
0 j
-41 71 -41 -71 82 0 546 1553 4 MP
DP
-41 71 -41 -71 82 0 1100 1545 4 MP
DP
-41 71 -41 -71 82 0 1654 1556 4 MP
DP
-41 71 -41 -71 82 0 2208 1530 4 MP
DP
-41 71 -41 -71 82 0 2762 1533 4 MP
DP
-41 71 -41 -71 82 0 3316 1524 4 MP
DP
gs 587 162 2771 2433 rc
0 sg
554 -27 554 -47 554 -44 554 -35 554 -36 587 1581 6 MP stroke
gr

0 sg
 562 1556 mt  612 1606 L
 612 1556 mt  562 1606 L
1116 1520 mt 1166 1570 L
1166 1520 mt 1116 1570 L
1670 1485 mt 1720 1535 L
1720 1485 mt 1670 1535 L
2224 1441 mt 2274 1491 L
2274 1441 mt 2224 1491 L
2778 1394 mt 2828 1444 L
2828 1394 mt 2778 1444 L
3332 1367 mt 3382 1417 L
3382 1367 mt 3332 1417 L
gs 587 162 2771 2433 rc
gr

 765 2962 mt 
(percentage of tuples out of order) s
 274 2693 mt  -90 rotate
(aggregate execution time\(G cycles\)) s
90 rotate
2243 1902 mt 
(cache pref) s
2243 2095 mt 
(enhanced cp) s
2243 2288 mt 
(inspector) s
2243 2481 mt 
(sort merge) s
gs 1775 1730 1523 805 rc
c8
281 0 1868 1845 2 MP stroke
gs 1936 1772 147 147 rc
1973 1845 mt 2045 1845 L
2009 1809 mt 2009 1881 L
gr

0 sg
281 0 1868 2038 2 MP stroke
gs 1936 1965 147 147 rc
  36   36 2009 2038 FO
gr

c9
281 0 1868 2231 2 MP stroke
gs 1936 2158 147 147 rc
-41 71 -41 -71 82 0 1968 2255 4 MP
DP
gr

0 sg
281 0 1868 2424 2 MP stroke
gs 1936 2351 147 147 rc
1984 2399 mt 2034 2449 L
2034 2399 mt 1984 2449 L
gr

gr


end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2105 2240 a Fq(\(a\))j(Duplicate)g(b)n(uild)g(k)o(e)o(ys)
188 b(\(b\))20 b(Nearly)g(sorted)f(relations)p 2040 2331
V 2213 2470 a(Figure)h(14:)25 b(Exploiting)18 b(the)i(inspection)f
(mechanism)2140 2638 y(The)27 b(cache)h(prefetching)e(algorithm)g(sees)
j(at)g(most)f(3\045)g(per)n(-)2040 2727 y(formance)23
b(de)o(gradation)g(because)h(of)h(cache)g(\003ushes.)40
b(It)26 b(is)g(v)o(ery)2040 2817 y(rob)n(ust)19 b(because)f(it)i(does)f
(not)g(assume)g(that)g(an)o(y)g(lar)o(ge)f(data)h(struc-)2040
2907 y(tures)k(stay)g(in)g(the)g(cache.)33 b(In)22 b(contrast,)h(the)g
(original)f(cache)g(par)n(-)2040 2996 y(titioning)d(algorithm)g
(assumes)i(the)f(e)o(xclusi)n(v)o(e)f(use)i(of)f(the)g(cache,)2040
3086 y(and)h(suf)n(fers)g(from)g(a)h(6-35\045)f(performance)d(de)o
(gradation)h(for)j(the)2040 3176 y(cache)g(\003ushes.)34
b(Lik)o(e)22 b(the)h(original)f(cache)g(partitioning,)g(our)g(in-)2040
3265 y(spector)e(join)g(algorithm)f(and)h(the)g(enhanced)f(cache)h
(partitioning)2040 3355 y(algorithm)c(both)i(try)g(to)g(k)o(eep)f(a)i
(b)n(uild)e(sub-partition)f(and)i(its)h(hash)2040 3445
y(table)25 b(in)h(the)g(cache.)40 b(T)-7 b(o)26 b(impro)o(v)o(e)d(rob)n
(ustness,)j(both)f(of)g(the)g(al-)2040 3534 y(gorithms)20
b(perform)e(prefetching)h(for)h(b)n(uild)g(tuples.)3573
3504 y Fk(10)3662 3534 y Fq(As)h(sho)n(wn)2040 3624 y(in)i(Figure)f
(13,)h(this)h(technique)d(ef)n(fecti)n(v)o(ely)g(reduces)h(the)h
(perfor)n(-)2040 3714 y(mance)g(de)o(gradation)f(to)i(2-15\045,)g
(which)g(is)h(a)g(2X)f(impro)o(v)o(ement)2040 3803 y(compared)18
b(to)i(the)h(original)e(cache)g(partitioning.)2040 3953
y Fj(6.5)82 b(Choosing)20 b(the)g(Best)h(J)o(oin)f(Phase)g(Algorithm)
2040 4080 y Fq(By)34 b(def)o(ault,)h(our)e(inspector)f(join)h
(algorithm)f(uses)i(the)f(cache-)2040 4170 y(stationary)c(join)h
(phase.)54 b(Ho)n(we)n(v)o(er)m(,)30 b(our)g(inspection)f(approach)2040
4259 y(can)e(detect)h(situations)g(where)f(cache-stationary)e(join)i
(phase)h(is)2040 4349 y(not)33 b(the)g(best)h(algorithm)e(and)g(choose)
h(a)g(dif)n(ferent)f(one.)64 b(Fig-)2040 4439 y(ure)29
b(14\(a\))f(v)n(aries)i(the)f(number)f(of)h(duplicate)f(b)n(uild)i
(tuples)f(per)2040 4528 y(b)n(uild)24 b(join)g(attrib)n(ute)g(v)n
(alue.)36 b(The)24 b(duplicate-free)e(points)i(corre-)2040
4618 y(spond)19 b(to)i(the)f(8-CPU)g(points)g(in)h(Figure)e(10\(c\).)24
b(W)-7 b(e)21 b(see)g(that)g(the)2040 4708 y(def)o(ault)29
b(cache-stationary)e(join)j(phase)f(of)h(the)g(inspector)e(algo-)2040
4797 y(rithm)c(is)i(still)g(the)f(best)g(until)g(3)g(duplicates)f(per)h
(k)o(e)o(y)-5 b(.)38 b(Ho)n(we)n(v)o(er)m(,)2040 4887
y(when)21 b(there)h(are)g(4)g(duplicates)f(per)h(k)o(e)o(y)-5
b(,)21 b(enhanced)f(cache)h(parti-)2040 4977 y(tioning)16
b(gets)i(better)-5 b(.)24 b(The)16 b(prefetching)f(algorithm)h(needs)h
(to)g(visit)p 2040 5034 780 4 v 2106 5089 a Fi(10)2160
5113 y Fh(As)d(we)i(do)f(not)h(prefetch)i(for)d(the)h(hash)g(table,)h
(we)e(e)o(xpect)j(to)d(pay)h(higher)h(cost)2040 5184
y(than)i(pure)f(prefetching)j(schemes)d(when)g(the)g(cache)i(is)d
(\003ushed.)23 b(Prefetching)e(for)2040 5255 y(the)g(hash)f(table)i(is)
e(much)h(more)f(complicated)j(than)e(prefetching)j(only)d(for)f(b)o
(uild)2040 5326 y(tuples,)e(and)f(may)g(incur)h(more)g(run-time)g(o)o
(v)o(erhead)h(for)e(normal)h(e)o(x)o(ecution.)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop -60 -66 a Fq(multiple)21 b(b)n(uild)h(tuples)g
(for)f(e)n(v)o(ery)g(probe)f(tuple)i(in)g(the)g(duplicate)-60
23 y(k)o(e)o(y)f(cases.)30 b(Since)21 b(the)h(visits)g(are)g(all)g
(cache)f(misses,)i(the)e(perfor)n(-)-60 113 y(mance)15
b(of)g(the)g(prefetching)e(algorithm)h(suf)n(fers)h(signi\002cantly)-5
b(.)22 b(As)-60 203 y(discussed)28 b(in)h(Section)g(3.4,)g(our)f
(inspection)g(approach)e(detects)-60 292 y(duplicate)33
b(k)o(e)o(ys)g(by)h(counting)e(the)i(number)e(of)h(sub-partitions)-60
382 y(matching)24 b(e)n(v)o(ery)f(probe)h(tuple.)39 b(When)25
b(a)g(probe)f(tuple)g(on)h(a)n(v)o(er)n(-)-60 472 y(age)d(matches)g(4)g
(or)g(more)f(sub-partitions,)f(it)j(chooses)f(enhanced)-60
561 y(cache)30 b(partitioning)e(as)k(the)e(join)g(phase)g(algorithm.)54
b(Thus)31 b(the)-60 651 y(actual)22 b(inspector)f(join)g(performance)e
(tracks)j(the)g(best)g(of)g(the)g Fo(in-)-60 741 y(spector)e
Fq(and)g Fo(enhanced)e(cp)i Fq(curv)o(es)f(in)h(the)h(\002gure.)40
834 y(Figure)31 b(14\(b\))g(sho)n(ws)h(the)g(performance)d(when)j(the)g
(source)-60 924 y(relations)25 b(are)h(nearly)f(sorted.)42
b(W)-7 b(e)27 b(v)n(ary)e(the)h(percentage)e(of)i(tu-)-60
1013 y(ples)31 b(out)f(of)g(order)f(from)h(0\045)h(\(fully)e(sorted\))h
(to)g(5\045.)56 b(F)o(or)31 b(the)-60 1103 y(fully)21
b(sorted)f(case,)i(we)g(sort)f(the)g(input)g(relations)f(for)h(the)g
(8-CPU)-60 1193 y(points)h(in)g(Figure)g(10\(c\).)29
b(Then)21 b(we)i(randomly)d(choose)h(1\045\2265\045)-60
1282 y(of)26 b(tuples)f(and)h(randomly)d(change)i(their)h(locations)f
(to)h(generate)-60 1372 y(the)20 b(other)g(cases.)40
1465 y(As)e(sho)n(wn)f(in)h(Figure)f(14\(b\),)g(the)g(sort-mer)o(ge)f
(algorithm)g(per)n(-)-60 1555 y(forms)23 b(the)g(best)g(as)h(e)o
(xpected)e(for)h(the)g(fully)g(sorted)f(case.)35 b(Ho)n(w-)-60
1645 y(e)n(v)o(er)m(,)d(to)f(our)f(surprise,)i(the)f(inspector)e(join)i
(performs)e(equally)-60 1734 y(well.)k(The)23 b(reason)f(is)i(that)f
(for)f(the)h(fully)f(sorted)g(case,)i(the)f(b)n(uild)-60
1824 y(tuples)34 b(in)g(a)g(b)n(uild)f(sub-partition)f(are)h(sorted,)k
(and)c(the)h(corre-)-60 1914 y(sponding)h(probe)g(tuples)i(located)f
(sequentially)g(in)h(the)g(probe)-60 2003 y(partition.)64
b(Therefore,)34 b(the)g(cache-stationary)d(join)i(phase)g(es-)-60
2093 y(sentially)28 b(visits)g(both)f(the)h(b)n(uild)f(and)g(the)h
(probe)e(partitions)h(se-)-60 2183 y(quentially)-5 b(.)36
b(Since)24 b(the)h(hash)f(table)g(is)h(k)o(ept)f(in)h(cache,)g(its)g
(cache)-60 2272 y(beha)n(vior)31 b(is)i(the)f(same)h(as)g(the)f(sort)h
(mer)o(ge)e(join,)k(which)c(only)-60 2362 y(mer)o(ges)26
b(tw)o(o)h(in-order)e(inputs.)45 b(When)27 b(more)f(and)g(more)h
(tuples)-60 2452 y(are)h(out)g(of)g(order)m(,)g(the)g(sort)g(mer)o(ge)f
(join)h(becomes)f(w)o(orse)h(than)-60 2541 y(the)i(inspector)f
(algorithm)f(because)h(of)h(the)g(increasing)f(cost)h(of)-60
2631 y(sorting)e(out-of-order)e(tuples,)31 b(while)f(the)f(inspector)f
(algorithm)-60 2721 y(pays)20 b(only)f(a)h(slight)g(o)o(v)o(erhead)d
(to)j(visit)h(some)f(probe)e(tuples)i(non-)-60 2810 y(sequentially)-5
b(.)-60 3027 y Fn(7)99 b(Conclusions)-60 3170 y Fq(In)31
b(this)i(paper)m(,)g(we)f(ha)n(v)o(e)f(proposed)f(and)h(e)n(v)n
(aluated)f Fo(inspector)-60 3260 y(joins)p Fq(,)18 b(which)g(e)o
(xploit)f(the)i(f)o(act)f(that)g(during)f(the)h(I/O)h(partitioning)-60
3349 y(phase)k(of)f(a)i(hash-based)d(join,)j(we)f(ha)n(v)o(e)g(an)g
(almost)g(free)f(oppor)n(-)-60 3439 y(tunity)j(to)h(inspect)f(the)h
(actual)f(properties)g(of)g(the)h(data)f(that)h(will)-60
3528 y(be)j(re)n(visited)f(later)h(during)e(the)h(join)h(phase.)50
b(W)-7 b(e)30 b(use)f(this)g(\223in-)-60 3618 y(spection\224)e
(information)e(in)i(tw)o(o)h(w)o(ays.)47 b(First,)29
b(we)f(use)g(this)g(in-)-60 3708 y(formation)18 b(to)i(accelerate)f(a)h
(ne)n(w)g(type)f(of)h(cache-optimized)d(join)-60 3797
y(phase)e(algorithm.)22 b(The)14 b(cache-stationary)f(join)i(phase)g
(algorithm)-60 3887 y(is)32 b(especially)f(useful)g(when)f(the)i(join)f
(is)h(run)e(in)i(parallel)e(on)h(a)-60 3977 y(multiprocessor)m(,)16
b(since)j(it)g(consumes)e(less)j(of)e(the)h(precious)e(main)-60
4066 y(memory)22 b(bandwidth)g(than)i(e)o(xisting)f(state-of-the-art)f
(schemes.)-60 4156 y(Second,)37 b(information)32 b(obtained)h(through)f
(inspection)h(can)i(be)-60 4246 y(used)30 b(to)h(choose)f(a)h(join)g
(phase)f(algorithm)f(that)i(is)h(best)f(suited)-60 4335
y(to)e(the)g(data.)52 b(F)o(or)29 b(e)o(xample,)h(inspector)e(joins)h
(can)g(choose)f(en-)-60 4425 y(hanced)16 b(cache)i(partitioning)e(as)i
(the)g(join)g(phase)f(algorithm)f(when)-60 4515 y(a)21
b(probe)d(tuple)i(on)g(a)n(v)o(erage)f(matches)h(4)g(or)g(more)f
(sub-partitions.)40 4608 y(Our)46 b(e)o(xperimental)f(results)i
(demonstrate)f(that)h(inspector)-60 4698 y(joins)38 b(of)n(fer)e
(speedups)g(of)i(1.1\2261.4X)d(o)o(v)o(er)h(the)h(best)h(e)o(xisting)
-60 4788 y(cache-friendly)14 b(hash)i(join)h(algorithm)e(when)h(run)g
(on)g(8,)i(16,)e(or)h(32)-60 4877 y(processors,)g(with)h(the)g(adv)n
(antage)e(gro)n(wing)h(with)h(the)g(number)e(of)-60 4967
y(processors.)27 b(W)-7 b(e)23 b(also)e(observ)o(e)f(that)h(inspector)g
(joins)g(are)g(rob)n(ust)-60 5057 y(with)31 b(respect)f(to)h(v)n
(arious)f(properties)g(of)g(the)h(data)g(\(e.g.,)h(tuple)-60
5146 y(size,)21 b(fraction)f(of)g(tuples)h(with)g(matches,)f(etc.\).)26
b(Thus,)21 b(inspector)-60 5236 y(joins)26 b(are)g(well-suited)g(for)g
(modern)e(multi-processor)g(database)-60 5326 y(serv)o(ers.)2040
-66 y Fn(Refer)n(ences)2077 61 y Fb([1])42 b(J.)20 b(A.)f(Blak)o(ele)o
(y)-5 b(,)21 b(P)-8 b(.)18 b(Larson,)j(and)f(F)-6 b(.)19
b(W)-7 b(.)20 b(T)-6 b(ompa.)30 b(Ef)n(\002ciently)20
b(Up-)2206 144 y(dating)e(Materialized)g(V)l(ie)n(ws.)23
b(In)17 b Fa(Pr)m(oceedings)h(of)g(the)f(1986)i(SIG-)2206
226 y(MOD)g(Confer)m(ence)p Fb(,)h(pages)g(61\22671,)g(May)f(1986.)2077
341 y([2])42 b(B.)21 b(H.)h(Bloom.)38 b(Space/T)m(ime)22
b(T)m(rade-of)n(fs)h(in)f(Hash)g(Coding)h(with)2206 423
y(Allo)n(w)o(able)33 b(Errors.)70 b Fa(Communications)33
b(of)g(A)n(CM)p Fb(,)e(13\(7\):422\226)2206 506 y(426,)19
b(1970.)2077 621 y([3])42 b(P)-8 b(.)16 b(A.)g(Boncz,)i(S.)e(Mane)o
(gold,)j(and)e(M.)g(K)n(ersten.)23 b(Database)18 b(Archi-)2206
703 y(tecture)e(Optimized)g(for)g(the)g(Ne)n(w)g(Bottleneck:)22
b(Memory)17 b(Access.)2206 785 y(In)i Fa(Pr)m(oceedings)h(of)f(the)g
(25th)g(VLDB)p Fb(,)e(pages)j(54\22665,)g(Sept.)e(1999.)2077
901 y([4])42 b(S.)30 b(Chen,)35 b(A.)30 b(Ailamaki,)k(P)-8
b(.)30 b(B.)g(Gibbons,)35 b(and)d(T)-6 b(.)31 b(C.)f(Mo)n(wry)-5
b(.)2206 983 y(Impro)o(ving)24 b(Hash)f(Join)g(Performance)g(through)h
(Prefetching.)40 b(In)2206 1065 y Fa(Pr)m(oceedings)17
b(of)e(the)h(20th)h(ICDE)p Fb(,)d(pages)j(116\226127,)h(March)f(2004.)
2077 1181 y([5])42 b(G.)50 b(Graefe.)129 b(Query)51 b(Ev)n(aluation)h
(T)-5 b(echniques)51 b(for)g(Lar)o(ge)2206 1263 y(Databases.)27
b Fa(A)n(CM)19 b(Computing)g(Surve)n(ys)p Fb(,)h(25\(2\):73\226170,)h
(1993.)2077 1378 y([6])42 b(Intel)26 b(Corp.)51 b Fa(IA-32)26
b(Intel)g(Ar)m(c)o(hitectur)m(e)h(Softwar)m(e)g(De)o(veloper')m(s)2206
1460 y(Manual,)h(V)-8 b(olumn)26 b(2B:Instruction)g(Set)f(Refer)m(ence)
i(N-Z)p Fb(.)47 b(Order)2206 1543 y(Number:)24 b(253667.)2077
1658 y([7])42 b(Intel)17 b(Corp.)23 b Fa(Intel)16 b(Itanium)h(2)h(Pr)m
(ocessor)f(Refer)m(ence)h(Manual)g(F)-8 b(or)2206 1740
y(Softwar)m(e)29 b(De)o(velopment)g(and)f(Optimization)p
Fb(.)56 b(Order)28 b(Number:)2206 1822 y(251110-003.)2077
1938 y([8])42 b(Intel)18 b(Corp.)27 b Fa(Intel)18 b(Itanium)h(Ar)m(c)o
(hitectur)m(e)h(Softwar)m(e)f(De)o(veloper')m(s)2206
2020 y(Manual)p Fb(.)28 b(Order)19 b(Number:)24 b(245317-004.)2077
2135 y([9])42 b(N.)d(Kabra)g(and)h(D.)f(J.)g(DeW)m(itt.)90
b(Ef)n(\002cient)39 b(Mid-Query)h(Re-)2206 2218 y(Optimization)30
b(of)g(Sub-Optimal)f(Query)i(Ex)o(ecution)f(Plans.)62
b(In)2206 2300 y Fa(Pr)m(oceedings)22 b(of)g(the)f(1998)i(SIGMOD)e
(Confer)m(ence)p Fb(,)i(pages)g(106\226)2206 2382 y(117,)c(June)h
(1998.)2040 2497 y([10])42 b(M.)20 b(Kitsure)o(ga)o(w)o(a,)g(H.)g(T)-6
b(anaka,)21 b(and)g(T)-6 b(.)19 b(Moto-Oka.)32 b(Application)2206
2579 y(of)26 b(Hash)h(to)f(Data)h(Base)f(Machine)i(and)f(its)e
(Architecture.)51 b Fa(Ne)o(w)2206 2662 y(Gener)o(ation)20
b(Computing)p Fb(,)f(1\(1\):63\22674,)i(1983.)2040 2777
y([11])42 b(B.)31 b(Lindsay)-5 b(.)69 b(Hash)32 b(Joins)h(in)e(DB2)h
(UDB:)f(the)h(Inside)g(Story.)2206 2859 y Fa(Carne)m(gie)20
b(Mellon)f(DB)f(Seminar)p Fb(,)i(March)g(2002.)2040 2975
y([12])42 b(S.)22 b(Mane)o(gold,)k(P)-8 b(.)22 b(A.)h(Boncz,)i(and)f
(M.)f(L.)f(K)n(ersten.)42 b(What)23 b(Hap-)2206 3057
y(pens)30 b(During)g(a)g(Join?)56 b(Dissecting)30 b(CPU)e(and)j(Memory)
f(Opti-)2206 3139 y(mization)24 b(Ef)n(fects.)40 b(In)24
b Fa(Pr)m(oceedings)g(of)g(the)f(26th)h(VLDB)p Fb(,)e(pages)2206
3221 y(339\226350,)f(Sept.)d(2000.)2040 3337 y([13])42
b(V)-10 b(.)28 b(Markl,)i(V)-10 b(.)28 b(Raman,)j(D.)c(E.)h(Simmen,)i
(G.)d(M.)h(Lohman,)j(and)2206 3419 y(H.)20 b(Pirahesh.)34
b(Rob)o(ust)20 b(Query)i(Processing)f(through)h(Progressi)n(v)o(e)2206
3501 y(Optimization.)h(In)16 b Fa(Pr)m(oceedings)i(of)f(the)g(2004)h
(SIGMOD)f(Confer)o(-)2206 3583 y(ence)p Fb(,)i(pages)h(659\226670,)h
(June)f(2004.)2040 3699 y([14])42 b(S.)17 b(McF)o(arling.)24
b(Combining)19 b(Branch)g(Predictors.)24 b(T)-5 b(echnical)18
b(Re-)2206 3781 y(port)25 b(WRL)f(T)-5 b(echnical)25
b(Note)g(TN-36,)h(Digital)e(Equipment)i(Cor)o(-)2206
3863 y(poration,)19 b(June)h(1993.)2040 3978 y([15])42
b(T)-6 b(.)28 b(K.)g(Sellis.)55 b(Multiple-Query)29 b(Optimization.)57
b Fa(A)n(CM)28 b(T)o(ODS)p Fb(,)2206 4061 y(13\(1\):23\22652,)21
b(1988.)2040 4176 y([16])42 b(L.)25 b(D.)h(Shapiro.)51
b(Join)27 b(Processing)g(in)f(Database)h(Systems)f(with)2206
4258 y(Lar)o(ge)19 b(Main)g(Memories.)28 b Fa(A)n(CM)18
b(T)o(ODS)p Fb(,)g(11\(3\):239\226264,)j(1986.)2040 4374
y([17])42 b(A.)22 b(Shatdal,)g(C.)g(Kant,)g(and)h(J.)f(F)-6
b(.)21 b(Naughton.)39 b(Cache)23 b(Conscious)2206 4456
y(Algorithms)k(for)g(Relational)g(Query)h(Processing.)53
b(In)28 b Fa(Pr)m(oceed-)2206 4538 y(ings)19 b(of)g(the)g(20th)h(VLDB)p
Fb(,)d(pages)j(510\226521,)g(Sept.)f(1994.)2040 4653
y([18])42 b(M.)20 b(Stillger)m(,)f(G.)h(M.)g(Lohman,)h(V)-10
b(.)20 b(Markl,)h(and)g(M.)f(Kandil.)32 b(LEO)2206 4736
y(-)c(DB2')l(s)f(LEarning)h(Optimizer.)56 b(In)27 b Fa(Pr)m(oceedings)i
(of)f(the)g(27th)2206 4818 y(VLDB)p Fb(,)17 b(pages)j(19\22628,)g
(Sept.)e(2001.)2040 4933 y([19])42 b(P)-8 b(.)29 b(V)-8
b(alduriez.)63 b(Join)30 b(Indices.)64 b Fa(A)n(CM)29
b(T)o(ODS)p Fb(,)g(12\(2\):218\226246,)2206 5015 y(1987.)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
