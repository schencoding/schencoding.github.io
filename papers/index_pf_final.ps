%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: paper.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica Helvetica-Oblique Times-Bold
%%+ Times-Roman Times-Italic
%%EndComments
%DVIPSCommandLine: dvips -o paper.ps paper
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 2001.03.02:1506
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Helvetica-Bold
% @psencodingfile{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "14 April 1995",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/setpagedevice{pop}N statusdict begin /letter{}N /lettertray{}N /legal{}
N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N /b5tray{}N
/showpage{}N /erasepage{}N /copypage{}N end /letter{}N /lettertray{}N
/legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N
/b5tray{}N /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N
/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4
copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip
newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /setpagedevice{pop}N statusdict begin /letter{}
N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N
/b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N end
/letter{}N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{
}N /b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N
newpath}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount
sub{end}repeat grestore SpecialSave restore end}N /@defspecial{SDict
begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np
{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (paper.dvi)
@start /Fa 10 110 df<13401380EA01005A12065AA25AA212381230A21270A3126012
E0AC12601270A31230A212381218A27EA27E7E7EEA008013400A2C7A8112>0
D<7E12407E12307E7EA27EA212077EA21380A3120113C0AC13801203A31300A25A1206A2
5AA25A5A12205A5A0A2C7F8112>I<EAFFC0A2EAC000B3B3A60A2C798112>6
D<EAFFC0A21200B3B3A60A2C808112>I<130C13181330136013E013C0EA018012031300
5A1206120E120C121CA212181238A312301270A55AB11270A512301238A31218121CA212
0C120E120612077E13801201EA00C013E0136013301318130C0E43798117>16
D<12C012607E7E121C120C7E12077E1380120113C0120013E0A213601370A313301338A5
131CB11338A513301370A3136013E0A213C012011380120313005A12065A121C12185A5A
5A0E437F8117>I<EAFFF8A3EAE000B3B3B3B3AE0D59788116>24
D<EAFFF8A3EA0038B3B3B3B3AE0D59808116>I<EAFFE0A2EAC000B3B3B3AB0B43788114>
108 D<EAFFE0A2EA0060B3B3B3AB0B43808114>I E /Fb 1 1 df<B512C0A212027D8618
>0 D E /Fc 9 122 df<B4FC1380EA61C0EA60E0136013701330A61370136013E0EA61C0
EAFF8013000C127F910F>68 D<12FFA21218AE12FFA208127D910F>73
D<120FEA1F80EA30C01260EAC060A2EAFFE0A2EAC000EA60601230EA1FC0EA0F800B0D7F
8C0F>101 D<12F0A21230A3EA33F0A2EA30C0EA3180EA33001236123F123BEA3180A2EA
30C0EAF8F0A20C127F910F>107 D<12FCA2120CAEEAFFC0A20A127E910F>I<EAF380EAFF
E0EA3C70EA3830EA3018A5EA3830EA3C70EA3FE0EA3380EA3000A412FCA20D13808C0F>
112 D<12081218A2EA7FC012FFEA1800A61360A3EA0FC0EA07800B107F8F0F>116
D<EAF0F0A2EA3030A81370EA1FFCEA0FBC0E0D808C0F>I<EAF9F0A2EA30C0A31218EA19
80A2120D1300120F7E1206A312EE12EC12F812700C137F8C0F>121
D E /Fd 11 120 df<126012F0A2126004047D830B>58 D<126012F0A212701210A31220
A21240A2040B7D830B>I<3803FFFC38007007EC038015C013E0A43901C00780EC0F0014
1E5C3803FFF8EB803C8080EA0700A4000E131EA25C5C381C01E0B512801A1A7E991D>66
D<3903F001FE39007800701520135C019C1340138EA3D801071380A2EB0380A2390201C1
00A3EB00E14813E21472A2143A48133CA2141C121800381308B4FC1F1A7E991F>78
D<003FB5128038380E010020130012405B1280A348481300A45BA45BA4485AA41203EA7F
FC191A7F9916>84 D<EA01F0EA070C120CEA181CEA3008EA7000126012E0A413041308EA
6010EA3060EA0F800E107F8F11>99 D<EB0FC01301A3EB0380A4EB0700A2EA03E7EA0617
EA1C0E123812301270EA601C12E0A3133912C012E0EA6079EA219AEA1E0E121A7F9914>
I<EA1F801203A348C7FCA4120EA21307EB1980EA1C231341EB8000001DC7FC123EEA3FC0
EA38E01370EA7071A31372EAE032EA601C111A7F9914>107 D<39383E0F80394CC330C0
398F03C0E0A2008E1380A2391C0701C0A3EC0380D8380E1388A2EC0708151039701C0320
39300C01C01D107E8F22>109 D<EA703EEA58C7389D0380129E129CA238380700A3130E
00701340A2131C1480EAE00C3860070012107E8F17>I<381C0306002613873847070700
871303128EA2380E0E02121CA338381C04A200181308001C1310380C26303807C3C01810
7E8F1C>119 D E /Fe 46 122 df<1230127812F0126005047D830B>46
D<EA01E0EA0630EA0C10121812101230A2EA6030A4EAC060A3134013C0EA80801281EAC1
001246123C0C157B9412>48 D<134013C0A2EA0380121D1201A2EA0300A41206A45AA45A
EAFF800A157C9412>I<13F0EA0308EA040CEA090413061211A2EA220C1224EA1818EA00
30136013C0EA030012041218EA2004130CEA7C18EAC7F0EA81E00F157D9412>I<130CA3
1318A31330A21360A2134013C0EA018013181202EA0630120412081210EA7F60EA80FEEA
0060A213C0A313800F1B7F9412>52 D<EA060CEA07F813F0EA08801300A35AEA1780EA18
601210EA0070A31260EAF0E012E0EA80C0EA8180EA4300123C0E157C9412>I<13F0EA03
081206EA0C381218EA10001230A2EA6780EA68C0EA7040EAE06012C0A313C0A21380EAC1
001242123C0D157B9412>I<EA1382EA2F84EA38CCEA6078EA4018EA8010132012001340
13C013801201A2EA0300A31206A35AA20F157B9412>I<13F8EA010CEA06061204120CA2
EA0E0CEA0F18EA07B0EA03C0EA07F0EA0CF8EA3078EA601CA2EAC018A21310EA6020EA30
C0EA1F000F157D9412>I<13E0EA0310EA0608120C1218A213181230A213381210EA18F0
EA073012001360A2EAE0C01380EA8100128612780D157C9412>I<EB0180A21303A21307
A2130B1313A2EB21C0A213411381A2EA010113FFEA0201A212041208A2001813E038FE07
F815177E961A>65 D<3803FFF03800E038141C140CA2EA01C0141CA2143838038070EBFF
C014E0EB8070380700301438A3000E1370A214E0EB01C0381C038038FFFE0016177E9619
>I<EB3F04EBE08838038058380600385A001C13105A123012700060130012E0A35A1440
A214807EEB0100EA60026C5AEA1818EA07E016177A961A>I<3803FFF03800E018140C14
0614073801C003A438038007A43807000EA2140C141C000E13181430146014C0381C0380
38FFFC0018177E961B>I<3803FFFE3800E00E1404A3EA01C0A21480A238038100138313
FF1383EA07021408A2EB0010120E143014201460381C01C0B5FC17177E9618>I<3803FF
FE3800E00E1404A3EA01C0A21480A238038100138313FF1383EA0702A390C7FC120EA45A
EAFFC017177E9617>I<EB3F04EBE08838038058380600385A001C13105A123012700060
130012E0A338C01FF8EB01C0A338E00380A21260EA300738181B00EA07E116177A961C>
I<3903FE3FE03900E00E00A448485AA448485AA2EBFFF8EB803848485AA4000E5BA44848
5A38FF8FF81B177E961A>I<EA07FEEA00E0A4EA01C0A4EA0380A4EA0700A4120EA45AEA
FF800F177E960E>I<EA03FEEA00E0A4485AA4485AA448C7FC1420A21440120E14C01480
1301EA1C07B5120013177E9616>76 D<D803F0EB3F800000EC780013B815B8EC0138D801
385B1402A214040002495A131C1410A20004EB21C01441A2148139081D0380A2130EA226
180C07C7FC39FE083FE021177E9620>I<EB1F80EBE0C03801806038030030000613385A
001C131812180038133812301270A314705A14E01260387001C0EB038000301300EA380E
EA1C18EA07E015177B961B>79 D<3803FFE03800E038141C140CA23801C01CA314383803
807014E0EBFF80EB800048C7FCA4120EA45AB47E16177E9618>I<EB7C4038018280EA03
011206A2000C1300A2000EC7FCA2EA0FC0EA07F86C7EEA007C130EA213061220485AA2EA
60085BEAD860EA87C012177D9614>83 D<381FFFFC3838381C0020130812601240137012
8000001300A25BA4485AA4485AA448C7FCEA7FF016177A961A>I<38FF80FC381C007014
6014401480A2EB01001302A2EA1E04120E5B5BA25BA25B5B120F6CC7FCA2120612041617
79961A>86 D<EA0390EA0C701218EA303013601260A3EAC0C013C812401241EA62D0EA1C
700D0E7C8D12>97 D<127C1218A45AA4EA6780EA68C0EA7040EA606012C0A4EA80C0A2EA
8180EAC1001246123C0B177C9610>I<EA07C0EA0C60EA30E01220EA60005AA35AA2EAC0
201340EA6180EA3E000B0E7C8D10>I<133E130CA41318A4EA03B0EA0C701218EA303013
601260A3EAC0C013C812401241EA62D0EA1C700F177C9612>I<EA0780EA1840EA302012
601340EAFF80EAC000A413201340EA6180EA3E000B0E7C8D10>I<131C1336133E136C13
60A313C0A2EA07F8EA00C0A3EA0180A5EA0300A412021206A2126612E45A12700F1D8196
0B>I<EA01C4EA063CEA0C1C121813181230A3EA2030A3EA3070EA11E0EA0E601200A2EA
60C012E0EAC380EA7E000E147E8D10>I<121F1206A45AA4EA19E0EA1A30EA1C101218EA
3030A4EA6060136413C413C8EAC04813700E177D9612>I<1203120712061200A6121812
2C124CA2128C1218A312301232126212641224123808177D960B>I<123E120CA41218A4
1230A41260A412C012C8A312D0126007177D9609>108 D<3830783C38498CC6384E0502
EA4C06389C0E06EA180CA348485A15801418A23960300900140E190E7D8D1D>I<EA3078
EA498CEA4E04124CEA9C0C1218A3EA301813191331A2EA6012131C100E7D8D14>I<EA07
80EA18C0EA3040EA6060A212C0A3EA80C0A2EA8180EAC1001246123C0B0E7B8D12>I<EA
0C38EA12C4EA1306A212261206A3EA0C0CA213181310EA1A20EA19C0EA1800A25AA312FC
0F147F8D12>I<EA30F0EA4B18EA4E38EA4C30EA98001218A35AA45AA20D0E7D8D0F>114
D<EA0780EA0C40EA18E0A2EA3800121EEA1F80EA07C01200126012E0EAC180EAC300123E
0B0E7D8D0F>I<1206A25AA4EAFF80EA1800A35AA45A1261A212621264123809147D930C>
I<EA3804EA2C0C124CA2EA8C181218A3EA30301332A21372EA18B4EA0F1C0F0E7D8D13>
I<EA0E3CEA1346EA218E138CEA43001203A31206130812C6EAE610EACA20EA71C00F0E7E
8D10>120 D<EA3804EA2C0C124CA2EA8C181218A3EA3030A31370EA18E0EA0F60120013
C012E0EAE180EA4300123C0E147D8D11>I E /Ff 8 120 df<380FFFC0380180601430EA
0300A314E038060380EA07FF380601C013005AA3EB018038180700EAFFFC14117E9017>
66 D<380F80FE3801C010A238026020A21330A238041840A2130CA238080680A21303A2
3818010012FE17117E9018>78 D<383FFFC0EA30600040134013C01280A200001300485A
A448C7FCA41206EA3FE012117E9012>84 D<13781318A21330A31207EA18E0EA30601260
A2EAC0C0A213C81241EA62D0EA3C600D117E9010>100 D<EA0780EA184012301260EA7F
80EAC000A3EA4020EA20C0EA1F000B0B7E8A0F>I<1204120C1200A5123012581298A212
30A212601264A21268123006127E910B>105 D<3871F1F0389A1A18EA9C1CEA98181218
38303030A214321462386060641438170B7E8A1B>109 D<383810C0EA4830008C134012
98121838306080A3EB6100EA10A2EA0F1C120B7E8A16>119 D E
/Fg 2 18 df<13181330136013C01201EA038013005A1206120E120C121C12181238A312
301270A4126012E0AE12601270A412301238A31218121C120C120E120612077E1380EA01
C012001360133013180D3A7A8015>16 D<12C012607E7E121C7E120612077E1380120113
C0120013E0A313601370A413301338AE13301370A4136013E0A313C01201138012031300
5A1206120E5A12185A5A5A0D3A7F8015>I E /Fh 9 122 df<EAFFC0EA7FF0EA38781338
131CA2131E130EA7131CA213381378EA7FF0EAFFC00F147F9312>68
D<EAFFE0A2EA0E00B0EAFFE0A20B147D9312>73 D<EA0780EA1FE0EA38701270EA603812
E0EAFFF8A2EAE0001260EA70381238EA1FF0EA07C00D0E7E8D12>101
D<12F8A21238A4EA3BFCA2EA38F0EA39E0EA3BC0EA3F80A213C0EA3DE0123813701338EA
FC7EA20F147F9312>107 D<B4FCA21207B0EAFFF8A20D147E9312>I<EAFBE0EAFFF0EA3C
38EA381C130C130EA4130C131CEA3C38EA3FF0EA3BC0EA3800A512FEA20F157F8D12>
112 D<1206120EA3EA7FF812FFEA0E00A7131CA3EA07F8EA01E00E127F9112>116
D<EAF8F8A2EA3838A91378EA1FFEEA0FBE0F0E7F8D12>I<EAFC7EA2EA3838121C1370A2
120E136013E01206A2EA07C01203A21380A3EA7700127F127E12380F157F8D12>121
D E /Fi 3 106 df<EA4001EAC003EA6006EA300CEA1818EA0C30EA0660EA03C0EA0180
A2EA03C0EA0660EA0C30EA1818EA300CEA6006EAC003EA400110127B901B>2
D<120112031206A3120CA31218A21230A31260A312C0A21260A31230A31218A2120CA312
06A31203120108227D980E>104 D<12C0A21260A31230A31218A2120CA31206A31203A2
1206A3120CA31218A21230A31260A312C0A208227E980E>I E /Fj
8 120 df<3807FFF83800E00E14071403A2EA01C01407A2140E3803803CEBFFF0A2EB80
3C3807001C140EA3000E131CA214381470381C01E0B5120018177F961B>66
D<3907F007F80000EB00C001B81380A2139C39011C0100131E130EA238020702A2EB0382
A2380401C4A2EB00E4A2481378A21438A20018131012FE1D177F961C>78
D<381FFFFE38381C0E00201304126012401338128000001300A25BA45BA4485AA41203EA
3FFC17177F9615>84 D<EA07C0EA0C20EA10701220EA60005AA35AA2EAC0101320EA60C0
EA3F000C0E7E8D0F>99 D<133E130CA41318A4EA0730EA18F0EA30701260136012C0A3EA
80C013C4A212C1EA46C8EA38700F177E9612>I<121F1206A45AA4EA181C1366138EEA19
0CEA3200123C123FEA3180EA60C013C4A3EAC0C813700F177E9612>107
D<38383C1E3844C6633847028138460301388E0703EA0C06A338180C061520140C154039
301804C0EC07001B0E7F8D1F>109 D<381C0204382606061246A238860C04120CA33818
1808A214101208380C2C203803C7C0170E7F8D19>119 D E /Fk
76 124 df<EBFCF83807839CEA0E07001C13081400A5B512E0381C0700AC387F1FE01617
809615>11 D<13FCEA0782EA0E07121C130290C7FCA4B5FCEA1C07AC387F1FC012178096
14>I<EB1830A3EB3060A5EB60C0A2B6FCA23800C180A338018300A3B6FCA238030600EA
060CA5485AA3181D7E961D>35 D<120112021204120C1218A21230A212701260A312E0AA
1260A312701230A21218A2120C12041202120108227D980E>40 D<128012401220123012
18A2120CA2120E1206A31207AA1206A3120E120CA21218A2123012201240128008227E98
0E>I<126012F0A212701210A21220A21240A2040A7D830A>44 D<EAFF80A2090280870C>
I<126012F0A2126004047D830A>I<130813181330A31360A313C0A3EA0180A3EA0300A2
1206A35AA35AA35AA35AA35AA20D217E9812>I<EA07C0EA1830EA3018EA701CEA600CA2
EAE00EA9EA600CA2EA701CEA3018EA1C70EA07C00F157F9412>I<1206120E12FE120EB1
EAFFE00B157D9412>I<EA0F80EA30E0EA4070EA8030EAC03812E0124012001370A21360
13C0EA0180EA03001206EA0C081208EA1018EA3FF0127F12FF0D157E9412>I<EA0FE0EA
3030EA6018EA701CA21200131813381360EA07E0EA00301318130C130EA212E0A2EAC00C
EA4018EA3030EA0FE00F157F9412>I<1330A2137013F012011370120212041208121812
101220124012C0EAFFFEEA0070A5EA03FE0F157F9412>I<EA6030EA7FE013C0EA440012
40A4EA4F80EA70E0EA4070EA00301338A2124012E0A2EA8030EA4060EA20C0EA1F000D15
7E9412>I<EA01F0EA0608EA080CEA181C1230EA7000126012E0EAE3E0EAEC30EAF01813
0CEAE00EA31260A2EA300C1318EA1830EA07C00F157F9412>I<1240EA7FFE13FC13F8EA
C008EA80101320EA00401380A2EA01005AA212021206A2120EA512040F167E9512>I<EA
07E0EA1830EA2018EA600CA21270EA7818EA3E10EA1F60EA07C0EA0FF0EA18F8EA607C13
1EEAC00E1306A21304EA600CEA3830EA0FE00F157F9412>I<EA07C0EA1830EA30181260
EAE00CA2130EA3EA601E1230EA186EEA0F8EEA000E130C131CEA7018A2EA6030EA20E0EA
1F800F157F9412>I<126012F0A212601200A6126012F0A21260040E7D8D0A>I<B512FCA2
C8FCA6B512FCA2160A7E8C1B>61 D<EA1F80EA60E0EA807012E0A21240EA00E0EA01C013
80EA03001202A5C7FCA41206120FA212060C177E9611>63 D<13101338A3135CA3138EA3
EA0107A238020380A33807FFC0EA0401A2380800E0A2001813F0123838FE03FE17177F96
1A>65 D<EAFFFE381C0380EB00E014601470A414E0EB01C0381FFF8014C0381C00E01470
14301438A4147014E0EB01C0B5120015177F9619>I<EBFC1038038330380E00B0481370
481330123000701310126012E01400A51410126012700030132012386C13406C13803803
8300EA00FC14177E9619>I<B5FC381C01C0EB00E0143014381418141C140C140EA7140C
141CA2143814301460EB01C0B5120017177F961B>I<B512E0EA1C00146014201410A3EB
0400A3130CEA1FFCEA1C0C13041408A2130014181410A2143014F0B5FC15177F9618>I<
B512E0EA1C00146014201410A3EB0400A3130CEA1FFCEA1C0C1304A390C7FCA6EAFFC014
177F9617>I<EB7E0838038198380600584813384813185A00701308A25A1400A4EB03FE
EB00381270A212307E7E7E380380D838007F0817177E961C>I<38FF83FE381C0070AA38
1FFFF0381C0070AA38FF83FE17177F961A>I<EAFFE0EA0E00B3A3EAFFE00B177F960D>I<
EA0FF8EA00E0B112E0A2EAC1C0EA6180EA1F000D177E9612>I<38FF80FE381C00781460
14401480EB0100130613085B13381378139CEA1D0E121EEA1C07EB0380EB01C0A2EB00E0
14701478147C38FF80FF18177F961B>I<EAFFC0001CC7FCAD1420A31460A2144014C013
03B5FC13177F9616>I<00FEEB03F8001E14C000171305A338138009A23811C011A33810
E021A2EB7041A3EB3881A2EB1D01A2130EA2123839FE040FF81D177F9620>I<00FC13FE
001E1338001F13101217EA1380EA11C0A2EA10E013701338A2131C130E130F1307EB0390
EB01D0A2EB00F014701430123800FE131017177F961A>I<13FCEA0303380E01C0381C00
E048137000301330007013380060131800E0131CA700701338A200301330003813706C13
E0380E01C038030300EA00FC16177E961B>I<EAFFFE381C0380EB00C014601470A41460
14C0EB0380381FFE00001CC7FCAAB47E14177F9618>I<13FCEA0303380E01C0381C00E0
4813700030133000701338A248131CA700601318007013380030133038387870381C84E0
380E85C0380383003800FE0413021303148CEB01F8A2EB00F0161D7E961B>I<EAFFFC38
1C0380EB00C014E01470A414E014C0EB0380381FFE00381C0780EB01C0EB00E0A514E1A2
147238FF803C18177F961A>I<EA0FC4EA302CEA601CEA400CEAC004A3EAE0001270127F
EA3FE0EA0FF8EA01FCEA001C130E13061280A3EAC004EAE008EAD810EA87E00F177E9614
>I<387FFFF83860381800401308A200801304A300001300AF3803FF8016177F9619>I<38
FF80FE381C00381410B06C132012066C13403801818038007E0017177F961A>I<B4137E
003C1338001C1310A26C1320A2000F13606C1340A238038080A213C100011300A2EA00E2
A213F21374A21338A3131017177F961A>I<3AFF07FC3F803A3C00E00E00001C1404A2EB
0170000E5CA2EB023800075CA2EB041CD803845BA2EB880ED801C85BA2EBD007D800F05B
A3EBE003016090C7FCA221177F9624>I<39FF803F80391E001C00000E13086C5BEB8030
000313206C6C5A13E000005B13F10171C7FC133A133E131CA9EBFF80191780961A>89
D<B5128038F0070012C0130EEA801E131C5BEA007813705BA2485A485AA2380700805A12
0EEA1C01003C13001238485A130FB5FC11177E9616>I<12FCA212C0B3AB12FCA206217D
980A>I<12FCA2120CB3AB12FCA2062180980A>93 D<EA3FC0EA70601330EA20381200EA
03F8EA1E3812301270EAE039A21379EA70FFEA1F1E100E7F8D12>97
D<12F81238A8EA39F0EA3E0CEA380613077F1480A414005B1306EA361CEA21F011177F96
14>I<EA07F0EA18381230EA7010EA600012E0A41260EA70081230EA1830EA07C00D0E7F
8D10>I<133E130EA8EA07CEEA1C3EEA300E1270126012E0A412601270EA301EEA182E38
07CF8011177F9614>I<EA0FC0EA1860EA3030EA7038EAE018EAFFF8EAE000A31260EA70
08EA3010EA1830EA07C00D0E7F8D10>I<EA03E0EA0670120EEA1C201300A5EAFF80EA1C
00ACEA7F800C1780960B>I<EA0F9EEA18E3EA3060EA7070A3EA3060EA18C0EA2F80EA20
001260EA3FE013F813FCEA600EEAC006A3EA600CEA3838EA0FE010157F8D12>I<12F812
38A813F8EA3B1CEA3C0E1238AA38FE3F8011177F9614>I<12301278A212301200A512F8
1238AC12FE07177F960A>I<1203EA0780A2EA0300C7FCA5EA1F801203AF1243EAE30012
E7127C091D82960B>I<12F81238A8133E13381330134013801239EA3FC0EA39E0123813
F01378133CA2EAFE7F10177F9613>I<12F81238B3A312FE07177F960A>I<38F8F83E383B
1CC7393C0F0380EA380EAA39FE3F8FE01B0E7F8D1E>I<EAF8F8EA3B1CEA3C0E1238AA38
FE3F80110E7F8D14>I<EA07C0EA1830EA3018EA600CA2EAE00EA5EA701CEA3018EA1830
EA07C00F0E7F8D12>I<EAF9F0EA3E1CEA380613077F1480A414005B130EEA3E1CEA39F0
0038C7FCA512FE11147F8D14>I<EA07C2EA1C26EA381EEA700E126012E0A412601270EA
301EEA1C2EEA07CEEA000EA5EB3F8011147F8D13>I<EAF9E0EA3A70123CEA38201300A9
B4FC0C0E7F8D0E>I<EA1F40EA60C0EAC040A2EAE000B4FCEA7F80EA1FC0EA01E0EA8060
A212C0EAE0C0EA9F000B0E7F8D0E>I<1208A31218A21238EAFFC0EA3800A71340A4EA1C
80EA0F000A147F930E>I<EAF83EEA380EAA131EEA1C2E3807CF80110E7F8D14>I<EAFE1F
EA380EEA3C0CEA1C08A2EA0E10A2EA0720A213E0EA03C0A2EA0180A2100E7F8D13>I<38
FEFE7C383838381410133C001C1320134C381E4E60380ECE401387000713801303A20003
1300EA0201160E7F8D19>I<EAFE3FEA3C1CEA1C10EA0E20EA074013C0EA0380EA01C0EA
02E0EA04F0EA0870EA1838EA383CEAFC7F100E7F8D13>I<EAFE1FEA380EEA3C0CEA1C08
A2EA0E10A2EA0720A213E0EA03C0A2EA0180A21300A212E2A212A4127810147F8D13>I<
EAFFF0EAC0E01280EA81C0EA83801287EA0700120EEA1E08121CEA3818EA70101330EAFF
F00D0E7F8D10>I<B512801101808812>I E /Fl 10 123 df<EB0FF0EB3018EB60101400
A25BA23807FFE03800C060A2380180C0A4EB818038030190A314A0EB00E0000213001206
A212C412C81270151A819314>12 D<12FE12FC07027D860C>45 D<133C130C1318A41330
EA07B0EA0C701210EA30601260A3EAC0C013C8A21241EA62D0EA3C700E147C9312>100
D<EA0780EA1840EA3020EA604012C0EAFF80EAC0005AA2EAC0201340EA6180EA3E000B0D
7C8C10>I<120212061200A51238124CA2128C12981218A212301232A21264A212380714
7D930B>105 D<EA0C78EA168CEA1304EA2606A21206A2EA0C0CA213081310EA1A20EA19
C0EA1800A25AA312FC0F137F8C12>112 D<1207EA188013C0EA3080EA3800121E121FEA
0380120112C1EA81001282127C0A0D7D8C0E>115 D<EA3818124CA2EA8C3012981218A2
EA30601364A213E4EA11E8EA0E300E0D7D8C12>117 D<EA071EEA09E3EA11C2EA2180A2
1201A2EA03001304A2EA4308EAC510EA78E0100D7F8C10>120 D<EA0610EA1FA0EA10E0
EA00401380EA01001202120CEA10201220EA3840EA4FC0EA83000C0D7E8C0E>122
D E /Fm 50 123 df<3801F8F038060738EA0C0E381806101400A3B512C038180600AB38
7E1FC01514809314>11 D<1241EAE38012611220A3EA4100A2128209097F9311>34
D<120212041208121812101230122012601240A212C0AA1240A212601220123012101218
120812041202071E7D950D>40 D<1280124012201230121012181208120C1204A21206AA
1204A2120C1208121812101230122012401280071E7E950D>I<124012E012601220A312
40A2128003097D8209>44 D<12FFA2080280860B>I<124012E0124003037D8209>I<120F
EA30C0EA6060A2EA4020EAC030A9EA4020EA6060A2EA30C0EA0F000C137E9211>48
D<120C121C12EC120CAFEAFFC00A137D9211>I<121FEA60C01360EAF07013301260EA00
70A2136013C012011380EA02005AEA08101210EA2020EA7FE012FF0C137E9211>I<1360
13E0A2EA016012021206120C120812101220126012C0EAFFFCEA0060A5EA03FC0E137F92
11>52 D<EA6060EA7FC01380EA44001240A3124FEA70C0EA40E0EA00601370A212E0A213
60EA40E0EA21C0EA1F000C137E9211>I<EA07C0EA0C20EA10701220EA6000A25A12CFEA
D0C0EAE060EAC0201330A31240EA6020EA2060EA10C0EA0F000C137E9211>I<1240EA7F
FC13F8EA4010EA80301320EA00401380EA0100A25A12021206A2120EA512040E147E9311
>I<EA0FC0EA1070EA20181260A21270EA3C30EA3F60EA0F8013E0EA31F0EA6078EAC01C
130CA3EA6018EA3030EA0FC00E137F9211>I<124012E012401200A7124012E01240030D
7D8C09>58 D<124012E012401200A7124012E012601220A31240A2128003137D8C09>I<
EAFFFCEA1C07EB01C0EB00E01460147014301438A614301470146014E0EB01C0EB038038
FFFC0015147F9319>68 D<38FF83F8381C00E01480EB01001302130C5B1320137013B8EA
1D38EA1E1CEA1C0E130F7FEB0380EB01C014E0130038FF83FC16147F9319>75
D<00FEEB0FE0001E140000171317A338138027A23811C047A23810E087A3EB7107A2133A
A2131CA2123839FE083FE01B147F931E>77 D<38FC01FC381E00700017132013801213EA
11C0EA10E01370A21338131C130E130F1307EB03A0EB01E01300A20038136000FE132016
147F9319>I<387FFFF03860703000401310A200801308A300001300ACEA07FF15147F93
18>84 D<39FF0FF0FC3938038030A2001CEBC020A2001E1460390E04E040A200071480EB
0870A23903887900EB9039A23801F03EEBE01EA23800C00CA31E147F9321>87
D<12FCA212C0B3A712FCA2061D7E9509>91 D<EA2080EA4100A21282A312C3EAE380EA41
0009097A9311>I<12FCA2120CB3A712FCA2061D809509>I<127FEAE1C0EAE040EA406012
00EA07E0EA3860126012C01364A2EA61E4EA3E380E0D7E8C11>97
D<12F01230A6EA33E0EA3430EA3808EA300C1306A5130CEA3808EA3430EA23E00F147F93
12>I<EA0FE0EA18701220EA6020EAC000A51260EA2010EA1820EA0FC00C0D7F8C0F>I<13
781318A6EA0F98EA1878EA2038EA601812C0A51260EA2038EA1858EA0F9E0F147F9312>
I<EA0F80EA1040EA2020EA6030EAC010EAFFF0EAC000A31260EA2010EA1820EA0FC00C0D
7F8C0F>I<EA03C0EA0CE0121813401300A3B4FC1218AB127F0B1480930A>I<EA0F3CEA30
E6EA2040EA6060A3EA2040EA30C0EA2F001260A2EA3FE013F0EA6018EAC00CA3EA6018EA
3030EA0FC00F147F8C11>I<12F01230A6EA33E0EA3430EA38181230A9EAFC7E0F147F93
12>I<1220127012201200A512F01230AB12FC06157F9409>I<12F01230B212FC06147F93
09>108 D<38F3E1F03834321838381C0CEA3018A938FC7E3F180D7F8C1B>I<EAF3E0EA34
30EA38181230A9EAFC7E0F0D7F8C12>I<EA0FC0EA1860EA2010EA6018EAC00CA5EA6018
A2EA3870EA0FC00E0D7F8C11>I<EAF3E0EA3430EA3808EA300C1306A5130CEA3808EA34
30EA33E0EA3000A512FC0F137F8C12>I<EA0F88EA1848EA2038EA601812C0A51260EA20
38EA1858EA0F98EA0018A5137E0F137F8C11>I<EAF3C0EA34E01238EA30401300A812FE
0B0D7F8C0D>I<EA3E80126112C0A2EAE000127EEA3F80EA03C01280A212C0EAE180EA9F
000A0D7F8C0D>I<1210A312301270EAFF80EA3000A71380A3EA1100120E09127F910D>I<
EAF078EA3018A91338EA1858EA0F9E0F0D7F8C12>I<EAF83CEA30181310EA3830EA1820
A2EA0C40A2EA0680A3EA0300A20E0D7F8C11>I<38F87CF83870703038305820A2381888
40138CA2380D04801306A238060300A3150D7F8C18>I<EAF87CEA3030EA1860EA0C4013
80EA07007EEA0780EA0CC0EA08601210EA3030EAF07C0E0D7F8C11>I<EAF83CEA301813
10EA3830EA1820A2EA0C40A2EA0680A3EA0300A21202A212E4A212E812700E137F8C11>
I<EAFFF0EAC060EA80C012811380EA03001206EA0C101218EA3830EA3020EA6060EAFFE0
0C0D7F8C0F>I E /Fn 10 121 df<121812F81218AA12FF080D7D8C0E>49
D<123EEA4180EA80C012C01200A2EA0180EA03001204EA08401230EA7F8012FF0A0D7E8C
0E>I<123E1241EA61801201EA0300121EEA0180EA00C0A212C0A2EA4180EA3E000A0D7E
8C0E>I<12035AA2120B12131223126312C3EAFFC0EA0300A3EA0FC00A0D7E8C0E>I<EA60
80EA7F00125C1240A2125FEA6180EA00C0A212C01280EA4180EA3E000A0D7E8C0E>I<12
0FEA31801261EA60005A12DEEAE180EAC0C0A31260EA2180EA1E000A0D7E8C0E>I<121E
1261EA418012FFEAC000A21240EA2080EA1F0009097E880D>101
D<EAF780EA38C01230A6EAFDF00C097E8810>110 D<1210A21230A212FE1230A41231A3
121E080D7F8C0B>116 D<EAF9E0EA3180EA1B00120EA2120FEA13801221EAF1E00B097E
880F>120 D E /Fo 26 122 df<EAFFFEA30F037E8C14>45 D<EA01C0487EA21360A2EA
0770A4EA0630EA0E38A4487EEA1FFCA2EA1C1CA2487EA238FE3F80A211177F9614>65
D<EAFFE013F8EA383C7F130E7FA3EB0380A8EB0700A2130E131E5BEAFFF813E011177F96
14>68 D<EAFFF8A2EA0700B3EAFFF8A20D177D9614>73 D<38FC1F80A2007C1300EA7637
A4EA7777A2EA7367A313E7EA71C7A2EA7007A638F80F80A211177F9614>77
D<EA0FCCEA1FFCEA307CEA603CEAE01CA313001270127EEA3FE0EA0FF0EA01F8EA001C13
1E130E126012E0A2EAF01CEAF838EAFFF0EAC7E00F177E9614>83
D<EA1FC0EA7FF0EA7078EA2018EA001CA2EA07FC121FEA3C1C127012E0A3EA707C383FFF
80EA0F8F11107E8F14>97 D<12FCA2121CA513F8EA1DFEEA1F07EA1E03001C1380EB01C0
A6EB0380001E1300EA1F0EEA1DFCEA0CF81217809614>I<EA03F8EA0FFEEA1C0EEA3804
EA7000126012E0A412601270EA380EEA1C1EEA0FFCEA03F00F107E8F14>I<137EA2130E
A5EA07CEEA0FFEEA1C3EEA301EEA700E12E0A61270EA301EEA383E381FEFC0EA07CF1217
7F9614>I<EA07E0EA0FF0EA1C38EA301CEA700CEAE00EA2EAFFFEA2EAE00012601270EA
380EEA1C1EEA0FFCEA03F00F107E8F14>I<13FCEA01FEEA038EEA07041300A3EA7FFE12
FFEA0700ACEAFFF8A20F177F9614>I<EA07CF381FFF80EA383B38301800EA701CA3EA30
18EA3838EA3FF0EA37C00070C7FCA2EA3FF86C7E487EEA700F38E00380A438700700EA3C
1EEA1FFCEA07F011197F8F14>I<12FCA2121CA51378EA1DFEEA1F86EA1E07121CAA38FF
8FE0A21317809614>I<1206120FA21206C7FCA4B4FCA21207ACEAFFF8A20D187C9714>I<
12FCA2121CA5EBFF80A2EB1C005B5B5BEA1DC0EA1FE0A2EA1E70EA1C38133C131C7F38FF
1F80A21117809614>107 D<EAFF80A21203B3EAFFFEA20F177E9614>I<EAFB8EEAFFDF38
3CF380A2EA38E3AA38FEFBE013791310808F14>I<EAFC78EAFDFEEA1F86EA1E07121CAA
38FF8FE0A21310808F14>I<EAFCF8EAFDFEEA1F07EA1E03001C1380EB01C0A6EB038000
1E1300EA1F0EEA1DFCEA1CF890C7FCA6B47EA21218808F14>112
D<EAFE1FEB7F80EA0EE3380F810090C7FCA2120EA8EAFFF0A211107F8F14>114
D<EA0FD8EA3FF8EA603812C0A2EAF000EA7F80EA3FF0EA07F8EA001CEA600612E012F0EA
F81CEAFFF8EACFE00F107E8F14>I<1206120EA4EA7FFC12FFEA0E00A8130EA3131CEA07
F8EA01F00F157F9414>I<EAFC3FA2EA1C07AB131F380FFFE0EA03E71310808F14>I<EA7E
3FA2EA1E3CEA0E78EA07705B12036C5A12037FEA0770EA0E781338487E38FE3F80A21110
7F8F14>120 D<38FE3F80A2381C0E005BA2120E5BA212071330A2EA0370A25B1201A25B
A3485A12730077C7FC127E123C11187F8F14>I E /Fp 7 106 df<B512FEA217027D891E
>0 D<6C13C0EAC00138600300EA30066C5A6C5A6C5A6C5A6C5AA2EA0360EA0630487E48
7E487E487E38C001C0EA800012127A911E>2 D<EA0780EA1FE0EA3FF0EA7FF8A2EAFFFC
A6EA7FF8A2EA3FF0EA1FE0EA07800E107E9013>15 D<1406141E1478EB01E0EB0780EB1E
001378EA01E0EA0780001EC7FC127812E01278121EEA0780EA01E0EA0078131EEB0780EB
01E0EB0078141E14061400A6387FFFFCB512FE171F7D971E>20 D<EAC018EAE01CEA3807
381E03C0380700E03801C0383800F01EEB380790380E01C090380780F0903801E03C9038
00700E91383C0780EC1C039138700E00903801C03890380780F090380E01C0D93807C7FC
EBF01E3801C038380700E0381E03C0D83807C8FCEAE01CEAC018211A7E9526>29
D<13801201EA0300A31206A25AA35AA35AA25AA35AA21260A37EA27EA37EA37EA27EA3EA
0180120009267D9B0F>104 D<12C0A21260A37EA27EA37EA37EA27EA3EA0180A2EA0300
A31206A25AA35AA35AA25AA35AA209267E9B0F>I E /Fq 61 123
df<13401380EA0300120212065A121C12181238A25AA412F0A91270A47EA21218121C12
0C7E12021203EA008013400A257C9B11>40 D<7E12401230121012187E120E12061207A2
EA0380A413C0A91380A4EA0700A21206120E120C5A1210123012405A0A257E9B11>I<13
07ADB612F8A3D80007C7FCAD1D1D7E9722>43 D<127012F812FCA3127C1204A21208A212
1012201240060D7D850C>I<EAFFF0A30C0380890F>I<127812FCA4127806067D850C>I<
EA07F0EA1E3C487EEA380EEA780FA300F81380AB00781300A2EA380EEA3C1E6C5AEA07F0
11187E9716>48 D<EA0180120712FFA21207B2EAFFFCA20E187C9716>I<EA0FF0EA3FFC
EA787EEAFC1F1480130FA21278EA001F1400131E5B5B13705BEA0180380301801206120C
EA1003383FFF005AB5FCA211187E9716>I<EA07F0EA1FFCEA383E127C7FA3EA383FEA00
3E133C5BEA07F0EA003C133E7F1480127812FCA2140012F8EA703EEA3FFCEA0FF011187E
9716>I<1306130E131E133E137E13DEEA019E131E12031206120C12181230126012C0B5
12E0A238001E00A53801FFE0A213187F9716>I<EA3006EA3FFC5B5B5B13800030C7FCA3
EA37F0EA381CEA201EC67EA21480127012F8A31400EA601FEA383EEA1FF8EA07E011187E
9716>I<EA01F8EA07FEEA0F06EA1E0F485AA2EA780E90C7FC12F8EAF9F0EAFA1CEAFC0E
130F00F81380A41278A21400123CEA1E1EEA0FFCEA03F011187E9716>I<1260387FFFC0
A214801400EAE00612C05B5BC65A5B13E0A212015B1203A31207A66C5A12197E9816>I<
EA07F0EA1FFCEA381EEA30071270A21278EA7E06EA3F8C13F86C5AEA0FFC487EEA38FFEA
703F38E01F8013071303A21400EA7007EA3C0EEA1FFCEA07F011187E9716>I<EA07E0EA
1FF8EA3C1CEA781E7F12F8A21480A4EA781F1238EA1C2FEA07CFEA000F14001238EA7C1F
131EEA783CEA3078EA1FF0EA0FC011187E9716>I<127812FCA412781200A5127812FCA4
127806117D900C>I<007FB512F0B612F8A2C9FCA7B612F8A26C14F01D0D7E8F22>61
D<1303497EA2497EA3EB1BE0A2EB3BF01331A2EB60F8A2EBE0FCEBC07CA248487EEBFFFE
487FEB001F4814800006130FA248EB07C039FF803FFCA21E1A7F9921>65
D<B512F014FC380F807E141F1580A51500143E5CEBFFF8EB803E80EC0F8015C0A5158014
1FEC3F00B512FE14F01A1A7E991F>I<90381FE0209038FFFCE03803F80F3807C003381F
800190C7FC123E007E1460127C00FC1400A8007C1460127E123E6C14C07F3907C0038039
03F80F003800FFFCEB1FF01B1A7E9920>I<B512F014FC380F803FEC0F80EC07C0EC03E0
A2EC01F0A215F8A815F0A2140315E0EC07C0EC0F80EC3F00B512FC14F01D1A7E9922>I<
B512FEA2380F803E140E1406140780EB8183A21480138313FFA213831381A2EC8180EB80
01EC0300A35C5C143EB512FEA2191A7E991D>I<B512FCA2380F803C141C140C140E1406
A2EB81861480A2138313FFA213831381A3EB8000A6EAFFFCA2171A7E991C>I<EAFFF8A2
EA0F80B3A4EAFFF8A20D1A7E9911>73 D<39FFF80FF8A2390F800380EC0700140C5C5C14
E0EB81C0EB83801387138FEB9FC0EBB3E0EBE3F013C1EB80F8147C80A280EC0F80EC07C0
A239FFF81FFCA21E1A7E9923>75 D<EAFFFCA2EA0F80AE140CA3141CA21438147814F8B5
FCA2161A7E991B>I<B46CEB0FF86D131F000F1580D80DE01337A3D80CF01367A2017813
C7A290383C0187A290381E0307A3EB0F06A2EB078CA2EB03D8A2EB01F0A33AFFC0E07FF8
A2251A7E992A>I<B512E014F8380F807E80801580A51500143E5CEBFFF80180C7FCAAEA
FFF8A2191A7E991E>80 D<B512C014F8380F807E80801580A41500143E14FCEBFFE01381
EB80F01478147CA3147EA3150C143F39FFF81F18EC07F01E1A7E9921>82
D<3807F040381FFDC0EA3C0FEA7803EA700112F01300A26C1300B4FCEA7FF86CB4FC6C13
806C13C0000113E0EA000FEB03F01301EAC000A36C13E0EAF00138FC03C038EFFF803883
FE00141A7E9919>I<007FB51280A238781F07007013030060130100E014C000C01300A3
00001400AF3807FFFCA21A1A7E991F>I<39FFF007FCA2390F8000C0A2EBC00100071480
13E00003EB0300A23801F006A26C6C5AA2EBFC1CEB7C18A26D5AA26D5AA214E06D5AA26D
5AA26DC7FC1E1A7F9921>86 D<12FFA312E0B3AD12FFA308257D9B0C>91
D<12FFA31207B3AD12FFA30825809B0C>93 D<EA1FF0EA383CEA7C1E7FA21238120013FF
EA0FCFEA3E0F127C12F8A31317387C27E0EA1FC313117F9015>97
D<12FCA2123CA713FE383F8780383E01C0003C13E0EB00F0A214F8A514F0A2EB01E0003E
13C0383B07803830FE00151A7E9919>I<EA03FCEA0F0EEA1C1F123C1278130E00F8C7FC
A51278A2383C0180381C0300EA0F06EA03FC11117F9014>I<EB07E0A21301A7EA03F9EA
0F07EA1C03EA3C011278A212F8A51278A2123CEA1C03380F0DF8EA03F9151A7F9919>I<
EA03F0EA0E1C487EEA3C071278148012F8A2B5FC00F8C7FCA21278A2383C0180381C0300
EA0E06EA03FC11117F9014>I<13FEEA03C738078F80EA0F0FA2EB070090C7FCA3EAFFF0
A2000FC7FCADEA3FE0A2111A80990E>I<3807F1C0381C1EE0EA380E38780FC01400A4EA
380E6C5AEA37F00020C7FC1230A2EA3FFE381FFF8014C0EA700338E000E0A4387001C038
3C07803807FC0013197F9016>I<12FCA2123CA7133EEBC780EA3D03003E13C0A2123CAA
38FF0FF0A2141A7E9919>I<123C127EA4123C1200A412FCA2123CAD12FFA2081B7E9A0D>
I<13F0EA01F8A4EA00F01300A4EA03F8A2EA0078B0127012F8A213F0EA71E0EA3F800D22
839A0E>I<12FCA2123CA7EB1FC0A2EB0E005B5B13605BEA3FE07FEA3E78EA3C387F131E
7F7F38FF0FE0A2131A7E9917>I<12FCA2123CB3A412FFA2081A7E990D>I<39FC3E03E090
38C78C78393D039038003EEBE03CA2003C13C0AA39FF0FF0FFA220117E9025>I<EAFC3E
EBC780EA3D03003E13C0A2123CAA38FF0FF0A214117E9019>I<EA03F8EA0E0E383C0780
EA3803007813C0A200F813E0A6007813C0EA7C07003C1380380E0E00EA03F813117F9016
>I<EAFCFE38FF8780383E03C0383C01E014F0130014F8A514F0130114E0383E03C0383F
0780383CFE0090C7FCA5B4FCA215187E9019>I<3803F0C0EA0F0DEA1E07EA3C03127C12
7812F8A51278127C123CEA1C07EA0F0BEA03F3EA0003A5EB0FF0A214187F9017>I<EAF8
F0EAF938EA3A7CA2123C13381300A9EAFF80A20E117E9012>I<EA1FD8EA2078EA401812
C0A2EAF000EAFF80EA7FE0EA3FF0EA07F8EA003CEAC00CA212E01308EAF830EACFE00E11
7F9011>I<1206A4120EA2121EEA3FF012FFEA1E00A81318A5EA0F30EA03E00D187F9711>
I<38FC0FC0A2EA3C03AB1307A2381E0BF0EA07F314117E9019>I<38FF03F0A2383E01C0
001E1380EA1F03000F1300A2EA0786A2EA03CCA213FC6C5AA26C5AA2136014117F9017>
I<39FF1FE1F8A2393C078060001E14C014C0EB0DC1000F1480EB1DE1390798E30014F3EB
B0733803F076147EEBE03E0001133CA23800C0181D117F9020>I<38FF07F0A2001E1300
EA0F06EA078CEA03DC13F86C5A1200487E13BCEA031E1207EA0E0F381C078038FE0FF0A2
14117F9017>I<38FF03F0A2383E01C0001E1380EA1F03000F1300A2EA0786A2EA03CCA2
13FC6C5AA26C5AA21360A2EA70C012F812F95B0077C7FC123C14187F9017>I<EA7FFFEA
781EEA703EEA603C137813F0120113E0EA03C0EA0780EA0F831303121EEA3C06127CEA78
1EEAFFFE10117F9014>I E /Fr 172[17 3[24 1[28 3[11 1[24
2[24 22 1[20 14[17 17 17 48[{TeXBase1Encoding ReEncodeFont}11
33.333332 /Times-Italic rf /Fs 82[11 51[17 1[24 17 17
9 13 11 17 17 17 17 26 9 17 1[9 17 17 11 15 17 15 17
15 11[24 20 18 2[18 2[30 9[22 22 24 8[17 2[17 17 17 17
17 17 9 8 1[8 41[18 2[{TeXBase1Encoding ReEncodeFont}43
33.333332 /Times-Roman rf /Ft 11 58 df<120412081210123012201260A2124012
C0AA12401260A212201230121012081204061A7D920C>40 D<1280124012201230121012
18A21208120CAA12081218A212101230122012401280061A7F920C>I<13C0A9B51280A2
3800C000A911147E8F17>43 D<1218127812981218AC12FF08107D8F0F>49
D<121FEA6180EA40C0EA806012C01200A213C0EA0180EA030012065AEA10201220EA7FC0
12FF0B107F8F0F>I<121FEA2180EA60C0A212001380EA0100121FEA00801340136012C0
A2EA8040EA6080EA1F000B107F8F0F>I<EA0180A212031205120D121912111221124112
C1EAFFE0EA0180A4EA0FE00B107F8F0F>I<EA20C0EA3F80EA2E001220A3122FEA3080EA
2040EA0060A312C0EA80C0EA6180EA1F000B107F8F0F>I<EA0780EA1840EA30C0126013
005A12CFEAF080EAE040EAC060A31240EA60C0EA3080EA1F000B107F8F0F>I<121FEA31
80EA60C0A3EA3180EA3F00120EEA3380EA61C0EAC060A31340EA60C0EA1F000B107F8F0F
>56 D<121FEA3180EA60C0EAC0401360A3EA40E01221EA1E6012001340EA60C01380EA63
00121E0B107F8F0F>I E /Fu 39 124 df<3801C0013803200338063007380C181E381C
17ECEB2018003813301460A2EB40C038304180EB43001386EA190C120E38001838EB3064
EB60C213C11482EA0183EA030338060704120C1218140812300060131038C00320388001
C0181E7A9B1F>37 D<EAFF80A2130009037D880E>45 D<1230127812F0126005047C830C
>I<1308131813301370EA01F0EA0E70EA00E0A4EA01C0A4EA0380A4EA0700A45AEAFFE0
0D187C9714>49 D<13031480EB0700A3130EA35BA213185BA25B5B13C6EA018EEA030EEA
021C120412081210EA7FB838807F8038003800A25BA41360111F7F9714>52
D<38030180EBFF0013FCEA022048C7FCA45AEA0BE0EA0C181208EA001CA412201270485A
EA8030EA40705BEA2180001EC7FC11187C9714>I<131EEB6180EA0180EA03031206000E
C7FC5A12181238EA39F0EA7218EA740CEA780E127012F012E0A35BA2EA60385BEA30C0EA
1F8011187C9714>I<3809C0403817E080EA1FF1383C1F00EA3002EA6006EA4004EA800C
EA000813185BA21370136013E05B1201A25B1203A348C7FC7E12187B9714>I<133EEBC1
80EA0100000213C01206A2380E0180380703001386EA03CCEA01F07FEA067C487EEA181E
EA30071260A2EAC006A2EA400CEA6018EA3070EA0FC012187D9714>I<137CEA0186EA07
03120E000C1380121C1238A3130714005BEA1817EA0C27EA07CEEA000E130C131C1318EA
E0305BEA80C0EAC380003EC7FC11187C9714>I<3803FFF83800700E1406140713E0A438
01C00E141C143814703803FFE0EB80781438141CEA0700A4000E1338A2147014E0381C03
C0B51200181A7D991B>66 D<3803FFF83800701C1406140713E0A43801C00EA2141C1438
38038060EBFF80EB8000A248C7FCA4120EA45AB47E181A7D991A>80
D<383FFFFC38381C0C00201304124013381280A338007000A45BA4485AA4485AA41207EA
FFF8161A79991B>84 D<EA03CCEA0E2EEA181C123812301270EAE038A4EAC072A3EA60F2
EA6134EA1E180F107C8F14>97 D<127E120EA35AA45AA2EA3BC0EA3C301278EA7018A3EA
E038A4EAC070136013E0EA60C0EA6380EA1E000D1A7C9912>I<EA01E0EA0618120CEA18
38EA3010EA7000126012E0A413081310EA6020EA30C0EA1F000D107C8F12>I<EB1F8013
03A3EB0700A4130EA2EA03CEEA0E2EEA181C123812301270485AA4EAC072A3EA60F2EA61
34EA1E18111A7C9914>I<EA01E0EA0E18EA1C08123812701310EAFFE0EAE000A41308EA
60101320EA30C0EA1F000D107C8F12>I<1307EB0980131BEB3B00133813301370A4EA07
FFEA00E0A5485AA5485AA490C7FC5AA21206126612E412CC1270112181990C>I<13F338
038B8038060700120E120C121CEA380EA4EA301CA3EA183C5BEA07B8EA0038A25B1260EA
E0E0EAC1C0007FC7FC11177E8F12>I<EA1F801203A348C7FCA4120EA2137CEA0F86EA1E
07A2121CA2EA380EA35B00701380A21338EB3900EAE019EA600E111A7E9914>I<120312
0712061200A61238124C124E128E129CA2121C1238A212701272A212E212E41264123808
197C980C>I<130C130E130C1300A613E0EA013812021204A3EA0070A413E0A4EA01C0A4
EA03801263EAE70012CE12780F2081980C>I<EA1F801203A3EA0700A4120EA2130E1313
EA1C2713431380EA1F00123CEA3F80EA39C0EA38E0EA70E2A313E4EAE064EA6038101A7E
9912>I<121F1207A3120EA4121CA41238A41270A412E4A412E81230081A7D990A>I<3830
7C1E38598663399E0783801403129CA239380E0700A3140ED8701C1340A2141C158038E0
380C39601807001A107C8F1F>I<EA307CEA5986EA9E07A2129CA2EA380EA35B00701380
A21338EB3900EAE019EA600E11107C8F16>I<EA01F0EA0618EA0C0CEA180E1230127012
6012E0A2130C131C13181330EA6060EA30C0EA1F000F107C8F14>I<EA030F380590C0EA
09E0EBC060A3380380E0A4380701C0148013031400EA0E8E137890C7FCA25AA4B4FC1317
808F14>I<EA30F0EA5D18EA9E38EA9C181300A25AA45AA45A12600D107C8F10>114
D<EA03E0EA04301208EA18701360EA1C00EA1F8013C0EA0FE01200136012E0A2EA80C0EA
4180EA3E000C107D8F10>I<1206120EA45AA2EAFFC0EA1C005AA45AA412E1A312E212E4
12380A177C960D>I<EA3806EA4C07EA4E0E128E129CA2EA1C1C1238A3EA7039A3EA3079
EA389AEA0F0C10107C8F15>I<EA3818EA4C1C124EEA8E0C129CA2EA1C081238A2131012
70A21320EA3040EA18C0EA0F000E107C8F12>I<38380C10384C0E38EA4E1C008E131812
9CA2381C38101238A338707020A2144012303818B880380F0F0015107C8F19>I<EA078F
3808D180EA10F3EA20E1EBE000A2EA01C0A4EA0382A212C3EAE784EAC588EA78F011107E
8F12>I<EA3806EA4C07EA4E0E128E129CA2EA1C1C1238A3EA7038A3EA3078EA38F0EA0F
7012001360EA60E0EAE1C0EAC180EA4700123C10177C8F13>I<EA0382EA07C4EA0FFCEA
10081310EA00201340EA0180EA03001204EA08081210EA2018EA7FF0EA43E0EA81C00F10
7E8F10>I<B5128011017D8914>I E /Fv 81 125 df<EBFE7C380381C6380603CE000E13
84001C1380A6B512F0381C0380AE38FF8FF0171A809916>11 D<13FEEA038138060180EA
0E03381C010090C7FCA5B51280EA1C03AE38FF8FF0141A809915>I<EBFF80EA0383EA06
03120E121CA6B5FCEA1C03AE38FF9FF0141A809915>I<90387E1F803901C17040390703
C0600006EB80E0000E14401500A5B612E0380E0380AE397F8FE3FC1E1A809920>I<EA60
C0EAF1E0EAF9F0EA68D0EA0810A3EA1020A2EA2040EA40800C0B7F9913>34
D<5AA2EA0FC0EA1930EA21081261EAC104130C131C1308EAE10012611279EA3F80EA1FE0
EA07F0EA01781338131CEA410C12E1A212811308EA4118EA2110EA1160EA0F80EA0100A2
0E1E7E9B13>36 D<000E130300315B3830800E3860E01C38E05FECEB40185CA25C5CA238
608180D83083C7FCEA3103EA0E0638000C0790381818801540EB30309038607020A213C0
EA0180A2EA03001206EC30404813184814800008EB07001B1E7E9B20>I<126012F012F8
12681208A31210A212201240050B7D990B>39 D<1380EA010012025A120C120812185AA3
5AA412E0AA1260A47EA37E1208120C12047E7EEA008009267D9B0F>I<7E12407E7E1218
1208120C7EA37EA41380AA1300A41206A35A1208121812105A5A5A09267E9B0F>I<130C
ACB61280A2D8000CC7FCAC191A7E951E>43 D<126012F0A212701210A31220A21240A204
0B7D830B>I<EAFFC0A20A0280880D>I<126012F0A2126004047D830B>I<1304130C1318
A31330A31360A313C0A3EA0180A3EA0300A31206A35AA35AA35AA35AA35AA20E257E9B13
>I<EA07E0EA1C38EA381CEA300CEA700EEA6006A2EAE007AAEA6006A2EA700EEA300CEA
381CEA1C38EA07E010187F9713>I<12035AB4FC1207B3A2EA7FF80D187D9713>I<EA0F80
EA1060EA2030EA4038EA803CEAC01C12E01240EA003C1338A21370136013C0EA01801300
1202EA040412081210EA3008EA3FF8127F12FF0E187E9713>I<EA07E0EA1838EA201CEA
601EEA700EEA201E1200131CA213381370EA07E0EA0038131C130E130FA212E0A212C0EA
400EEA601CEA1838EA07E010187F9713>I<1318A21338137813F813B8EA01381202A212
041208121812101220124012C0B5FCEA0038A6EA03FF10187F9713>I<EA3018EA3FF013
E01380EA2000A5EA2FC0EA3060EA2030EA00381318131CA2124012E0A2EA8018EA403813
30EA30E0EA0F800E187E9713>I<EA01F8EA0704EA0C06EA180E123013001270126012E0
EAE3E0EAE418EAE80CEAF00EEAE0061307A31260A2EA7006EA300EEA180CEA0C38EA07E0
10187F9713>I<1240EA7FFF13FEA2EA4004EA80081310A2EA00201340A2138012011300
5AA25A1206A2120EA5120410197E9813>I<EA07E0EA1818EA300CEA20061260A21270EA
780CEA3E18EA1F30EA07C0EA03E0EA0CF8EA307CEA601E130FEAC0071303A3EA6002EA20
04EA1818EA07E010187F9713>I<EA07E0EA1C30EA3018EA700CEA600EEAE006A21307A3
1260EA700FEA3017EA1827EA07C7EA00071306130E130C12701318EA6030EA3060EA0F80
10187F9713>I<126012F0A212601200A8126012F0A2126004107D8F0B>I<126012F0A212
601200A8126012F0A212701210A31220A21240A204177D8F0B>I<B61280A2C9FCA6B612
80A2190A7E8D1E>61 D<EA1FC0EA2060EA4030EAC03812E0A21200137013E0EA01801300
5A1202A6C7FCA41206120FA212060D1A7E9912>63 D<130CA3131EA2132F1327A2EB4380
A3EB81C0A200017F1300A248B47E38020070A2487FA3487FA2003C131EB4EBFFC01A1A7F
991D>65 D<B51280380E00E014701438143CA514781470EB01E0380FFFC0380E00F01478
143C141C141EA4141C143C147814F0B512C0171A7F991B>I<EB3F023801C0C63803002E
000E131E48130E14065A007813021270A200F01300A600701302A21278003813047E1408
7E000313303801C0C038003F00171A7E991C>I<B57E380E00E01470808080A280A21580
A81500A25C140E5CA2147814E0B51280191A7F991D>I<B512F8380E003814181408140C
1404A3EB0100A35BEA0FFFEA0E037FA3EB0002A314061404A2140C143CB512FC171A7F99
1A>I<B512F8380E003814181408140C1404A3EB0100A35BEA0FFFEA0E037FA390C7FCA8
EAFFE0161A7F9919>I<EB3F023801C0C63803002E000E131E48130E14065A0078130212
70A200F090C7FCA5903801FFC03970000E00A2127812387EA27E000313163801C0663800
3F821A1A7E991E>I<39FFE1FFC0390E001C00AB380FFFFC380E001CAC39FFE1FFC01A1A
7F991D>I<EAFF80EA1C00B3A6EAFF80091A7E990E>I<EA0FFEEA0070B3124012E0A2EA40
E0EA61C0EA1F000F1A7E9914>I<39FFE01FC0390E000F00140C14085C5C5C495A0102C7
FC5B130C131C132E1347EB8380EA0F03380E01C06D7EA2147080A280141E141F39FFE07F
C01A1A7F991E>I<EAFFE0000EC7FCB01408A3141814101430147014F0B5FC151A7F9918>
I<B414FF000F14F0A2390B800170A23809C002A33808E004A2EB7008A3EB3810A3EB1C20
A2EB0E40A3EB0780A2EB0300121C39FF8307FF201A7F9923>I<00FEEB7FC0000FEB0E00
1404EA0B80EA09C0A2EA08E01370A21338131CA2130E1307EB0384A2EB01C4EB00E4A214
74143CA2141C140C121C38FF80041A1A7F991D>I<137F3801C1C038070070000E7F487F
003C131E0038130E0078130F00707F00F01480A80078EB0F00A20038130E003C131E001C
131C6C5B6C5B3801C1C0D8007FC7FC191A7E991E>I<B51280380E01E0EB007014781438
143CA4143814781470EB01E0380FFF80000EC7FCABEAFFE0161A7F991A>I<B5FC380E01
C0EB0070147880A55C1470EB01C0D80FFFC7FC380E0380EB00C0801470A31478A3154014
3CEC1C8039FFE00F001A1A7F991C>82 D<EA0FC2EA1836EA200EEA600612C01302A3EAE0
001270127EEA3FE0EA1FF8EA03FCEA007E130E130713031280A3EAC0021306EAE004EAD8
18EA87E0101A7E9915>I<007FB5FC38701C0700401301A200C0148000801300A3000014
00B13803FFE0191A7F991C>I<39FFE07FC0390E000E001404B200065B12076C5B6C6C5A
3800E0C0013FC7FC1A1A7F991D>I<3AFF81FF07F03A3C007801C0001CEC0080A36C9038
9C0100A33907010E02A33903830F04EB8207A2150C3901C40388A33900E801D0A3903870
00E0A301305B01201340241A7F9927>87 D<12FEA212C0B3AF12FEA207257D9B0B>91
D<EA2040A2EA4080A2EA8100A3EAE1C0EAF1E0A2EA60C00B0B7A9913>I<12FEA21206B3
AF12FEA20725809B0B>I<EA1FC0EA38707FEA101C1200A2EA03FCEA1E1C1238127012E0
1480A2133CEA705F381F8F0011107F8F13>97 D<12FC121CA913FCEA1D07381E0380381C
01C0130014E0A6EB01C01480381E0300EA1906EA10F8131A809915>I<EA07F8EA1C1C12
38EA700813005AA612701304EA3808EA1C18EA07E00E107F8F11>I<133F1307A9EA03E7
EA0C17EA180F487E127012E0A6126012706C5AEA1C373807C7E0131A7F9915>I<EA07C0
EA1C30EA30181270EA600C12E0EAFFFCEAE000A41260EA7004EA3808EA1C18EA07E00E10
7F8F11>I<EA01F0EA0718EA0E38EA1C101300A6EAFFC0EA1C00AEEAFF800D1A80990C>I<
EA0FCF3818718038303000EA7038A4EA30306C5AEA2FC00060C7FCA21270EA3FF013FC6C
7EEA600FEAC003A4EA6006EA381CEA07E011187F8F13>I<12FC121CA9137CEA1D87381E
0380A2121CAB38FF9FF0141A809915>I<1218123CA212181200A612FC121CAE12FF081A
80990A>I<EA0180EA03C0A2EA0180C7FCA6EA0FC01201B21241EAE180EAE300127E0A21
82990C>I<12FC121CA9EB1FC0EB0F00130C5B13205B13E0121DEA1E70EA1C7813387F13
1E7F148038FF9FE0131A809914>I<12FC121CB3A6EAFF80091A80990A>I<38FC7C1F391D
8E6380391E0781C0A2001C1301AB39FF9FE7F81D107F8F20>I<EAFC7CEA1D87381E0380
A2121CAB38FF9FF01410808F15>I<EA07E0EA1C38EA300CEA700EEA6006EAE007A6EA60
06EA700EEA381CEA1C38EA07E010107F8F13>I<EAFCFCEA1D07381E0380381C01C0A2EB
00E0A6EB01C01480381E0300EA1D06EA1CF890C7FCA6B47E1317808F15>I<EA03E1EA0C
13EA180BEA300FEA700712E0A61270A26C5AEA1C37EA07C7EA0007A6EB3FE013177F8F14
>I<EAFC78EA1D9CEA1E1C1308EA1C00ABEAFF800E10808F0F>I<EA1F20EA60E0EA402012
C0A2EAF000127FEA3FC0EA1FE0EA00F0EA8070133012C01320EAF040EA8F800C107F8F0F
>I<1208A41218A21238EAFFC0EA3800A81320A41218EA1C40EA07800B177F960F>I<38FC
1F80EA1C03AB1307120CEA0E0B3803F3F01410808F15>I<38FF0F80383C0700EA1C0613
04A26C5AA26C5AA3EA03A0A2EA01C0A36C5A11107F8F14>I<39FE7F1F8039381C070000
3C1306381C0C04130E380E16081317A238072310149013A33803C1A014E0380180C0A319
107F8F1C>I<38FE3F80383C1E00EA1C086C5AEA0F306C5A6C5A12017F1203EA0270487E
1208EA181CEA381E38FC3FC012107F8F14>I<38FF0F80383C0700EA1C061304A26C5AA2
6C5AA3EA03A0A2EA01C0A36C5AA248C7FCA212E112E212E4127811177F8F14>I<EAFFF8
EAE07012C0EA80E0EA81C0A2EA0380EA0700A2EA0E04121CA2EA380812701338EAFFF80E
107F8F11>I<B512C01201808913>I<B712F82501808926>I E /Fw
82[17 51[25 25 36 25 28 17 19 22 1[28 25 28 41 14 28
1[14 28 25 17 22 28 22 28 25 8[36 50 1[36 33 28 36 39
30 39 36 47 33 1[25 19 39 39 30 33 36 36 33 36 6[17 2[25
25 25 25 25 25 25 2[12 43[28 2[{TeXBase1Encoding ReEncodeFont}56
50.000000 /Times-Bold rf /Fx 82[12 55[21 10 19 12 2[21
21 31 8 2[8 21 21 1[21 21 19 21 21 32[38 17[10 46[{
TeXBase1Encoding ReEncodeFont}19 37.500000 /Helvetica-Oblique
rf /Fy 134[19 2[19 21 10 19 12 1[21 21 21 31 8 2[8 21
21 10 21 1[19 21 21 11[27 1[25 27 1[25 1[27 31 21 1[19
10 27 4[27 25 25 7[21 1[21 1[21 21 21 21 21 21 3[10 44[{
TeXBase1Encoding ReEncodeFont}41 37.500000 /Helvetica
rf /Fz 134[25 1[36 3[25 17 1[28 28 28 41 11 2[11 28 2[28
28 1[28 13[30 33 2[33 2[41 5[39 3[36 33 19[14 46[{
TeXBase1Encoding ReEncodeFont}22 50.000000 /Helvetica
rf /FA 135[42 1[42 46 25 1[29 1[46 46 46 66 3[21 46 46
25 42 46 42 1[42 16[50 6[21 73[{TeXBase1Encoding ReEncodeFont}19
75.000000 /Helvetica-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 81 55 a FA(Impr)o(o)o(ving)18 b(Inde)o(x)h(P)n(erf)o(ormance)f
(thr)o(ough)g(Pref)o(etc)o(hing)171 189 y Fz(Shimin)c(Chen)76
230 y Fy(School)c(of)h(Computer)f(Science)90 272 y(Car)q(negie)g
(Mellon)g(Univ)o(ersity)139 313 y(Pittsb)o(urgh,)h(P)l(A)f(15213)134
363 y Fx(chensm@cs)o(.cmu.edu)774 189 y Fz(Phillip)k(B)o(.)g(Gibbons)
650 230 y Fy(Inf)o(or)q(mation)d(Sciences)e(Research)g(Center)830
272 y(Bell)i(Laborator)q(ies)791 313 y(Murra)o(y)g(Hill,)g(NJ)f(07974)
698 363 y Fx(gibbons@research.bell\255labs)o(.com)1462
189 y Fz(T)-6 b(odd)13 b(C)o(.)g(Mo)o(wr)q(y)1391 230
y Fy(School)c(of)i(Computer)f(Science)1404 272 y(Car)q(negie)g(Mellon)g
(Univ)o(ersity)1453 313 y(Pittsb)o(urgh,)i(P)l(A)d(15213)1483
363 y Fx(tcm@cs)o(.cmu.edu)-76 513 y Fw(ABSTRA)m(CT)-76
571 y Fv(This)22 b(pap)q(er)g(prop)q(oses)g(and)g(ev)n(aluates)g
Fu(Pr)n(efetching)d(B)794 555 y Ft(+)819 571 y Fu(-T)m(r)n(e)n(es)-76
612 y Fv(\(pB)-13 596 y Ft(+)13 612 y Fv(-T)m(rees\),)g(whic)o(h)g(use)
g(prefetc)o(hing)i(to)d(accelerate)i(t)o(w)o(o)e(im-)-76
654 y(p)q(ortan)o(t)d(op)q(erations)h(on)f(B)334 638
y Ft(+)359 654 y Fv(-T)m(ree)f(indices:)21 b(searc)o(hes)15
b(and)g(range)-76 695 y(scans.)j(T)m(o)12 b(accelerate)j(searc)o(hes,)e
(pB)481 679 y Ft(+)507 695 y Fv(-T)m(rees)f(use)i(prefetc)o(hing)g(to)
-76 736 y(e\013ectiv)o(ely)j(create)e(wider)h(no)q(des)g(than)f(the)g
(natural)i(data)e(trans-)-76 778 y(fer)f(size:)19 b(e.g.,)13
b(eigh)o(t)h(vs.)g(one)g(cac)o(he)g(lines)i(or)d(disk)i(pages.)20
b(These)-76 819 y(wider)c(no)q(des)f(reduce)h(the)f(heigh)o(t)h(of)f
(the)g(B)591 803 y Ft(+)616 819 y Fv(-T)m(ree,)g(thereb)o(y)g(de-)-76
861 y(creasing)j(the)f(n)o(um)o(b)q(er)g(of)f(exp)q(ensiv)o(e)j(misses)
e(when)g(going)g(from)-76 902 y(paren)o(t)g(to)f(c)o(hild)h(without)g
(signi\014can)o(tl)q(y)i(increasing)f(the)e(cost)g(of)-76
943 y(fetc)o(hing)e(a)e(giv)o(en)i(no)q(de.)k(Our)13
b(results)g(sho)o(w)g(that)g(this)g(tec)o(hnique)-76
985 y(sp)q(eeds)f(up)g(searc)o(h)g(and)g(up)q(date)h(times)f(b)o(y)f(a)
h(factor)f(of)g(1.2{1.5)g(for)-76 1026 y(main-memory)k(B)196
1010 y Ft(+)222 1026 y Fv(-T)m(rees.)j(In)13 b(addition,)j(it)e(outp)q
(erforms)g(and)h(is)-76 1068 y(complemen)o(tary)20 b(to)e(\\Cac)o
(he-Sensitiv)o(e)j(B)576 1052 y Ft(+)601 1068 y Fv(-T)m(rees.")32
b(T)m(o)18 b(accel-)-76 1109 y(erate)d(range)h(scans,)g(pB)291
1093 y Ft(+)317 1109 y Fv(-T)m(rees)f(pro)o(vide)i(arra)o(ys)f(of)f(p)q
(oin)o(ters)h(to)-76 1150 y(their)g(leaf)f(no)q(des.)23
b(These)15 b(allo)o(w)h(the)f(pB)549 1135 y Ft(+)575
1150 y Fv(-T)m(ree)f(to)g(prefetc)o(h)h(ar-)-76 1192
y(bitrarily)20 b(far)d(ahead,)i(ev)o(en)f(for)f(nonclustered)i
(indices,)h(thereb)o(y)-76 1233 y(hiding)15 b(the)f(normally)h(exp)q
(ensiv)o(e)g(cac)o(he)e(misses)h(asso)q(ciated)h(with)-76
1275 y(tra)o(v)o(ersing)20 b(the)e(lea)o(v)o(es)i(within)g(the)e
(range.)33 b(Our)19 b(results)g(sho)o(w)-76 1316 y(that)d(this)h(tec)o
(hnique)h(yields)g(o)o(v)o(er)e(a)g Fu(sixfold)i Fv(sp)q(eedup)f(on)g
(range)-76 1357 y(scans)c(of)f(1000+)g(k)o(eys.)17 b(Although)d(our)e
(exp)q(erimen)o(tal)j(ev)n(aluation)-76 1399 y(fo)q(cuses)f(on)f(main)h
(memory)g(databases,)g(the)f(tec)o(hniques)i(that)f(w)o(e)-76
1440 y(prop)q(ose)g(are)f(also)h(applicabl)q(e)i(to)d(hiding)i(disk)f
(latency)m(.)-76 1545 y Fw(1.)50 b(INTR)o(ODUCTION)-38
1594 y Fv(As)10 b(the)h(gap)g(b)q(et)o(w)o(een)g(pro)q(cessor)h(sp)q
(eed)g(and)f(b)q(oth)g(DRAM)h(and)-76 1636 y(disk)j(sp)q(eeds)g(con)o
(tin)o(ues)g(to)f(gro)o(w)g(exp)q(onen)o(tially)n(,)i(it)e(is)g(b)q
(ecoming)-76 1677 y(increasingl)q(y)21 b(imp)q(ortan)o(t)g(to)d(mak)o
(e)h(e\013ectiv)o(e)h(use)f(of)g(cac)o(hes)g(to)-76 1719
y(ac)o(hiev)o(e)11 b(high)g(p)q(erformance)f(on)g(database)h(managemen)
o(t)f(systems.)-76 1760 y(Cac)o(hing)j(exists)g(at)e(m)o(ultiple)k(lev)
o(els)e(within)g(mo)q(dern)g(memory)f(hi-)-76 1801 y(erarc)o(hies:)25
b(t)o(ypically)19 b(t)o(w)o(o)c(or)h(more)g(lev)o(els)i(of)e(SRAM)h
(serv)o(es)f(as)-76 1843 y(cac)o(hes)c(for)f(the)g(con)o(ten)o(ts)h(of)
f(main)h(memory)f(in)h(DRAM,)f(whic)o(h)h(in)-76 1884
y(turn)h(is)g(a)g(cac)o(he)g(for)f(the)g(con)o(ten)o(ts)i(on)e(disk.)18
b(While)d(database)f(re-)-76 1926 y(searc)o(hers)e(ha)o(v)o(e)f
(historicall)q(y)j(fo)q(cused)d(on)g(the)g(imp)q(ortance)i(of)d(this)
-76 1967 y(latter)19 b(form)f(of)g(cac)o(hing)h(\(also)g(kno)o(wn)g(as)
g(the)f(\\bu\013er)h(p)q(o)q(ol"\),)-76 2008 y(recen)o(t)e(studies)g
(ha)o(v)o(e)g(demonstrated)h(that)e(ev)o(en)h(on)f(traditional)-76
2050 y(disk-orien)o(ted)i(databases,)e(roughly)g(50\045)f(or)g(more)g
(of)f(execution)-76 2091 y(time)j(is)f(often)g(w)o(asted)g(due)h(to)e
(SRAM)i(cac)o(he)f(misses)h([1,)f(2,)g(10,)-76 2133 y(18].)35
b(F)m(or)19 b(main-memory)h(databases,)i(it)d(is)h(ev)o(en)f(clearer)h
(that)-76 2174 y(SRAM)15 b(cac)o(he)f(p)q(erformance)h(is)g(crucial)h
([19].)k(Hence)14 b(sev)o(eral)i(re-)-76 2216 y(cen)o(t)g(studies)i(ha)
o(v)o(e)f(revisited)h(core)e(database)i(algorithms)g(in)f(an)-76
2257 y(e\013ort)d(to)f(mak)o(e)g(them)g(more)g(cac)o(he)h(friendly)g
([5,)f(17,)g(19,)f(20,)h(21].)-76 2436 y Fs(Permission)f(to)g(make)f
(digital)h(or)g(hard)g(copies)f(of)h(all)g(or)g(part)g(of)g(this)g
(work)g(for)-76 2474 y(personal)e(or)g(classroom)g(use)g(is)h(granted)f
(without)g(fee)h(provided)d(that)j(copies)f(are)-76 2511
y(not)f(made)f(or)h(distrib)o(uted)f(for)h(pro\002t)h(or)e(commercial)g
(adv)o(antage)f(and)i(that)g(copies)-76 2548 y(bear)e(this)i(notice)e
(and)g(the)h(full)g(citation)g(on)f(the)h(\002rst)g(page.)j(T)m(o)e
(copy)d(otherwise,)i(to)-76 2586 y(republish,)f(to)g(post)g(on)g
(servers)f(or)i(to)f(redistrib)o(ute)g(to)h(lists,)g(requires)f(prior)g
(speci\002c)-76 2623 y(permission)g(and/or)g(a)h(fee.)-76
2661 y Fr(A)o(CM)h(SIGMOD)e(2001)g Fs(May)g(21\25524,)g(Santa)h
(Barbara,)g(California,)g(USA)-76 2698 y(Copyright)f(2001)g(A)o(CM)g
(1\25558113\255332\2554)o(/01/05)e(...)p Fv($)p Fs(5.00.)p
1020 518 997 2 v 1095 1013 a @beginspecial 22 @llx 14
@lly 360 @urx 262 @ury 1152 @rhi @setspecial
%%BeginDocument: graphs/orig_perf.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
360 72 S9
[] 24.000000 SL
360 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
345.6 72 S9
[] 24.000000 SL
345.6 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
345.6 72 S9
[] 21.600000 SL
345.6 251.6 M9
D9
345.6 72 S9
[] 24.000000 SL
345.6 234 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
345.6 72 S9
[] 21.600000 SL
345.6 233.6 M9
gsave 0.900000 G9
D9
grestore
345.6 72 S9
[] 24.000000 SL
345.6 216 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
345.6 72 S9
[] 21.600000 SL
345.6 215.6 M9
gsave 0.450000 G9
D9
grestore
345.6 72 S9
[] 24.000000 SL
345.6 198 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
139.765 72 S9
[] 24.000000 SL
139.765 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
139.765 72 S9
[] 21.600000 SL
139.765 251.6 M9
D9
139.765 72 S9
[] 24.000000 SL
139.765 134.91 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
139.765 72 S9
[] 21.600000 SL
139.765 134.51 M9
gsave 0.900000 G9
D9
grestore
139.765 72 S9
[] 24.000000 SL
139.765 95.544 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
139.765 72 S9
[] 21.600000 SL
139.765 95.144 M9
gsave 0.450000 G9
D9
grestore
190.588 72 S9
[] 24.000000 SL
190.588 229.014 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
190.588 72 S9
[] 21.600000 SL
190.588 228.614 M9
D9
190.588 72 S9
[] 24.000000 SL
190.588 135.23 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
190.588 72 S9
[] 21.600000 SL
190.588 134.83 M9
gsave 0.900000 G9
D9
grestore
190.588 72 S9
[] 24.000000 SL
190.588 94.5629 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
190.588 72 S9
[] 21.600000 SL
190.588 94.1629 M9
gsave 0.450000 G9
D9
grestore
292.235 72 S9
[] 24.000000 SL
292.235 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
292.235 72 S9
[] 21.600000 SL
292.235 251.6 M9
D9
292.235 72 S9
[] 24.000000 SL
292.235 100.044 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
292.235 72 S9
[] 21.600000 SL
292.235 99.644 M9
gsave 0.900000 G9
D9
grestore
292.235 72 S9
[] 24.000000 SL
292.235 90.252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
292.235 72 S9
[] 21.600000 SL
292.235 89.852 M9
gsave 0.450000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 108 TXC
12 /Helvetica-Bold SetTxt
(20) 0 66 104.1 TXR
12 /Helvetica SetTxt
(|) -90 72 144 TXC
12 /Helvetica-Bold SetTxt
(40) 0 66 140.1 TXR
12 /Helvetica SetTxt
(|) -90 72 180 TXC
12 /Helvetica-Bold SetTxt
(60) 0 66 176.1 TXR
12 /Helvetica SetTxt
(|) -90 72 216 TXC
12 /Helvetica-Bold SetTxt
(80) 0 66 212.1 TXR
12 /Helvetica SetTxt
(|) -90 72 252 TXC
12 /Helvetica-Bold SetTxt
(100) 0 66 248.1 TXR
13 /Helvetica-Bold SetTxt
( ) 0 216 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 360 43.25 TXR
( Normalized Execution Time) 90 35.4 252 TXR
16 /Helvetica-Bold SetTxt
( dcache stalls) 0 353.506 241.6 TXL
( other stalls) 0 353.506 223.6 TXL
( busy) 0 353.506 205.6 TXL
(B+) 0 139.765 58.32 TXC
(CSB+) 0 190.588 58.32 TXC
20 /Helvetica-Bold SetTxt
() 0 165.176 47.376 TXC
16 /Helvetica-Bold SetTxt
(B+) 0 292.235 58.32 TXC
20 /Helvetica-Bold SetTxt
() 0 292.235 47.376 TXC
16 /Helvetica-Bold SetTxt
() 0 353.506 224.8 TXL
() 0 353.506 206.8 TXL
() 0 353.506 188.8 TXL
() 0 139.765 41.52 TXC
() 0 190.588 41.52 TXC
20 /Helvetica-Bold SetTxt
(search) 0 165.176 26.376 TXC
16 /Helvetica-Bold SetTxt
() 0 292.235 41.52 TXC
20 /Helvetica-Bold SetTxt
(scan) 0 292.235 26.376 TXC
() 0 165.176 5.376 TXC
() 0 292.235 5.376 TXC
7 SetSym
showpage
end
%%EndDocument
 @endspecial 1020 1015 V 1020 1049 a Fq(Figure)16 b(1:)25
b(Execution)16 b(time)h(breakdo)o(wn)g(for)g(index)f(op-)1020
1090 y(erations)f(\(B+)h(=)f(B)1366 1074 y Ft(+)1392
1090 y Fq(-T)l(rees,)h(CSB+)f(=)g(CSB)1811 1074 y Ft(+)1836
1090 y Fq(-T)l(rees\).)1020 1231 y Fw(1.1)50 b(Cache)12
b(P)o(erf)o(ormance)h(of)f(B)1651 1215 y Ft(+)1677 1231
y Fw(\255T)l(r)o(ee)h(Indices)1057 1281 y Fv(Index)d(structures)g(are)f
(used)h(extensiv)o(ely)h(throughout)g(database)1020 1322
y(systems,)f(and)f(they)g(are)g(often)g(implemen)o(ted)i(as)e(B)1768
1306 y Ft(+)1793 1322 y Fv(-T)m(rees.)15 b(While)1020
1364 y(database)e(managemen)o(t)g(systems)f(p)q(erform)g(sev)o(eral)h
(di\013eren)o(t)g(op-)1020 1405 y(erations)h(that)e(in)o(v)o(olv)o(e)i
(B)1402 1389 y Ft(+)1428 1405 y Fv(-T)m(ree)d(indices)j(\(e.g.,)e
(selections,)i(joins,)1020 1447 y(etc.\),)f(these)h(higher-lev)o(el)j
(op)q(erations)f(can)e(b)q(e)g(decomp)q(osed)h(in)o(to)1020
1488 y(t)o(w)o(o)e(k)o(ey)h(lo)o(w)o(er-lev)o(el)h(access)f(patterns:)
19 b(\(i\))13 b Fu(se)n(ar)n(ching)h Fv(for)g(a)f(par-)1020
1529 y(ticular)f(k)o(ey)m(,)f(whic)o(h)g(in)o(v)o(olv)o(es)h
(descending)h(from)d(the)g(ro)q(ot)g(to)g(a)h(leaf)1020
1571 y(no)q(de)k(using)g(binary)h(searc)o(h)e(within)h(a)f(giv)o(en)h
(no)q(de)g(to)f(determine)1020 1612 y(whic)o(h)d(c)o(hild)h(p)q(oin)o
(ter)f(to)f(follo)o(w;)i(and)e(\(ii\))h Fu(sc)n(anning)f
Fv(some)h(p)q(ortion)1020 1654 y(of)i(the)g(index,)h(whic)o(h)g(in)o(v)
o(olv)o(es)h(tra)o(v)o(ersing)f(the)f(lea)o(v)o(es)h(through)g(a)1020
1695 y(link)o(ed-lis)q(t)21 b(structure)d(for)g(a)h(non-clustered)h
(index.)34 b(\(F)m(or)18 b(clus-)1020 1736 y(tered)13
b(indices,)h(one)f(can)g(directly)h(scan)f(the)f(database)i(table)f
(after)1020 1778 y(searc)o(hing)g(for)f(the)g(starting)g(k)o(ey)m(.\))
17 b(While)d(searc)o(h)e(time)g(is)g(the)g(k)o(ey)1020
1819 y(factor)g(in)h(single)i(v)n(alue)e(selections)h(and)f(nested)g
(lo)q(op)h(index)g(joins,)1020 1861 y(scan)g(time)f(is)h(the)f(dominan)
o(t)i(e\013ect)e(in)h(range)f(selections.)1057 1902 y(T)m(o)c
(illustrate)i(the)e(need)h(for)e(impro)o(ving)k(the)d(cac)o(he)g(p)q
(erformance)1020 1943 y(of)j(b)q(oth)h(searc)o(h)g(and)g(scan)f(on)h(B)
1507 1928 y Ft(+)1533 1943 y Fv(-T)m(ree)e(indices,)j(Figure)g(1)e(sho)
o(ws)1020 1985 y(a)j(breakdo)o(wn)i(of)e(their)g(sim)o(ulated)j(p)q
(erformance)e(on)f(a)g(state-of-)1020 2026 y(the-art)h(mac)o(hine.)27
b(F)m(or)16 b(the)g(sak)o(e)g(of)g(concreteness,)h(w)o(e)e(pattern)1020
2068 y(the)e(memory)h(subsystem)g(after)f(the)g(Compaq)h(ES40)f
([8]|details)1020 2109 y(are)f(pro)o(vided)i(later)f(in)g(Section)h(4.)
i(The)c(\\searc)o(h")i(exp)q(erimen)o(t)f(in)1020 2151
y(Figure)j(1)f(lo)q(oks)h(up)g(100,000)f(random)h(k)o(eys)f(in)h(a)f
(main-memory)1020 2192 y(B)1047 2176 y Ft(+)1073 2192
y Fv(-T)m(ree)d(index)j(after)e(it)h(has)g(b)q(een)g(bulkloaded)j(with)
d(10)f(million)1020 2233 y(k)o(eys.)k(The)11 b(\\scan")h(exp)q(erimen)o
(t)h(p)q(erforms)f(100)f(range)h(scan)g(op)q(er-)1020
2275 y(ations)g(starting)h(at)e(random)h(k)o(eys,)g(eac)o(h)f(of)g
(whic)o(h)h(scans)g(through)1020 2316 y(1)18 b(million)j
Fp(h)p Fo(key)p Fv(,)11 b Fo(tupleID)p Fp(i)f Fv(pairs)19
b(retrieving)h(the)e Fo(tupleID)d Fv(v)n(al-)1020 2358
y(ues.)24 b(\(The)15 b(results)h(for)f(shorter)h(range)g(scans|e.g.,)g
(1000)g(tuple)1020 2399 y(scans|are)g(similar\).)22 b(The)14
b(B)1478 2383 y Ft(+)1504 2399 y Fv(-T)m(ree)f(no)q(de)j(size)e(is)h
(equal)h(to)e(the)1020 2440 y(cac)o(he)i(line)h(size,)f(whic)o(h)h(is)f
(64)f(b)o(ytes.)25 b(Eac)o(h)16 b(bar)f(in)i(Figure)f(1)g(is)1020
2482 y(brok)o(en)i(do)o(wn)f(in)o(to)g(three)g(categories:)25
b(busy)18 b(time,)g(data)f(cac)o(he)1020 2523 y(stalls,)i(and)e(other)g
(stalls.)29 b(Both)17 b(searc)o(h)g(and)g(scan)g(accesses)h(on)1020
2565 y(B)1047 2549 y Ft(+)1073 2565 y Fv(-T)m(ree)e(indices)k(\(the)d
(bars)h(lab)q(eled)h(\\)p Fq(B+)p Fv("|w)o(e)g(will)g(explain)1020
2606 y(the)13 b(\\)p Fq(CSB+)p Fv(")f(bar)h(later\))g(sp)q(end)h(a)e
(signi\014can)o(t)j(fraction)e(of)f(their)1020 2647 y(time|65\045)21
b(and)g(84\045,)g(resp)q(ectiv)o(ely|sta)q(ll)q(ed)i(on)d(data)h(cac)o
(he)1020 2689 y(misses.)d(Hence)13 b(there)g(is)h(considerable)i(ro)q
(om)d(for)g(impro)o(v)o(emen)o(t.)p eop
%%Page: 2 2
2 1 bop -76 -34 a Fw(1.2)50 b(Pr)o(e)o(vious)21 b(W)l(ork)g(on)f(Impr)o
(oving)g(the)g(Cache)36 14 y(P)o(erf)o(ormance)13 b(of)f(Indices)-38
64 y Fv(In)17 b(an)h(e\013ort)f(to)h(impro)o(v)o(e)g(the)g(cac)o(he)f
(p)q(erformance)i(of)e(index)-76 105 y Fu(se)n(ar)n(ches)j
Fv(for)e(main-memory)i(databases,)i(Rao)d(and)h(Ross)f(pro-)-76
146 y(p)q(osed)d(t)o(w)o(o)e(new)g(t)o(yp)q(es)h(of)g(index)h
(structures:)21 b(\\Cac)o(he-Sensitiv)o(e)-76 188 y(Searc)o(h)e(T)m
(rees")f(\(CSS-T)m(rees\))g([19])g(and)h(\\Cac)o(he-Sensitiv)o(e)i(B)
882 172 y Ft(+)908 188 y Fv(-)-76 229 y(T)m(rees")16
b(\(CSB)139 213 y Ft(+)165 229 y Fv(-T)m(rees\))f([20].)26
b(The)17 b(premise)g(of)f(their)h(studies)h(is)-76 271
y(the)d(con)o(v)o(en)o(tional)i(wisdom)e(that)f(the)g(optimal)i(tree)f
(no)q(de)g(size)g(is)-76 312 y(equal)d(to)f(the)h Fu(natur)n(al)d(data)
i(tr)n(ansfer)f(size)p Fv(,)g(whic)o(h)i(corresp)q(onds)g(to)-76
353 y(the)h Fu(disk)g(p)n(age)f(size)i Fv(for)f(disk-residen)o(t)i
(databases)g(and)e(the)g Fu(c)n(ache)-76 395 y(line)i(size)j
Fv(for)e(main-memory)h(databases.)27 b(Because)17 b(cac)o(he)g(lines)
-76 436 y(are)11 b(roughly)h(t)o(w)o(o)e(orders)h(of)f(magnitude)i
(smaller)g(than)f(disk)g(pages)-76 478 y(\(e.g.,)16 b(64)h(b)o(ytes)g
(vs.)f(4)h(Kb)o(ytes\),)g(the)f(resulting)j(index)f(trees)e(for)-76
519 y(main-memory)f(databases)f(are)f(considerably)j(deep)q(er.)i
(Since)c(the)-76 560 y(n)o(um)o(b)q(er)19 b(of)e(exp)q(ensiv)o(e)i(cac)
o(he)f(misses)h(is)f(roughly)h(prop)q(ortional)-76 602
y(to)14 b(the)g(heigh)o(t)h(of)e(the)h(tree,)g(it)g(w)o(ould)h(b)q(e)f
(desirable)i(to)e(someho)o(w)-76 643 y(increase)i(the)f(e\013ectiv)o(e)
g(fanout)g(\(also)h(called)g(the)e Fu(br)n(anching)f(fac-)-76
685 y(tor)p Fv(\))f(of)g(the)h(tree,)f(without)h(pa)o(ying)h(the)f
(cost)g(of)f(additional)k(cac)o(he)-76 726 y(misses)e(that)f(this)h(w)o
(ould)g(normally)h(imply)m(.)-38 767 y(T)m(o)c(accomplish)k(this,)e
(Rao)g(and)g(Ross)g([19,)f(20])g(exploit)j(the)d(fol-)-76
809 y(lo)o(wing)j(insigh)o(t:)20 b(b)o(y)14 b(restricting)i(the)d(data)
h(la)o(y)o(out)h(suc)o(h)f(that)g(the)-76 850 y(lo)q(cation)j(of)e(eac)
o(h)g(c)o(hild)i(no)q(de)e(can)h(b)q(e)f(directly)i(computed)e(from)-76
892 y(the)d(paren)o(t)g(no)q(de's)g(address)g(\(or)g(a)f(single)j(p)q
(oin)o(ter\),)e(w)o(e)f(can)h(elim-)-76 933 y(inate)h(all)g(\(or)f
(nearly)h(all\))g(of)e(the)h(c)o(hild)i(p)q(oin)o(ters.)k(Assuming)13
b(that)-76 974 y(k)o(eys)h(and)f(p)q(oin)o(ters)i(are)e(the)g(same)g
(size,)g(this)h(e\013ectiv)o(ely)h(doubles)-76 1016 y(the)f(fanout)g
(of)g(cac)o(he-line-sized)j(tree)d(no)q(des,)g(th)o(us)g(reducing)i
(the)-76 1057 y(heigh)o(t)j(of)d(the)i(tree)f(and)g(the)h(n)o(um)o(b)q
(er)g(of)e(cac)o(he)i(misses.)30 b(CSS-)-76 1099 y(T)m(rees)16
b([19])g(eliminate)i(all)g(c)o(hild)g(p)q(oin)o(ters,)g(but)f(do)g(not)
f(supp)q(ort)-76 1140 y(incremen)o(tal)c(up)q(dates)f(and)f(therefore)g
(are)f(only)i(suitable)h(for)d(read-)-76 1182 y(only)k(en)o(vironmen)o
(ts.)19 b(CSB)334 1166 y Ft(+)359 1182 y Fv(-T)m(rees)12
b([20])f(do)h(supp)q(ort)h(up)q(dates)g(b)o(y)-76 1223
y(retaining)18 b(a)e(single)h(p)q(oin)o(ter)g(p)q(er)f(non-leaf)h(no)q
(de)f(that)g(p)q(oin)o(ts)h(to)-76 1264 y(a)h(con)o(tiguous)h(blo)q(c)o
(k)g(of)e(its)h(c)o(hildren.)33 b(Although)19 b(CSB)793
1248 y Ft(+)819 1264 y Fv(-T)m(rees)-76 1306 y(outp)q(erform)14
b(B)152 1290 y Ft(+)177 1306 y Fv(-T)m(rees)e(on)h(searc)o(hes,)h(they)
f(still)h(p)q(erform)f(signi\014-)-76 1347 y(can)o(tly)f(w)o(orse)e(on)
h(up)q(dates)g([20])f(due)h(to)f(the)h(o)o(v)o(erheads)g(of)g(k)o
(eeping)-76 1389 y(all)j(c)o(hildren)h(for)e(a)g(giv)o(en)h(no)q(de)g
(in)f(sequen)o(tial)i(order)f(within)g(con-)-76 1430
y(tiguous)h(memory)m(,)e(esp)q(ecially)j(during)e(no)q(de)g(splits.)-38
1471 y(Returning)k(to)f(Figure)g(1,)g(the)g(bar)g(lab)q(eled)i(\\)p
Fq(CSB+)p Fv(")e(sho)o(ws)-76 1513 y(the)h(execution)i(time)e(of)g(CSB)
389 1497 y Ft(+)414 1513 y Fv(-T)m(rees)g(\(normalized)i(to)d(that)h
(of)-76 1554 y(B)-49 1538 y Ft(+)-23 1554 y Fv(-T)m(rees\))12
b(for)g(the)h(same)f(index)i(searc)o(h)f(exp)q(erimen)o(t.)19
b(As)12 b(w)o(e)g(see)-76 1596 y(in)18 b(Figure)f(1,)h(CSB)221
1580 y Ft(+)246 1596 y Fv(-T)m(rees)e(eliminate)k(20\045)c(of)h(the)g
(data)g(cac)o(he)-76 1637 y(stall)f(time,)f(th)o(us)g(resulting)h(in)g
(an)e(o)o(v)o(erall)j(sp)q(eedup)714 1621 y Ft(1)747
1637 y Fv(of)d(1.15)g(for)-76 1678 y(searc)o(hes.)20
b(While)15 b(this)g(is)f(a)g(signi\014can)o(t)i(impro)o(v)o(emen)o(t,)f
(o)o(v)o(er)e(half)-76 1720 y(of)k(the)f(remaining)j(execution)g(time)e
(is)g(still)i(b)q(eing)f(lost)f(to)g(data)-76 1761 y(cac)o(he)c
(misses;)g(hence)h(there)e(is)h(signi\014can)o(t)i(ro)q(om)e(for)f
(further)h(im-)-76 1803 y(pro)o(v)o(emen)o(t.)k(In)12
b(addition,)i(these)e(searc)o(h-orien)o(ted)h(optimizations)-76
1844 y(pro)o(vide)g(no)f(b)q(ene\014t)g(to)f Fu(sc)n(an)h
Fv(accesses,)g(whic)o(h)g(are)g(su\013ering)h(ev)o(en)-76
1885 y(more)g(from)g(data)g(cac)o(he)h(misses.)-76 1963
y Fw(1.3)50 b(Our)12 b(A)o(ppr)o(oach:)17 b(Pr)o(efetching)12
b(B)674 1947 y Ft(+)699 1963 y Fw(\255T)l(r)o(ees)-38
2012 y Fv(Mo)q(dern)d(micropro)q(cessors)i(pro)o(vide)g(the)d(follo)o
(wing)j(mec)o(hanisms)-76 2054 y(for)i(coping)h(with)f(large)h(cac)o
(he)f(miss)g(latencies.)19 b(First,)13 b(they)g(allo)o(w)-76
2095 y(m)o(ultiple)i(outstanding)g(cac)o(he)e(misses)g(to)g(b)q(e)f(in)
i(\015igh)o(t)f(sim)o(ultane-)-76 2137 y(ously)h(for)e(the)g(sak)o(e)h
(of)f(exploiting)j(parallelis)q(m)g(within)e(the)g(mem-)-76
2178 y(ory)h(hierarc)o(h)o(y)m(.)20 b(F)m(or)13 b(example,)i(the)e
(Compaq)h(ES40)g([8])f(supp)q(orts)-76 2219 y(32)h(in-\015igh)o(t)i
(loads,)g(32)e(in-\015igh)o(t)i(stores,)e(and)h(eigh)o(t)g(outstanding)
-76 2261 y(o\013-c)o(hip)i(cac)o(he)f(misses)h(p)q(er)e(pro)q(cessor,)i
(and)f(its)g(crossbar)h(mem-)-76 2302 y(ory)e(system)h(supp)q(orts)g
(24)f(outstanding)i(cac)o(he)f(misses.)23 b(Second,)-76
2344 y(to)14 b(help)i(applications)i(tak)o(e)c(full)h(adv)n(an)o(tage)h
(of)e(this)h(paralleli)q(sm,)-76 2385 y(they)10 b(also)g(pro)o(vide)h
Fu(pr)n(efetch)e Fv(instructions)j(whic)o(h)e(enable)h(soft)o(w)o(are)
-76 2427 y(to)16 b(mo)o(v)o(e)g(data)h(in)o(to)f(the)g(cac)o(he)h(b)q
(efore)f(it)g(is)h(needed.)27 b(Previous)-76 2468 y(studies)20
b(\(whic)o(h)e(did)i(not)e(target)g(databases)h(sp)q(eci\014call)q(y\))
i(ha)o(v)o(e)-76 2509 y(demonstrated)c(that)e(for)g(b)q(oth)h(arra)o
(y-based)h(and)f(p)q(oin)o(ter-based)-76 2551 y(program)j(co)q(des,)h
(prefetc)o(hing)f(can)f(successfully)j Fu(hide)e Fv(m)o(uc)o(h)f(of)-76
2592 y(the)10 b(p)q(erformance)g(impact)h(of)e(cac)o(he)h(misses)h(b)o
(y)f(o)o(v)o(erlapping)i(them)p -76 2621 399 2 v -76
2645 a Fn(1)-59 2657 y Fm(Throughout)d(this)h(pap)q(er,)g(w)o(e)f(rep)q
(ort)g(p)q(erformance)f(gains)i(as)f Fl(sp)n(e)n(e)n(dup)p
Fm(:)k(i.e.)-76 2689 y(the)e(original)h(time)f(divided)j(b)o(y)e(the)f
(impro)o(v)o(ed)h(time.)1020 -34 y Fv(with)f(computation)i(and)f(other)
f(misses)h([13,)f(16].)16 b(Hence)11 b(for)g(mo)q(d-)1020
7 y(ern)i(mac)o(hines,)g(it)g(is)g(not)f(the)h Fu(numb)n(er)i
Fv(of)d(cac)o(he)h(misses)g(that)f(dic-)1020 48 y(tates)k(p)q
(erformance,)h(but)g(rather)f(the)g(amoun)o(t)h(of)f
Fu(exp)n(ose)n(d)e(miss)1020 90 y(latency)20 b Fv(that)f(cannot)h(b)q
(e)f(successfully)j(hidden)f(through)f(tec)o(h-)1020
131 y(niques)15 b(suc)o(h)e(as)g(prefetc)o(hing.)1057
173 y(In)e(this)h(pap)q(er,)f(w)o(e)g(prop)q(ose)h(and)f(study)h
Fu(Pr)n(efetching)d(B)1890 157 y Ft(+)1915 173 y Fu(-T)m(r)n(e)n(es)
1020 214 y Fv(\(pB)1083 198 y Ft(+)1109 214 y Fv(-T)m(rees\),)g(whic)o
(h)h(use)f(prefetc)o(hing)i(to)e(limit)i(the)e(exp)q(osed)h(miss)1020
256 y(latency)m(.)22 b(T)m(ree-based)15 b(indices)h(suc)o(h)f(as)f(B)
1654 240 y Ft(+)1680 256 y Fv(-T)m(rees)g(p)q(ose)h(a)f(ma)r(jor)1020
297 y(c)o(hallenge)f(for)d(prefetc)o(hing)i(searc)o(h)f(and)g(scan)g
(accesses)g(since)g(b)q(oth)1020 338 y(access)h(patterns)g(su\013er)g
(from)g(the)f Fu(p)n(ointer-chasi)o(ng)e(pr)n(oblem)h
Fv([13]:)1020 380 y(The)i(data)g(dep)q(endencies)j(through)e(p)q(oin)o
(ters)h(mak)o(e)e(it)g(di\016cult)i(to)1020 421 y(prefetc)o(h)g
(su\016cien)o(tly)i(far)e(ahead)h(to)f(limit)i(the)e(exp)q(osed)h(miss)
g(la-)1020 463 y(tency)m(.)26 b(F)m(or)16 b(index)i Fu(se)n(ar)n(ches)p
Fv(,)c(pB)1534 447 y Ft(+)1560 463 y Fv(-T)m(rees)h(reduce)i(this)g
(problem)1020 504 y(b)o(y)e(ha)o(ving)i(wider)e(no)q(des)h(than)f(the)g
(natural)h(data)g(transfer)f(size,)1020 545 y(e.g.,)f(eigh)o(t)i(vs.)e
(one)h(cac)o(he)g(lines)i(\(or)d(disk)i(pages\).)23 b(These)14
b(wider)1020 587 y(no)q(des)h(reduce)g(the)f(heigh)o(t)h(of)f(the)g
(tree,)f(thereb)o(y)i(decreasing)h(the)1020 628 y(n)o(um)o(b)q(er)11
b(of)e(exp)q(ensiv)o(e)j(misses)e(when)g(going)h(from)f(paren)o(t)g(to)
g(c)o(hild.)1020 670 y(The)j(k)o(ey)h(observ)n(ation)h(is)e(that)h(b)o
(y)f(using)i(prefetc)o(hing,)f(the)f(wider)1020 711 y(no)q(des)h(come)e
(almost)i(for)e(free:)17 b(all)d(of)e(the)h(cac)o(he)g(lines)h(in)g(a)e
(wider)1020 752 y(no)q(de)17 b(can)g(b)q(e)g(fetc)o(hed)g(almost)g(as)f
(quic)o(kly)j(as)e(the)f(single)j(cac)o(he)1020 794 y(line)c(of)d(a)h
(traditional)j(no)q(de.)i(T)m(o)13 b(accelerate)h(index)g
Fu(sc)n(ans)p Fv(,)d(w)o(e)i(in-)1020 835 y(tro)q(duce)i(arra)o(ys)f
(of)g(p)q(oin)o(ters)h(to)f(the)g(B)1612 819 y Ft(+)1638
835 y Fv(-T)m(ree)f(leaf)h(no)q(des)h(whic)o(h)1020 877
y(allo)o(w)d(us)f(to)f(prefetc)o(h)h(arbitrarily)j(far)c(ahead,)i
(thereb)o(y)f(hiding)i(the)1020 918 y(normally)j(exp)q(ensiv)o(e)g(cac)
o(he)e(misses)h(asso)q(ciated)g(with)g(tra)o(v)o(ersing)1020
959 y(the)f(lea)o(v)o(es)i(within)f(the)f(range.)21 b(Of)14
b(course,)h(indices)h(ma)o(y)e(b)q(e)h(fre-)1020 1001
y(quen)o(tly)c(up)q(dated.)18 b(P)o(erhaps)10 b(surprisingl)q(y)m(,)j
(w)o(e)c(demonstrate)i(that)1020 1042 y(insertion)i(and)e(deletion)i
(times)e(actually)h Fu(de)n(cr)n(e)n(ase)f Fv(with)g(our)g(tec)o(h-)
1020 1084 y(niques,)18 b(despite)f(an)o(y)g(o)o(v)o(erheads)g(asso)q
(ciated)h(with)e(main)o(taining)1020 1125 y(the)d(wider)h(no)q(des)g
(and)f(the)h(arra)o(ys)f(of)g(p)q(oin)o(ters.)1020 1200
y Fw(1.4)50 b(Contrib)o(utions)11 b(of)g(This)i(Paper)1057
1249 y Fv(This)18 b(pap)q(er)f(mak)o(es)g(the)g(follo)o(wing)h(con)o
(tributions.)31 b(First,)17 b(to)1020 1291 y(our)9 b(kno)o(wledge,)i
(this)f(is)f(the)g(\014rst)g(study)h(to)f(explore)h(ho)o(w)f(prefetc)o
(h-)1020 1332 y(ing)k(can)g(b)q(e)g(used)g(to)f(accelerate)i(searc)o(h)
f(and)g(scan)f(op)q(erations)j(on)1020 1374 y(B)1047
1358 y Ft(+)1073 1374 y Fv(-T)m(ree)9 b(indices.)18 b(W)m(e)11
b(prop)q(ose)g(and)g(study)g(the)g Fu(Pr)n(efetching)d(B)1977
1358 y Ft(+)2003 1374 y Fu(-)1020 1415 y(T)m(r)n(e)n(e)13
b Fv(\(pB)1168 1399 y Ft(+)1194 1415 y Fv(-T)m(ree\).)18
b(Second,)c(w)o(e)g(demonstrate)g(that)g(con)o(trary)g(to)1020
1456 y(con)o(v)o(en)o(tional)19 b(wisdom,)f(the)f(optimal)h(B)1640
1440 y Ft(+)1665 1456 y Fv(-T)m(ree)e(no)q(de)h(size)g(on)g(a)1020
1498 y(mo)q(dern)12 b(mac)o(hine)h(is)f(often)g Fu(wider)j
Fv(than)d(the)g(natural)h(data)f(trans-)1020 1539 y(fer)i(size,)h
(since)h(w)o(e)e(can)h(use)f(prefetc)o(hing)i(to)f(fetc)o(h)f(eac)o(h)h
(piece)g(of)1020 1581 y(the)j(no)q(de)g(sim)o(ultaneousl)q(y)m(.)34
b(Our)17 b(approac)o(h)i(o\013ers)g(the)e(follo)o(w-)1020
1622 y(ing)e(adv)n(an)o(tages)h(relativ)o(e)g(to)e(CSB)1545
1606 y Ft(+)1571 1622 y Fv(-T)m(rees:)k(\(i\))d(w)o(e)f(ac)o(hiev)o(e)h
(b)q(et-)1020 1663 y(ter)f(searc)o(h)h(p)q(erformance)h(b)q(ecause)f(w)
o(e)f(can)h(increase)h(the)f(fanout)1020 1705 y(b)o(y)j(more)g(than)g
(the)g(factor)f(of)h(t)o(w)o(o)f(that)h(CSB)1748 1689
y Ft(+)1773 1705 y Fv(-T)m(rees)f(pro)o(vide)1020 1746
y(\(e.g.,)h(b)o(y)h(a)f(factor)g(of)g(eigh)o(t\);)j(\(ii\))e(w)o(e)f
(ac)o(hiev)o(e)h(b)q(etter)g(\(rather)1020 1788 y(than)d(w)o(orse\))g
(p)q(erformance)h(on)f(up)q(dates)h(relativ)o(e)h(to)d(B)1878
1772 y Ft(+)1904 1788 y Fv(-T)m(rees,)1020 1829 y(b)q(ecause)j(our)g
(impro)o(v)o(ed)h(searc)o(h)e(sp)q(eed)i(more)e(than)h(o\013sets)g(an)o
(y)1020 1870 y(increase)e(in)e(no)q(de)h(split)h(cost)e(due)h(to)f
(wider)h(no)q(des;)g(and)g(\(iii\))h(w)o(e)1020 1912
y(do)c(not)g(require)h(fundamen)o(tal)h(c)o(hanges)f(to)f(the)g
(original)i(B)1904 1896 y Ft(+)1930 1912 y Fv(-T)m(ree)1020
1953 y(data)20 b(structures)g(or)f(algorithms.)37 b(In)19
b(addition,)k(w)o(e)c(\014nd)h(that)1020 1995 y(our)15
b(approac)o(h)h(is)f Fu(c)n(omplementary)g Fv(to)g(CSB)1691
1979 y Ft(+)1717 1995 y Fv(-T)m(rees.)21 b(Third,)16
b(w)o(e)1020 2036 y(demonstrate)11 b(ho)o(w)e(the)h(pB)1424
2020 y Ft(+)1449 2036 y Fv(-T)m(ree)f(can)h(e\013ectiv)o(ely)i(hide)e
(o)o(v)o(er)g(90\045)1020 2077 y(of)k(the)h(cac)o(he)f(miss)h(latency)h
(su\013ered)g(b)o(y)e(\(non-clustered\))j(index)1020
2119 y(scans,)g(th)o(us)g(resulting)h(in)f Fu(a)g(factor)e(of)h
(6.5{8.7)e(sp)n(e)n(e)n(dup)i Fv(o)o(v)o(er)g(a)1020
2160 y(range)h(of)g(scan)g(lengths.)30 b(While)18 b(our)f(exp)q(erimen)
o(tal)j(ev)n(aluation)1020 2202 y(is)12 b(p)q(erformed)h(within)g(the)f
(con)o(text)h(of)e(main)i(memory)f(databases,)1020 2243
y(w)o(e)h(b)q(eliev)o(e)h(that)g(our)f(tec)o(hniques)i(are)e(also)h
(applicable)i(to)d(hiding)1020 2284 y(disk)19 b(latency)m(,)i(in)d
(whic)o(h)h(case)g(the)f(prefetc)o(hes)h(will)g(mo)o(v)o(e)g(data)1020
2326 y(from)13 b(disk)h(in)o(to)g(main)g(memory)m(.)1057
2367 y(The)g(remainder)h(of)e(this)h(pap)q(er)g(is)g(organized)h(as)f
(follo)o(ws.)19 b(Sec-)1020 2409 y(tions)c(2)e(and)h(3)g(discuss)h(ho)o
(w)f(pB)1513 2393 y Ft(+)1539 2409 y Fv(-T)m(rees)f(use)h(prefetc)o
(hing)h(to)e(ac-)1020 2450 y(celerate)h(index)h(searc)o(hes)e(and)h
(scans,)g(resp)q(ectiv)o(ely)m(.)19 b(T)m(o)13 b(quan)o(tify)1020
2492 y(the)19 b(b)q(ene\014ts)g(of)g(these)g(tec)o(hniques,)i(w)o(e)d
(presen)o(t)i(exp)q(erimen)o(tal)1020 2533 y(results)d(in)f(Section)g
(4.)24 b(Finally)m(,)18 b(w)o(e)d(discuss)i(further)f(issues)g(and)1020
2574 y(conclude)f(in)f(Sections)g(5)f(and)h(6,)f(resp)q(ectiv)o(ely)m
(.)p eop
%%Page: 3 3
3 2 bop -76 -74 997 2 v -71 106 a @beginspecial 0 @llx
0 @lly 245 @urx 56 @ury 396 @rhi @setspecial
%%BeginDocument: graphs/cachemiss-2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 5205 -1000 l 5205 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
3453 870 m 3573 900 l 3453 930 l 3615 930 l 3615 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 3600 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3453 870 m 3573 900 l 3453 930 l 3453 900 l 3453 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1050 750 m 1800 750 l 1800 825 l 1050 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 70.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 675 m 2550 675 l 2550 750 l 1800 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2550 600 m 3300 600 l 3300 675 l 2550 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 170.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
n 3300 450 m 3300 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 220.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2550 450 m 2550 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 170.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1800 450 m 1800 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1050 450 m 1050 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 70.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
525 525 m
gs 1 -1 sc (node 0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1275 525 m
gs 1 -1 sc (node 1) col0 sh gr
/Times-Roman ff 150.00 scf sf
975 1050 m
gs 1 -1 sc (150) col0 sh gr
/Times-Roman ff 150.00 scf sf
1725 1050 m
gs 1 -1 sc (300) col0 sh gr
/Times-Roman ff 150.00 scf sf
2475 1050 m
gs 1 -1 sc (450) col0 sh gr
/Times-Roman ff 150.00 scf sf
3225 1050 m
gs 1 -1 sc (600) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 225 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
2025 525 m
gs 1 -1 sc (node 2) col0 sh gr
/Times-Roman ff 150.00 scf sf
2775 525 m
gs 1 -1 sc (node 3) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
3375 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 41 x Fv(\(a\))13 b(F)m(our)g(lev)o(els)h(of)f(one-cac)o
(he-line-wide)j(no)q(des.)-71 336 y @beginspecial 0 @llx
0 @lly 335 @urx 56 @ury 396 @rhi @setspecial
%%BeginDocument: graphs/cachemiss-1.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 6705 -1000 l 6705 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
4953 870 m 5073 900 l 4953 930 l 5115 930 l 5115 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 5100 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 4953 870 m 5073 900 l 4953 930 l 4953 900 l 4953 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1050 750 m 1800 750 l 1800 825 l 1050 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 70.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 675 m 2550 675 l 2550 750 l 1800 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2550 600 m 3300 600 l 3300 675 l 2550 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 170.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 525 m 4050 525 l 4050 600 l 3300 600 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 220.00 35.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4050 450 m 4800 450 l 4800 525 l 4050 525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 270.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
n 4800 300 m 4800 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 320.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3300 300 m 3300 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 220.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1800 300 m 1800 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
2400 375 m
gs 1 -1 sc (node 1) col0 sh gr
/Times-Roman ff 150.00 scf sf
3900 375 m
gs 1 -1 sc (node 2) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 225 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
900 375 m
gs 1 -1 sc (node 0) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
975 1050 m
gs 1 -1 sc (150) col0 sh gr
/Times-Roman ff 150.00 scf sf
1725 1050 m
gs 1 -1 sc (300) col0 sh gr
/Times-Roman ff 150.00 scf sf
2475 1050 m
gs 1 -1 sc (450) col0 sh gr
/Times-Roman ff 150.00 scf sf
3225 1050 m
gs 1 -1 sc (600) col0 sh gr
/Times-Roman ff 150.00 scf sf
3975 1050 m
gs 1 -1 sc (750) col0 sh gr
/Times-Roman ff 150.00 scf sf
4725 1050 m
gs 1 -1 sc (900) col0 sh gr
/Times-Roman ff 150.00 scf sf
4875 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 41 x(\(b\))d(Three)g(lev)o(els)h(of)f(t)o(w)o(o-cac)o
(he-lines-wide)i(no)q(des.)-71 566 y @beginspecial 0
@llx 0 @lly 213 @urx 56 @ury 396 @rhi @setspecial
%%BeginDocument: graphs/cachemiss-3.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 4680 -1000 l 4680 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
2928 870 m 3048 900 l 2928 930 l 3090 930 l 3090 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 3075 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 2928 870 m 3048 900 l 2928 930 l 2928 900 l 2928 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 375 750 m 1125 750 l 1125 825 l 375 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 25.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1125 675 m 1875 675 l 1875 750 l 1125 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 75.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1950 600 l 1950 675 l 1200 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1950 525 m 2700 525 l 2700 600 l 1950 600 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 130.00 35.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2025 450 m 2775 450 l 2775 525 l 2025 525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 135.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2775 300 m 2775 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 185.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1950 300 m 1950 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 130.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1125 300 m 1125 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 75.00 20.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
2175 375 m
gs 1 -1 sc (node 2) col0 sh gr
/Times-Roman ff 150.00 scf sf
1350 375 m
gs 1 -1 sc (node 1) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 225 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
525 375 m
gs 1 -1 sc (node 0) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1050 1050 m
gs 1 -1 sc (160) col0 sh gr
/Times-Roman ff 150.00 scf sf
1875 1050 m
gs 1 -1 sc (320) col0 sh gr
/Times-Roman ff 150.00 scf sf
2700 1050 m
gs 1 -1 sc (480) col0 sh gr
/Times-Roman ff 150.00 scf sf
2850 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 42 x(\(c\))d(P)o(art)h(\(b\))g(with)h(prefetc)o(hing.)p
-76 637 V -76 677 a Fq(Figure)i(2:)23 b(P)o(erformance)16
b(of)g(v)n(arious)h(B)620 661 y Ft(+)645 677 y Fq(-T)l(ree)g(searc)o
(hes)-76 718 y(where)c(a)g(cac)o(he)f(miss)h(to)g(memory)g(tak)o(es)h
(150)f(cycles,)g(and)-76 760 y(a)i(subsequen)o(t)g(access)h(can)e(b)q
(egin)g(10)h(cycles)f(later)i([8].)-76 859 y Fw(2.)50
b(PREFETCHING)14 b(INDEX)f(SEARCHES)-38 908 y Fv(Recall)18
b(that)f(during)h(a)f(B)356 892 y Ft(+)382 908 y Fv(-T)m(ree)f(searc)o
(h,)i(w)o(e)e(start)h(from)f(the)-76 950 y(ro)q(ot,)i(p)q(erforming)g
(a)e(binary)i(searc)o(h)g(in)f(eac)o(h)g(non-leaf)h(no)q(de)f(to)-76
991 y(determine)h(whic)o(h)e(c)o(hild)i(to)e(visit)i(next.)26
b(Up)q(on)17 b(reac)o(hing)h(a)e(leaf)-76 1033 y(no)q(de,)j(a)f
(\014nal)h(binary)g(searc)o(h)f(returns)g(the)g(k)o(ey)f(p)q(osition.)
33 b(Re-)-76 1074 y(garding)18 b(the)d(cac)o(he)h(b)q(eha)o(vior,)i(w)o
(e)d(exp)q(ect)i(at)e(least)h(one)g(exp)q(en-)-76 1115
y(siv)o(e)i(cac)o(he)g(miss)f(to)g(o)q(ccur)h(eac)o(h)f(time)h(w)o(e)e
(mo)o(v)o(e)h(do)o(wn)h(a)f(lev)o(el)-76 1157 y(in)h(the)e(tree.)28
b(Hence)16 b(the)h(n)o(um)o(b)q(er)g(of)g(cac)o(he)g(misses)g(is)g
(roughly)-76 1198 y(prop)q(ortional)d(to)d(the)h(heigh)o(t)g(of)f(the)g
(tree)g(\(min)o(us)h(an)o(y)g(no)q(des)g(that)-76 1240
y(migh)o(t)19 b(remain)f(in)h(the)f(cac)o(he)g(if)g(the)f(index)i(is)g
(reused\).)31 b(Th)o(us,)-76 1281 y(ha)o(ving)15 b(wider)g(tree)e(no)q
(des)i(for)e(the)h(sak)o(e)g(of)f(reducing)i(the)f(heigh)o(t)-76
1322 y(of)h(the)g(tree)g(migh)o(t)h(seem)f(lik)o(e)i(a)e(go)q(o)q(d)h
(idea.)24 b(Unfortunately)m(,)16 b(in)-76 1364 y(the)i(absence)h(of)f
(prefetc)o(hing)h(\(i.e.)f(when)g(all)h(cac)o(he)f(misses)h(are)-76
1405 y(equally)h(exp)q(ensiv)o(e)f(and)e(cannot)h(b)q(e)g(o)o(v)o
(erlapp)q(ed\),)i(making)e(the)-76 1447 y(tree)c(no)q(des)h(wider)g
(than)g(the)f Fu(natur)n(al)f(data)h(tr)n(ansfer)f(size)p
Fv(|i.e.)g(a)-76 1488 y(cac)o(he)h(line)h(for)e(main-memory)i
(databases)g(\(and)f(a)g(disk)g(page)g(for)-76 1529 y(disk-residen)o(t)
e(databases\)|actual)q(ly)h Fu(hurts)e Fv(p)q(erformance)g(rather)-76
1571 y(than)h(helps)g(it,)f(as)g(has)h(b)q(een)g(sho)o(wn)f(in)h
(previous)g(studies)h([19,)e(20].)-76 1612 y(The)k(reason)h(for)f(this)
h(is)f(that)h(the)f(n)o(um)o(b)q(er)h(of)e(additional)19
b(cac)o(he)-76 1654 y(misses)13 b(at)g(eac)o(h)f(no)q(de)i(more)e(than)
h(o\013sets)g(the)f(b)q(ene\014ts)i(of)e(reduc-)-76 1695
y(ing)i(the)f(n)o(um)o(b)q(er)h(of)f(lev)o(els)h(in)g(the)f(tree.)-38
1736 y(As)18 b(a)h(small)i(example,)g(consider)g(a)e(main-memory)h(B)
808 1721 y Ft(+)834 1736 y Fv(-T)m(ree)-76 1778 y(holding)c(1000)f(k)o
(eys)f(where)g(the)f(cac)o(he)i(line)g(size)f(is)h(64)e(b)o(ytes)i(and)
-76 1819 y(the)f Fo(key)p Fv(s,)d(c)o(hild)k(p)q(oin)o(ters,)g(and)f
Fo(tupleID)p Fv(s)c(are)k(all)g(four)g(b)o(ytes.)k(If)-76
1861 y(w)o(e)c(limit)j(the)e(no)q(de)g(size)h(to)f(one)g(cac)o(he)g
(line,)h(then)f(the)g(B)808 1845 y Ft(+)834 1861 y Fv(-T)m(ree)-76
1902 y(will)i(con)o(tain)f(at)f(least)g(four)g(lev)o(els.)25
b(Figure)16 b(2\(a\))f(illustrates)i(the)-76 1943 y(resulting)h(cac)o
(he)e(b)q(eha)o(vior,)i(where)e(the)g(four)f(cac)o(he)h(misses)h(cost)
-76 1985 y(a)g(total)g(of)f(600)h(cycles)g(on)g(our)g(Compaq)g
(ES40-based)h(mac)o(hine)-76 2026 y(mo)q(del)e([8].)k(If)14
b(w)o(e)g(double)i(the)f(no)q(de)g(width)g(to)g Fu(two)h
Fv(cac)o(he)f(lines,)-76 2068 y(the)j(heigh)o(t)g(of)f(the)h(B)261
2052 y Ft(+)286 2068 y Fv(-T)m(ree)f(can)h(b)q(e)f(reduced)i(to)e
Fu(thr)n(e)n(e)i Fv(lev)o(els.)-76 2109 y(Ho)o(w)o(ev)o(er,)c(as)g(w)o
(e)f(see)h(in)h(Figure)g(2\(b\),)f(this)h(w)o(ould)g(result)g(in)f
Fu(six)-76 2151 y Fv(cac)o(he)f(misses,)f(th)o(us)h(increasing)h
(execution)g(time)e(b)o(y)h(50\045.)-38 2192 y(With)19
b(prefetc)o(hing,)i(ho)o(w)o(ev)o(er,)f(it)f(b)q(ecomes)g(p)q(ossible)i
(to)e Fu(hide)-76 2233 y Fv(the)13 b(latency)g(of)f(an)o(y)h(miss)g
(whose)f(address)h(can)g(b)q(e)g(predicted)g(suf-)-76
2275 y(\014cien)o(tly)h(early)m(.)k(Returning)c(to)e(our)h(example,)g
(if)g(w)o(e)f(prefetc)o(h)g(the)-76 2316 y(second)19
b(half)g(of)f(eac)o(h)g(t)o(w)o(o-cac)o(he-line-wide)j(tree)d(no)q(de)h
(so)f(that)-76 2358 y(it)h(is)h(fetc)o(hed)f(in)h(parallel)h(with)f
(the)f(\014rst)g(half|as)h(illustrated)-76 2399 y(in)e(Figure)f
(2\(c\)|w)o(e)g(can)g(ac)o(hiev)o(e)h(signi\014can)o(tly)i
Fu(b)n(etter)f Fv(\(rather)-76 2440 y(than)12 b(w)o(orse\))g(p)q
(erformance)g(compared)g(with)g(the)g(one-cac)o(he-line-)-76
2482 y(wide)j(no)q(des)g(in)g(Figure)g(2\(a\).)20 b(The)14
b(exten)o(t)g(to)g(whic)o(h)h(the)f(misses)-76 2523 y(can)d(b)q(e)g(o)o
(v)o(erlapp)q(ed)i(dep)q(ends)g(up)q(on)f(the)e(implemen)o(tation)k
(details)-76 2565 y(of)h(the)f(memory)h(hierarc)o(h)o(y)m(,)h(but)f
(the)g(trend)g(is)h(to)o(w)o(ard)e(supp)q(ort-)-76 2606
y(ing)20 b(greater)e(paralleli)q(sm.)36 b(In)18 b(fact,)h(with)g(m)o
(ultiple)i(cac)o(he)e(and)-76 2647 y(memory)c(banks)h(and)f(crossbar)h
(in)o(terconnects,)g(it)f(is)g(p)q(ossible)i(to)-76 2689
y(completely)k(o)o(v)o(erlap)f(m)o(ultiple)g(cac)o(he)f(misses.)34
b(Figure)20 b(2\(c\))e(il-)1032 -42 y Fq(T)l(able)c(1:)20
b(T)l(erminology)14 b(used)h(throughout)f(this)g(pap)q(er.)p
1021 -29 995 2 v 1020 11 2 40 v 1067 -1 a Fk(V)m(ariable)p
1240 11 V 356 w(De\014nition)p 2014 11 V 1021 12 995
2 v 1021 19 V 1020 59 2 40 v 1118 47 a Fj(w)p 1240 59
V 120 w Fk(#)e(of)f(cac)o(he)f(lines)h(in)g(an)g(index)f(no)q(de)p
2014 59 V 1021 60 995 2 v 1020 99 2 40 v 1115 88 a Fj(m)p
1240 99 V 117 w Fk(#)i(of)f(c)o(hild)f(p)q(oin)o(ters)g(in)h(a)g
(one-line-wide)e(no)q(de)p 2014 99 V 1021 101 995 2 v
1020 140 2 40 v 1115 128 a Fj(N)p 1240 140 V 120 w Fk(#)j(of)f
Fi(h)p Fh(key)p Fk(,)f Fh(tupleID)p Fi(i)f Fk(pairs)i(in)g(an)g(index)p
2014 140 V 1021 142 995 2 v 1020 181 2 40 v 1122 169
a Fj(d)p 1240 181 V 123 w Fk(#)h(of)f(c)o(hild)f(p)q(oin)o(ters)g(in)h
(non-leaf)e(no)q(de)i(\(=)h Fj(w)d Fi(\002)f Fj(m)p Fk(\))p
2014 181 V 1021 182 995 2 v 1020 222 2 40 v 1112 210
a Fj(T)1133 215 y Ft(1)p 1240 222 V 1263 210 a Fk(full)j(latency)e(of)i
(a)h(cac)o(he)e(miss)p 2014 222 V 1021 223 995 2 v 1020
262 2 40 v 1088 250 a Fj(T)1109 256 y Fm(next)p 1240
262 V 1263 250 a Fk(latency)f(of)i(an)g(additional)e(pip)q(elined)g
(cac)o(he)h(miss)p 2014 262 V 1021 264 995 2 v 1020 324
2 60 v 1117 302 a Fj(B)p 1240 324 V 119 w Fk(normalized)e(memory)h
(bandwidth)1756 265 y Fg(\020)1777 302 y Fj(B)i Fk(=)1877
287 y Ff(T)1895 292 y Fn(1)p 1857 294 75 2 v 1857 315
a Ff(T)1875 319 y Fn(next)1937 265 y Fg(\021)p 2014 324
2 60 v 1021 325 995 2 v 1020 364 2 40 v 1121 353 a Fj(k)p
1240 364 V 124 w Fk(#)h(of)f(no)q(des)f(to)h(prefetc)o(h)f(ahead)p
2014 364 V 1021 366 995 2 v 1020 405 2 40 v 1123 393
a Fj(c)p 1240 405 V 125 w Fk(#)i(of)f(cac)o(he)f(lines)h(in)g(jump-p)q
(oin)o(t)o(er)e(arra)o(y)h(c)o(h)o(unk)p 2014 405 V 1021
407 995 2 v 1020 446 2 40 v 1044 434 a(p)1064 423 y Ff(w)1088
434 y Fk(B)1113 423 y Ft(+)1139 434 y Fk(-T)m(ree)p 1240
446 V 44 w(plain)g(pB)1396 423 y Ft(+)1421 434 y Fk(-T)m(ree)h(with)g
Fj(w)q Fk(-line-wide)f(no)q(des)p 2014 446 V 1021 448
995 2 v 1020 487 2 40 v 1044 475 a(p)1064 464 y Ff(w)1064
484 y(e)1088 475 y Fk(B)1113 464 y Ft(+)1139 475 y Fk(-T)m(ree)p
1240 487 V 44 w(p)1283 464 y Ff(w)1307 475 y Fk(B)1332
464 y Ft(+)1358 475 y Fk(-T)m(ree)h(with)g Fe(external)17
b Fk(jump-p)q(oin)o(t)o(er)8 b(arra)o(ys)p 2014 487 V
1021 489 995 2 v 1020 528 2 40 v 1044 516 a(p)1064 505
y Ff(w)1064 527 y(i)1088 516 y Fk(B)1113 505 y Ft(+)1139
516 y Fk(-T)m(ree)p 1240 528 V 44 w(p)1283 505 y Ff(w)1307
516 y Fk(B)1332 505 y Ft(+)1358 516 y Fk(-T)m(ree)j(with)g
Fe(internal)16 b Fk(jump-p)q(oin)o(t)o(er)9 b(arra)o(ys)p
2014 528 V 1021 530 995 2 v 1020 621 a Fv(lustrates)19
b(the)f(timing)i(on)e(our)h(Compaq)f(ES40-based)i(mac)o(hine)1020
663 y(mo)q(del,)g(where)d(bac)o(k-to-bac)o(k)i(misses)g(to)e(memory)h
(can)g(b)q(e)g(ser-)1020 704 y(viced)e(once)f(ev)o(ery)g(10)f(cycles,)i
(whic)o(h)f(is)g(a)f(small)i(fraction)g(of)e(the)1020
745 y(o)o(v)o(erall)h(150)f(cycle)h(miss)f(latency)m(.)20
b(Therefore)13 b(ev)o(en)i(without)f(p)q(er-)1020 787
y(fect)i(o)o(v)o(erlap)j(of)d(the)h(misses,)i(w)o(e)d(can)h(still)i(p)q
(oten)o(tially)h(ac)o(hiev)o(e)1020 828 y(large)13 b(p)q(erformance)g
(gains)g(\(a)f(sp)q(eedup)i(of)e(1.25)g(in)h(this)g(example\))1020
870 y(b)o(y)g(creating)i(wider)e(than)h(normal)g(B)1572
854 y Ft(+)1598 870 y Fv(-T)m(ree)e(no)q(des.)1057 911
y(Hence)17 b(the)g(\014rst)h(asp)q(ect)f(of)g(our)g(pB)1619
895 y Ft(+)1645 911 y Fv(-T)m(ree)f(design)i(is)g(to)f(use)1020
952 y(prefetc)o(hing)d(to)e(\\create")g(no)q(des)h(that)f(are)g
Fu(wider)k Fv(than)d(the)f(natu-)1020 994 y(ral)i(data)f(transfer)h
(size,)f(but)h(where)f(the)g(en)o(tire)h(miss)g(p)q(enalt)o(y)g(for)
1020 1035 y(eac)o(h)j(extra-wide)g(no)q(de)h(is)f(comparable)h(to)f
(that)f(of)h(an)f(original)1020 1077 y(B)1047 1061 y
Ft(+)1073 1077 y Fv(-T)m(ree)c(no)q(de.)1020 1151 y Fw(2.1)50
b(Modi\002cations)11 b(to)h(the)g(B)1601 1135 y Ft(+)1627
1151 y Fw(\255T)l(r)o(ee)h(Algorithm)1057 1200 y Fv(W)m(e)19
b(consider)h(a)f(standard)g(B)1514 1184 y Ft(+)1540 1200
y Fv(-T)m(ree)f(no)q(de)h(structure:)29 b(Eac)o(h)1020
1242 y Fu(non-le)n(af)c Fv(no)q(de)c(is)g(comprised)h(of)e(some)g(n)o
(um)o(b)q(er,)j Fd(d)g Fp(\035)g Fv(1,)e(of)1020 1283
y Fo(childptr)9 b Fv(\014elds,)14 b Fd(d)7 b Fp(\000)g
Fv(1)12 b Fo(key)f Fv(\014elds,)1559 1267 y Ft(2)1590
1283 y Fv(and)i(one)g Fo(keynum)c Fv(\014eld)14 b(that)1020
1324 y(records)c(the)f(n)o(um)o(b)q(er)h(of)e Fo(key)p
Fv(s)g(stored)i(in)g(the)f(no)q(de)h(\(at)f(most)g Fd(d)q
Fp(\000)q Fv(1\).)1020 1366 y(\(All)15 b(notation)g(is)f(summarized)i
(in)e(T)m(able)g(1.\))19 b(Eac)o(h)c Fu(le)n(af)20 b
Fv(no)q(de)15 b(is)1020 1407 y(comprised)d(of)f Fd(d)t
Fp(\000)t Fv(1)f Fo(key)f Fv(\014elds,)k Fd(d)t Fp(\000)t
Fv(1)d(asso)q(ciated)i Fo(tupleID)c Fv(\014elds,)1020
1449 y(one)k Fo(keynum)d Fv(\014eld,)k(and)f(one)g Fo(next-lea)o(f)c
Fv(\014eld)13 b(that)f(p)q(oin)o(ts)h(to)e(the)1020 1490
y(next)g(leaf)f(no)q(de)h(in)g(k)o(ey)f(order.)17 b(Our)10
b(\014rst)g(mo)q(di\014cation)j(is)e(to)f(store)1020
1531 y(the)15 b Fo(keynum)c Fv(and)16 b(all)f(of)f(the)h
Fo(key)p Fv(s)e(prior)j(to)e(an)o(y)h(of)f(the)h(p)q(oin)o(ters)1020
1573 y(or)f Fo(tupleID)p Fv(s)d(in)k(a)e(no)q(de.)21
b(This)14 b(simple)i(la)o(y)o(out)f(optimization)i(al-)1020
1614 y(lo)o(ws)e(the)g(binary)h(searc)o(h)f(to)f(pro)q(ceed)i(without)f
(w)o(aiting)h(to)e(fetc)o(h)1020 1656 y(all)i(the)f(p)q(oin)o(ters.)23
b(Our)14 b(searc)o(h)h(algorithm)i(is)e(a)g(straigh)o(tforw)o(ard)1020
1697 y(extension)i(of)f(the)f(standard)i(B)1497 1681
y Ft(+)1522 1697 y Fv(-T)m(ree)e(algorithm,)j(and)e(w)o(e)f(no)o(w)1020
1738 y(describ)q(e)g(only)f(the)f(parts)g(that)h(c)o(hange.)1020
1807 y Fq(Searc)o(h:)19 b Fv(Before)13 b(starting)i(a)f(binary)i(searc)
o(h,)e(w)o(e)f(prefetc)o(h)h(all)h(of)1113 1848 y(the)f(cac)o(he)f
(lines)i(that)e(comprise)h(the)f(no)q(de.)1020 1918 y
Fq(Insertion:)18 b Fv(Since)11 b(an)f(index)g(searc)o(h)g(is)g(\014rst)
g(p)q(erformed)g(to)f(lo)q(cate)1113 1960 y(the)k(p)q(osition)i(for)d
(insertion,)j(all)f(of)e(the)h(no)q(des)g(on)g(the)g(path)1113
2001 y(from)d(the)g(ro)q(ot)f(to)h(the)g(leaf)g(are)f(already)j(in)e
(the)g(cac)o(he)g(b)q(efore)1113 2042 y(the)19 b(real)g(insertion)h
(phase.)34 b(The)18 b(only)h(additional)j(cac)o(he)1113
2084 y(misses)14 b(are)f(caused)h(b)o(y)f(newly)h(allo)q(cated)h(no)q
(des,)e(whic)o(h)h(w)o(e)1113 2125 y(prefetc)o(h)c(in)f(their)h(en)o
(tiret)o(y)g(b)q(efore)f(redistributi)q(ng)j(the)d(k)o(eys.)1020
2195 y Fq(Deletion:)18 b Fv(W)m(e)9 b(p)q(erform)g Fu(lazy)f(deletion)h
Fv(as)g(in)g(Rao)h(and)f(Ross)g([20].)1113 2236 y(If)14
b(more)f(than)i(one)f(k)o(ey)g(is)g(in)h(the)f(no)q(de,)g(w)o(e)g
(simply)h(delete)1113 2278 y(the)10 b(k)o(ey)m(.)16 b(It)9
b(is)h(only)g(when)g(the)f(last)i(k)o(ey)e(in)h(a)g(no)q(de)g(is)g
(deleted)1113 2319 y(that)19 b(w)o(e)f(try)g(to)g(redistribute)i(k)o
(eys)f(or)f(delete)h(the)g(no)q(de.)1113 2361 y(Since)c(index)f(searc)o
(h)g(is)f(also)h(p)q(erformed)g(prior)g(to)e(deletion,)1113
2402 y(the)18 b(en)o(tire)g(ro)q(ot-to-leaf)g(path)f(is)h(in)g(the)f
(cac)o(he.)30 b(Key)17 b(re-)1113 2443 y(distributio)q(n)j(is)d(the)g
(only)i(p)q(oten)o(tial)g(cause)e(of)g(additional)1113
2485 y(misses;)e(hence)g(when)f(all)h(k)o(eys)f(in)h(a)f(no)q(de)h(are)
f(deleted,)h(w)o(e)1113 2526 y(prefetc)o(h)h(the)f(sibling)j(no)q(de)e
(from)f(whic)o(h)h(k)o(eys)g(will)h(b)q(e)e(re-)1113
2568 y(distributed.)p 1020 2589 399 2 v 1020 2613 a Fn(2)1037
2626 y Fm(Throughout)f(this)i(pap)q(er,)g(w)o(e)f(consider)g(for)g
(simplicit)o(y)i Fl(\014xe)n(d-size)f Fc(key)p Fm(s,)1020
2657 y Fc(tupleID)p Fm(s,)i(and)13 b(p)q(oin)o(ters.)23
b(W)m(e)14 b(also)f(assume)h(that)f Fc(tupleID)p Fm(s)k(and)d(p)q(oin)o
(ters)1020 2689 y(are)d(the)g(same)g(size.)p eop
%%Page: 4 4
4 3 bop -38 -34 a Fv(Prefetc)o(hing)14 b(can)f(also)h(b)q(e)f(used)g
(to)g(accelerate)h(the)f Fu(bulklo)n(ad)g Fv(of)-76 7
y(a)i(B)-15 -9 y Ft(+)11 7 y Fv(-T)m(ree.)21 b(Ho)o(w)o(ev)o(er,)15
b(b)q(ecause)h(this)g(is)f(exp)q(ected)h(to)f(o)q(ccur)h(in-)-76
48 y(frequen)o(tly)m(,)c(w)o(e)e(fo)q(cus)h(instead)h(on)e(the)h(more)f
(frequen)o(t)h(op)q(erations)-76 90 y(of)i(searc)o(h,)g(insertion)i
(and)f(deletion.)-76 164 y Fw(2.2)50 b(Qualitative)10
b(Analysis)-38 214 y Fv(As)f(discussed)j(earlier)g(in)f(this)g
(section,)h(w)o(e)d(exp)q(ect)i(searc)o(h)g(times)-76
255 y(to)h(impro)o(v)o(e)h(through)g(our)f(sc)o(heme)g(b)q(ecause)h(it)
f(reduces)g(the)g(n)o(um-)-76 297 y(b)q(er)h(of)f(lev)o(els)j(in)e(the)
g(B)274 281 y Ft(+)299 297 y Fv(-T)m(ree)f(without)i(signi\014can)o
(tly)i(increasing)-76 338 y(the)i(cost)h(of)f(accessing)i(eac)o(h)e
(lev)o(el.)34 b(What)19 b(ab)q(out)g(the)f(p)q(erfor-)-76
380 y(mance)g(impact)g(on)g(up)q(dates?)32 b(Up)q(dates)18
b(alw)o(a)o(ys)g(b)q(egin)h(with)f(a)-76 421 y(searc)o(h)h(phase,)i
(whic)o(h)e(will)h(b)q(e)f(sp)q(ed)h(up.)34 b(The)18
b(exp)q(ensiv)o(e)j(op-)-76 462 y(erations)c(only)f(o)q(ccur)g(either)g
(when)g(the)f(no)q(de)h(b)q(ecomes)h(to)q(o)e(full)-76
504 y(up)q(on)10 b(an)g(insertion)h(and)f(m)o(ust)f(b)q(e)g(split,)i
(or)e(when)h(a)f(no)q(de)g(b)q(ecomes)-76 545 y(empt)o(y)14
b(up)q(on)g(a)f(deletion)i(and)f(k)o(eys)g(m)o(ust)f(b)q(e)h
(redistributed.)20 b(Al-)-76 587 y(though)c(no)q(de)g(splits)g(and)g(k)
o(ey)f(redistribution)q(s)i(are)e(more)g(costly)-76 628
y(with)f(larger)g(no)q(des,)g(the)f(relativ)o(e)i(frequency)g(of)e
(these)g(exp)q(ensiv)o(e)-76 670 y(ev)o(en)o(ts)g(should)h(decrease.)k
(Therefore)13 b(w)o(e)f(exp)q(ect)h(up)q(date)g(p)q(erfor-)-76
711 y(mance)k(to)g(b)q(e)g(comparable)i(to,)e(or)g(p)q(erhaps)h(ev)o
(en)f(b)q(etter)g(than,)-76 752 y(B)-49 736 y Ft(+)-23
752 y Fv(-T)m(rees)12 b(with)i(single-line)i(no)q(des.)-38
794 y(The)e(space)h(o)o(v)o(erhead)h(of)f(the)f(index)j(is)e(strictly)h
(reduced)g(with)-76 835 y(wider)f(no)q(des.)23 b(This)16
b(is)f(primarily)i(due)f(to)e(the)h(reduction)i(in)e(the)-76
877 y(n)o(um)o(b)q(er)j(of)f(non-leaf)h(no)q(des.)30
b(F)m(or)17 b(a)g(full)i(tree,)e(eac)o(h)h(leaf)f(no)q(de)-76
918 y(con)o(tains)c Fd(d)t Fp(\000)t Fv(1)d Fp(h)p Fo(key)p
Fv(,)i Fo(tupleID)p Fp(i)e Fv(pairs)q(.)16 b(The)11 b(n)o(um)o(b)q(er)h
(of)e(non-leaf)-76 959 y(no)q(des)k(is)f(dominated)h(b)o(y)f(the)g(n)o
(um)o(b)q(er)g(of)f(no)q(des)i(in)f(the)g(lev)o(el)h(im-)-76
1001 y(mediately)h(ab)q(o)o(v)o(e)e(the)f(leaf)h(no)q(des,)g(and)g
(hence)g(is)g(appro)o(ximately)-37 1027 y Ff(N)p -71
1034 96 2 v -71 1055 a(d)p Ft(\()p Ff(d)p Fb(\000)p Ft(1\))29
1042 y Fv(.)34 b(As)18 b(the)h(fanout)g Fd(d)f Fv(increases)i(with)f
(wider)g(no)q(des,)i(the)-76 1091 y(no)q(de)c(size)f(gro)o(ws)g
(linearly)i(but)e(the)g(n)o(um)o(b)q(er)g(of)g(non-leaf)g(no)q(des)-76
1133 y(decreases)h(quadraticall)q(y)m(,)i(resulting)g(in)e(a)f(near)g
(linear)i(decrease)-76 1174 y(in)c(the)f(non-leaf)h(space)g(o)o(v)o
(erhead.)-38 1215 y(Finally)m(,)19 b(an)e(in)o(teresting)h
(consideration)i(is)d(to)f(determine)i(the)-76 1257 y(optimal)f(no)q
(de)f(size,)g(giv)o(en)g(prefetc)o(hing.)25 b(Should)17
b(no)q(des)f(simply)-76 1298 y(b)q(e)g(as)g(wide)h(as)f(p)q(ossible?)29
b(There)16 b(are)g(t)o(w)o(o)f(system)h(parameters)-76
1340 y(that)e(a\013ect)f(this)h(answ)o(er.)k(The)13 b(\014rst)g(is)h
(the)f(exten)o(t)h(to)f(whic)o(h)h(the)-76 1381 y(memory)i(subsystem)g
(can)f(o)o(v)o(erlap)i(m)o(ultiple)g(cac)o(he)f(misses.)24
b(W)m(e)-76 1422 y(quan)o(tify)13 b(this)g(as)f(the)g(latency)h(of)e(a)
h(full)h(cac)o(he)f(miss)h(\()p Fd(T)754 1426 y Ft(1)771
1422 y Fv(\))f(divided)-76 1464 y(b)o(y)18 b(the)f(additional)k(time)d
(un)o(til)h(another)f(pip)q(elined)j(cac)o(he)c(miss)-76
1505 y(w)o(ould)f(also)g(complete)g(\()p Fd(T)318 1510
y Fm(next)384 1505 y Fv(\).)22 b(W)m(e)15 b(call)h(this)g(ratio)f
(\(i.e.)846 1489 y Ff(T)864 1494 y Fn(1)p 826 1497 75
2 v 826 1518 a Ff(T)844 1522 y Fn(next)905 1505 y Fv(\))-76
1554 y(the)c Fu(normalize)n(d)e(b)n(andwidth)i Fv(\()p
Fd(B)r Fv(\).)16 b(F)m(or)10 b(example,)i(in)g(our)f(Compaq)-76
1596 y(ES40-based)19 b(mac)o(hine)h(mo)q(del,)f Fd(T)442
1600 y Ft(1)479 1596 y Fv(=)e(150)h(cycles,)i Fd(T)750
1601 y Fm(next)835 1596 y Fv(=)d(10)-76 1637 y(cycles,)g(and)f(hence)h
Fd(B)g Fv(=)e(15.)25 b(The)15 b(larger)i(the)e(v)n(alue)i(of)e
Fd(B)r Fv(,)h(the)-76 1679 y(greater)c(the)h(system's)f(abilit)o(y)i
(to)e(o)o(v)o(erlap)h(parallel)i(accesses,)e(and)-76
1720 y(hence)i(the)g(greater)f(lik)o(eliho)r(o)q(d)j(of)d(b)q
(ene\014ting)j(from)d(wider)h(index)-76 1761 y(no)q(des.)k(In)14
b(general,)g(w)o(e)f(do)h(not)g(exp)q(ect)g(the)f(optimal)i(n)o(um)o(b)
q(er)f(of)-76 1803 y(cac)o(he)i(lines)h(p)q(er)f(no)q(de)h(\()p
Fd(w)329 1810 y Fm(optimal)441 1803 y Fv(\))e(to)g(exceed)i
Fd(B)r Fv(,)e(since)i(b)q(ey)o(ond)-76 1844 y(that)i(p)q(oin)o(t)h(w)o
(e)e(could)i(ha)o(v)o(e)f(completed)h(a)f(binary)h(searc)o(h)g(and)-76
1886 y(mo)o(v)o(ed)11 b(do)o(wn)f(to)f(the)h(next)h(lev)o(el)g(in)g
(the)f(tree.)15 b(The)10 b(second)h(system)-76 1927 y(parameter)f(that)
f(p)q(oten)o(tially)j(limits)f(the)f(optimal)h(no)q(de)e(size)h(is)g
(the)-76 1968 y(size)k(of)g(the)f(cac)o(he,)h(although)i(in)e(practice)
h(this)f(do)q(es)g(not)g(app)q(ear)-76 2010 y(to)f(b)q(e)g(a)g
(limitation)j(giv)o(en)f(realistic)g(v)n(alues)f(of)f
Fd(B)r Fv(.)-38 2051 y(Let)i(us)h(no)o(w)g(consider)i(a)e(more)g(quan)o
(titativ)o(e)i(analysis)g(of)e(the)-76 2093 y(optimal)k(no)q(de)f
(width)g Fd(w)310 2100 y Fm(optimal)422 2093 y Fv(.)32
b(A)18 b(pB)560 2077 y Ft(+)586 2093 y Fv(-T)m(ree)g(with)g
Fd(N)k Fp(h)p Fo(key)p Fv(,)-76 2153 y Fo(tupleID)p Fp(i)c
Fv(pairs)j(con)o(tains)h(at)f(least)508 2111 y Fa(l)528
2153 y Fv(log)578 2162 y Ff(d)602 2111 y Fa(\020)644
2137 y Ff(N)p 630 2144 56 2 v 630 2165 a(d)p Fb(\000)p
Ft(1)690 2111 y Fa(\021)722 2153 y Fv(+)8 b(1)779 2111
y Fa(m)820 2153 y Fv(lev)o(els.)-76 2207 y(With)19 b(our)e(data)h(la)o
(y)o(out)g(optimization)j(of)16 b(putting)j(k)o(eys)f(b)q(efore)-76
2248 y(c)o(hild)d(p)q(oin)o(ters,)181 2233 y Ft(3)p 181
2240 16 2 v 181 2261 a(4)215 2248 y Fv(of)e(the)h(no)q(de)g(is)g(read)g
(on)g(a)o(v)o(erage.)19 b(Hence)14 b(the)-76 2290 y(a)o(v)o(erage)g
(memory)f(stall)i(time)e(for)g(a)g(searc)o(h)g(in)h(a)f(full)h(tree)f
(is)30 2328 y Fa(l)50 2369 y Fv(log)100 2378 y Ff(d)144
2354 y(N)p 129 2361 56 2 v 129 2382 a(d)p Fb(\000)p Ft(1)198
2369 y Fv(+)c(1)256 2328 y Fa(m)285 2369 y Fp(\002)323
2339 y Fa(\000)341 2369 y Fd(T)363 2373 y Ft(1)389 2369
y Fv(+)427 2339 y Fa(\000\006)468 2354 y Ft(3)p Ff(w)p
468 2361 39 2 v 479 2382 a Ft(4)511 2339 y Fa(\007)538
2369 y Fp(\000)f Fv(1)595 2339 y Fa(\001)621 2369 y Fp(\002)h
Fd(T)682 2374 y Fm(next)748 2339 y Fa(\001)-2 2436 y
Fv(=)h Fd(T)60 2441 y Fm(next)135 2436 y Fp(\002)173
2395 y Fa(l)193 2436 y Fv(log)243 2446 y Ff(w)q(m)338
2421 y(N)p 307 2428 90 2 v 307 2449 a(w)q(m)p Fb(\000)p
Ft(1)409 2436 y Fv(+)f(1)467 2395 y Fa(m)496 2436 y Fp(\002)534
2406 y Fa(\000)552 2436 y Fd(B)h Fv(+)630 2406 y Fa(\006)653
2421 y Ft(3)p Ff(w)p 653 2428 39 2 v 664 2449 a Ft(4)696
2406 y Fa(\007)723 2436 y Fp(\000)e Fv(1)780 2406 y Fa(\001)871
2403 y Fv(\(1\))-76 2516 y(By)h(computing)i(the)e(v)n(alue)h(of)e
Fd(w)h Fv(that)g(minimizes)i(this)f(cost,)g(w)o(e)e(can)-76
2557 y(\014nd)13 b Fd(w)28 2564 y Fm(optimal)140 2557
y Fv(.)j(F)m(or)c(example,)h(in)f(our)h(sim)o(ulations)h(where)e
Fd(m)f Fv(=)f(8)-76 2606 y(and)k Fd(B)f Fv(=)f(15,)h(b)o(y)h(a)o(v)o
(eraging)h(o)o(v)o(er)f(tree)f(sizes)h Fd(N)h Fv(=)d(10)745
2590 y Ft(3)762 2606 y Fd(;)6 b(:)g(:)h(:)12 b(;)6 b
Fv(10)892 2590 y Ft(9)910 2606 y Fv(,)-76 2647 y(w)o(e)12
b(can)g(compute)h(from)e(equation)j(\(1\))e(that)g Fd(w)620
2654 y Fm(optimal)743 2647 y Fv(=)e(8.)17 b(If)11 b(the)-76
2689 y(memory)k(subsystem)g(bandwidth)h(increases)f(suc)o(h)g(that)f
Fd(B)g Fv(=)e(50,)p 1020 -74 997 2 v 1129 121 a @beginspecial
0 @llx 0 @lly 245 @urx 52 @ury 396 @rhi @setspecial
%%BeginDocument: graphs/scanmiss-1.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 5205 -1000 l 5205 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
gs  clippath
3453 870 m 3573 900 l 3453 930 l 3615 930 l 3615 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 3600 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3453 870 m 3573 900 l 3453 930 l 3453 900 l 3453 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1050 750 m 1800 750 l 1800 825 l 1050 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 70.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1800 675 m 2550 675 l 2550 750 l 1800 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2550 600 m 3300 600 l 3300 675 l 2550 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 170.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
n 3300 450 m 3300 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 220.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2550 450 m 2550 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 170.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1800 450 m 1800 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 120.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1050 450 m 1050 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 70.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
150 300 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
525 525 m
gs 1 -1 sc (leaf0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1275 525 m
gs 1 -1 sc (leaf1) col0 sh gr
/Times-Roman ff 150.00 scf sf
2025 525 m
gs 1 -1 sc (leaf2) col0 sh gr
/Times-Roman ff 150.00 scf sf
2775 525 m
gs 1 -1 sc (leaf3) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
975 1050 m
gs 1 -1 sc (150) col0 sh gr
/Times-Roman ff 150.00 scf sf
1725 1050 m
gs 1 -1 sc (300) col0 sh gr
/Times-Roman ff 150.00 scf sf
2475 1050 m
gs 1 -1 sc (450) col0 sh gr
/Times-Roman ff 150.00 scf sf
3225 1050 m
gs 1 -1 sc (600) col0 sh gr
/Times-Roman ff 150.00 scf sf
3375 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 1270 162 a(\(a\))h(Scanning)i(4)e(one-line)i(no)q(des)1006
370 y @beginspecial 0 @llx 0 @lly 164 @urx 52 @ury 396
@rhi @setspecial
%%BeginDocument: graphs/scanmiss-2.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 3855 -1000 l 3855 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 375 750 m 1125 750 l 1125 825 l 375 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 25.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1125 675 m 1875 675 l 1875 750 l 1125 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 75.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 600 m 1950 600 l 1950 675 l 1200 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 80.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
2103 870 m 2223 900 l 2103 930 l 2265 930 l 2265 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 2250 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 2103 870 m 2223 900 l 2103 930 l 2103 900 l 2103 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 1950 450 m 1950 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 130.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1125 450 m 1125 900 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 75.00 30.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
150 300 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
525 525 m
gs 1 -1 sc (leaf0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1350 525 m
gs 1 -1 sc (leaf1) col0 sh gr
/Times-Roman ff 150.00 scf sf
2025 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1050 1050 m
gs 1 -1 sc (160) col0 sh gr
/Times-Roman ff 150.00 scf sf
1875 1050 m
gs 1 -1 sc (320) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 596 w @beginspecial 0 @llx 0 @lly 123 @urx
52 @ury 396 @rhi @setspecial
%%BeginDocument: graphs/scanmiss-3.eps
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 63.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2050 m -1000 -1000 l 3180 -1000 l 3180 2050 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 300 825 m 1050 825 l 1050 900 l 300 900 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 20.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 375 750 m 1125 750 l 1125 825 l 375 825 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 25.00 50.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
1428 870 m 1548 900 l 1428 930 l 1590 930 l 1590 870 l cp
270 447 m 300 327 l 330 447 l 330 285 l 270 285 l cp
clip
n 300 300 m 300 900 l 1575 900 l gs col0 s gr gr

% arrowhead
n 270 447 m 300 327 l 330 447 l 300 447 l 270 447 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1428 870 m 1548 900 l 1428 930 l 1428 900 l 1428 870 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 450 675 m 1200 675 l 1200 750 l 450 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 30.00 45.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 525 600 m 1275 600 l 1275 675 l 525 675 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 35.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
n 1275 600 m 1275 900 l gs col0 s gr  [] 0 sd
/Times-Roman ff 150.00 scf sf
150 300 m
gs 1 -1 sc (cache miss) col0 sh gr
/Times-Roman ff 150.00 scf sf
300 1050 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 150.00 scf sf
1200 1050 m
gs 1 -1 sc (180) col0 sh gr
/Times-Roman ff 150.00 scf sf
1350 825 m
gs 1 -1 sc (time \(cycles\)) col0 sh gr
$F2psEnd
rs
end
%%EndDocument
 @endspecial 1016 411 a(\(b\))e(Scanning)i(2)e(t)o(w)o(o-line)h(no)q
(des)k(\(c\))13 b(Scanning)i(with)f(prefetc)o(hing)p
1020 470 V 1054 504 a Fq(Figure)g(3:)20 b(Cac)o(he)14
b(b)q(eha)o(viors)h(of)g(index)e(range)j(scans.)1020
599 y Fv(then)e Fd(w)1136 606 y Fm(optimal)1260 599 y
Fv(increases)h(to)e(22.)1057 648 y(In)f(summary)m(,)h(comparing)h(our)e
(pB)1581 632 y Ft(+)1607 648 y Fv(-T)m(rees)g(with)g(con)o(v)o(en)o
(tional)1020 689 y(B)1047 673 y Ft(+)1073 689 y Fv(-T)m(rees,)e(w)o(e)g
(exp)q(ect)h(b)q(etter)g(searc)o(h)h(p)q(erformance,)f(comparable)1020
731 y(or)17 b(somewhat)h(b)q(etter)g(up)q(date)g(p)q(erformance,)h(and)
f(lo)o(w)o(er)f(space)1020 772 y(o)o(v)o(erhead.)25 b(Ha)o(ving)17
b(addressed)f(index)h(searc)o(h)f(p)q(erformance,)h(w)o(e)1020
814 y(no)o(w)c(turn)g(our)h(atten)o(tion)g(to)f(index)i(range)e(scans.)
1020 899 y Fw(3.)50 b(PREFETCHING)14 b(INDEX)f(SCANS)1057
949 y Fv(Giv)o(en)19 b(starting)f(and)f(ending)i(k)o(eys)f(as)f
(argumen)o(ts,)h(an)g(index)1020 990 y(range)12 b(scan)g(returns)f(a)g
(list)i(of)e(either)h(the)f Fo(tupleID)p Fv(s)d(or)k(the)f(tuples)1020
1031 y(themselv)o(es)17 b(with)e(k)o(eys)h(that)f(fall)h(within)h(this)
f(range.)23 b(First)16 b(the)1020 1073 y(starting)f(k)o(ey)g(is)f
Fu(se)n(ar)n(che)n(d)i Fv(in)f(the)f(B)1570 1057 y Ft(+)1596
1073 y Fv(-T)m(ree)f(to)h(lo)q(cate)h(the)f(start-)1020
1114 y(ing)d(leaf)f(no)q(de.)17 b(Then)10 b(the)g(scan)h(follo)o(ws)g
(the)f Fo(next-leaf)c Fv(p)q(oin)o(ters,)1020 1156 y(visiting)18
b(the)d(leaf)h(no)q(des)g(in)f(order.)24 b(As)15 b(the)g(scan)h(pro)q
(ceeds,)g(the)1020 1197 y Fo(tupleID)p Fv(s)d(\(or)j(tuples\))h(are)f
(copied)h(in)o(to)f(a)g(return)g(bu\013er.)26 b(This)1020
1238 y(pro)q(cess)13 b(stops)g(when)f(either)h(the)g(ending)h(k)o(ey)e
(is)h(found)g(or)f(the)g(re-)1020 1280 y(turn)k(bu\013er)h(\014lls)g
(up.)25 b(In)16 b(the)f(latter)i(case,)f(the)g(scan)g(pro)q(cedure)1020
1321 y(pauses)c(and)f(returns)h(the)f(bu\013er)g(to)g(the)g(caller)h
(\(often)f(a)g(join)g(no)q(de)1020 1363 y(in)16 b(a)f(query)h
(execution)h(plan\),)g(whic)o(h)f(then)g(consumes)g(the)g(data)1020
1404 y(and)h(resumes)g(the)f(scan)h(where)f(it)h(left)g(o\013.)27
b(Hence)16 b(a)g(range)h(se-)1020 1445 y(lection)e(in)o(v)o(olv)o(es)g
(one)e(k)o(ey)g(searc)o(h)g(and)h(often)f(m)o(ultiple)i(leaf)e(no)q(de)
1020 1487 y(scan)i(calls.)21 b(Throughout)15 b(this)g(section,)g(w)o(e)
e(will)j(fo)q(cus)e(on)g(range)1020 1528 y(selections)i(that)e(return)g
Fo(tupleID)p Fv(s,)c(although)16 b(returning)f(the)f(tu-)1020
1570 y(ples)e(themselv)o(es)g(\(or)f(other)g(v)n(ariations\))i(is)e(a)g
(straigh)o(tforw)o(ard)h(ex-)1020 1611 y(tension)j(of)d(our)i
(algorithm,)g(as)f(discussed)i(in)f(the)f(full)i(pap)q(er)e([7].)1057
1652 y(As)h(w)o(e)f(sa)o(w)h(already)h(in)f(Figure)h(1,)f(the)g(cac)o
(he)g(p)q(erformance)g(of)1020 1694 y(range)g(scans)f(is)h(ab)o(ysmal:)
k(84\045)13 b(of)g(execution)i(time)e(is)h(b)q(eing)g(lost)1020
1735 y(to)g(data)h(cac)o(he)g(misses)g(in)g(that)g(exp)q(erimen)o(t.)22
b(Figure)16 b(3\(a\))e(illus-)1020 1777 y(trates)g(the)g(problem:)20
b(a)13 b(full)i(cac)o(he)g(miss)f(latency)h(is)f(su\013ered)h(for)1020
1818 y(eac)o(h)i(leaf)g(no)q(de.)28 b(A)16 b(partial)j(solution)f(is)f
(to)g(use)g(the)f(tec)o(hnique)1020 1859 y(describ)q(ed)k(in)f(Section)
h(2:)28 b(If)17 b(w)o(e)h(mak)o(e)h(the)f(leaf)h(no)q(des)g(m)o(ulti-)
1020 1901 y(ple)c(cac)o(he)g(lines)h(wide)g(and)f(prefetc)o(h)f(eac)o
(h)h(comp)q(onen)o(t)h(of)e(a)h(leaf)1020 1942 y(no)q(de)h(in)g
(parallel,)h(w)o(e)e(can)g(reduce)h(the)f(frequency)h(of)f(exp)q(ensiv)
o(e)1020 1984 y(cac)o(he)k(misses,)g(as)g(illustrated)h(in)f(Figure)g
(3\(b\).)33 b(While)20 b(this)f(is)1020 2025 y(helpful,)h(our)d(goal)h
(is)f(to)g Fu(ful)r(ly)i Fv(hide)f(the)f(miss)g(latencies)i(to)e(the)
1020 2067 y(exten)o(t)g(p)q(ermitted)h(b)o(y)g(the)f(memory)g(system,)h
(as)f(illustrated)i(in)1020 2108 y(Figure)13 b(3\(c\).)j(In)c(order)g
(to)g(do)g(that,)g(w)o(e)f(m)o(ust)h(\014rst)g(o)o(v)o(ercome)g(the)
1020 2149 y Fu(p)n(ointer-chas)o(ing)e(pr)n(oblem)p Fv(.)1020
2225 y Fw(3.1)50 b(Solving)11 b(the)h(P)o(ointer)n(\255Chasing)g(Pr)o
(oblem)1057 2275 y Fv(Figure)i(4\(a\))e(illustrates)i(the)f
Fu(p)n(ointer-cha)o(sin)o(g)d(pr)n(oblem)p Fv(,)g(whic)o(h)1020
2316 y(w)o(as)k(observ)o(ed)i(b)o(y)f(Luk)f(and)i(Mo)o(wry)e([13,)g
(14])h(in)g(the)f(con)o(text)h(of)1020 2358 y(prefetc)o(hing)j(p)q(oin)
o(ter-link)o(ed)i(data)d(structures)h(\(i.e.)e(link)o(ed-lis)q(ts,)1020
2399 y(trees,)d(etc.\))19 b(in)14 b(general-purp)q(ose)i(application)q
(s.)21 b(Assuming)15 b(that)1020 2440 y(three)i(no)q(des)h(w)o(orth)f
(of)g(computation)i(are)f(needed)g(to)f(hide)h(the)1020
2482 y(miss)f(latency)m(,)h(then)f(when)f(no)q(de)h Fd(n)1567
2486 y Ff(i)1597 2482 y Fv(in)g(Figure)g(4\(a\))g(is)g(visited,)1020
2523 y(w)o(e)d(w)o(ould)i(lik)o(e)g(to)f(b)q(e)g(launc)o(hing)i(a)e
(prefetc)o(h)g(of)f(no)q(de)i Fd(n)1888 2527 y Ff(i)p
Ft(+3)1940 2523 y Fv(.)22 b(T)m(o)1020 2565 y(compute)11
b(the)f(address)h(of)f(no)q(de)h Fd(n)1524 2569 y Ff(i)p
Ft(+3)1576 2565 y Fv(,)f(w)o(e)g(w)o(ould)h(normally)h(follo)o(w)1020
2606 y(the)k(p)q(oin)o(ter)h(c)o(hain)g(through)f(no)q(des)h
Fd(n)1609 2610 y Ff(i)p Ft(+1)1676 2606 y Fv(and)f Fd(n)1776
2610 y Ff(i)p Ft(+2)1828 2606 y Fv(.)25 b(Ho)o(w)o(ev)o(er,)1020
2647 y(this)12 b(w)o(ould)g(incur)h(the)e(full)i(miss)f(latency)g(to)g
(fetc)o(h)f Fd(n)1806 2651 y Ff(i)p Ft(+1)1869 2647 y
Fv(and)h(then)1020 2689 y(to)f(fetc)o(h)g Fd(n)1180 2693
y Ff(i)p Ft(+2)1232 2689 y Fv(,)g(b)q(efore)h(the)f(prefetc)o(h)h(of)f
Fd(n)1643 2693 y Ff(i)p Ft(+3)1706 2689 y Fv(could)i(b)q(e)e(launc)o
(hed,)p eop
%%Page: 5 5
5 4 bop -76 -74 997 2 v 51 157 a @beginspecial 0 @llx
0 @lly 344 @urx 100 @ury 518 @rhi @setspecial
%%BeginDocument: graphs/prefetch-1.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 109.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2812 m -1000 -1000 l 6857 -1000 l 6857 2812 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 1170 1215 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Italic ff 240.00 scf sf
1110 1275 m
gs 1 -1 sc (n) col0 sh gr
/Times-Roman ff 150.00 scf sf
1247 1334 m
gs 1 -1 sc (i) col0 sh gr
% Ellipse
n 2370 1215 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
2372 1334 m
gs 1 -1 sc (i+1) col0 sh gr
/Times-Italic ff 240.00 scf sf
2222 1259 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 3570 1215 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
3572 1334 m
gs 1 -1 sc (i+2) col0 sh gr
/Times-Italic ff 240.00 scf sf
3422 1259 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 4770 1215 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
4772 1334 m
gs 1 -1 sc (i+3) col0 sh gr
/Times-Italic ff 240.00 scf sf
4622 1259 m
gs 1 -1 sc (n) col0 sh gr
% Polyline
gs  clippath
1953 1170 m 2073 1200 l 1953 1230 l 2115 1230 l 2115 1170 l cp
clip
n 1500 1200 m 2100 1200 l gs col0 s gr gr

% arrowhead
n 1953 1170 m 2073 1200 l 1953 1230 l 1953 1200 l 1953 1170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3153 1170 m 3273 1200 l 3153 1230 l 3315 1230 l 3315 1170 l cp
clip
n 2700 1200 m 3300 1200 l gs col0 s gr gr

% arrowhead
n 3153 1170 m 3273 1200 l 3153 1230 l 3153 1200 l 3153 1170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4353 1170 m 4473 1200 l 4353 1230 l 4515 1230 l 4515 1170 l cp
clip
n 3900 1200 m 4500 1200 l gs col0 s gr gr

% arrowhead
n 4353 1170 m 4473 1200 l 4353 1230 l 4353 1200 l 4353 1170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5178 1170 m 5298 1200 l 5178 1230 l 5340 1230 l 5340 1170 l cp
clip
n 5100 1200 m 5325 1200 l gs col0 s gr gr

% arrowhead
n 5178 1170 m 5298 1200 l 5178 1230 l 5178 1200 l 5178 1170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
753 1170 m 873 1200 l 753 1230 l 915 1230 l 915 1170 l cp
clip
n 600 1200 m 900 1200 l gs col0 s gr gr

% arrowhead
n 753 1170 m 873 1200 l 753 1230 l 753 1200 l 753 1170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
gs  clippath
1230 678 m 1200 798 l 1170 678 l 1170 840 l 1230 840 l cp
clip
n 1200 450 m 1200 825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1230 678 m 1200 798 l 1170 678 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4830 678 m 4800 798 l 4770 678 l 4770 840 l 4830 840 l cp
clip
n 4800 450 m 4800 825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4830 678 m 4800 798 l 4770 678 l  col0 s
% Polyline
n 2550 1800 m 3150 1800 l gs col7 s gr 
/Times-Roman ff 270.00 scf sf
150 1215 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman ff 270.00 scf sf
5550 1230 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Italic ff 180.00 scf sf
675 300 m
gs 1 -1 sc (Currently visiting) col0 sh gr
/Times-Italic ff 180.00 scf sf
4125 300 m
gs 1 -1 sc (Would like to prefetch) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 217 168 a Fk(\(a\))11 b(T)m(ra)o(v)o(ersing)f(a)h(link)o
(ed)f(list)57 404 y @beginspecial 0 @llx 0 @lly 344 @urx
106 @ury 540 @rhi @setspecial
%%BeginDocument: graphs/prefetch-2.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 114.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2887 m -1000 -1000 l 6857 -1000 l 6857 2887 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 1170 765 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Italic ff 240.00 scf sf
1110 825 m
gs 1 -1 sc (n) col0 sh gr
/Times-Roman ff 150.00 scf sf
1247 884 m
gs 1 -1 sc (i) col0 sh gr
% Ellipse
n 2370 765 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
2372 884 m
gs 1 -1 sc (i+1) col0 sh gr
/Times-Italic ff 240.00 scf sf
2222 809 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 3570 765 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
3572 884 m
gs 1 -1 sc (i+2) col0 sh gr
/Times-Italic ff 240.00 scf sf
3422 809 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 4770 765 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
4772 884 m
gs 1 -1 sc (i+3) col0 sh gr
/Times-Italic ff 240.00 scf sf
4622 809 m
gs 1 -1 sc (n) col0 sh gr
/Times-Italic ff 210.00 scf sf
2475 1200 m
gs 1 -1 sc (&n) col0 sh gr
/Times-Italic ff 150.00 scf sf
2745 1275 m
gs 1 -1 sc (i+4) col0 sh gr
/Times-Italic ff 210.00 scf sf
1200 1200 m
gs 1 -1 sc (&n) col0 sh gr
/Times-Italic ff 150.00 scf sf
1470 1275 m
gs 1 -1 sc (i+3) col0 sh gr
/Times-Italic ff 210.00 scf sf
3525 1200 m
gs 1 -1 sc (&n) col0 sh gr
/Times-Italic ff 150.00 scf sf
3795 1275 m
gs 1 -1 sc (i+5) col0 sh gr
% Arc
gs n 1365.5 962.1 86.0 -46.2 122.0 arc
gs col0 s gr
 gr

% Arc
gs n 2565.5 962.1 86.0 -46.2 122.0 arc
gs col0 s gr
 gr

% Arc
gs n 3780.5 947.1 86.0 -46.2 122.0 arc
gs col0 s gr
 gr

% Arc
gs n 4995.5 947.1 86.0 -46.2 122.0 arc
gs col0 s gr
 gr

% Arc
gs  clippath
4460 1027 m 4580 1001 l 4486 1081 l 4632 1011 l 4606 956 l cp
clip
n 2968.9 -2244.0 3624.3 115.2 63.2 arcn
gs col0 s gr
 gr

% arrowhead
n 4460 1027 m 4580 1001 l 4486 1081 l  col0 s
% Arc
gs n 4182.3 -2266.4 3616.7 115.2 71.8 arcn
gs col0 s gr
 gr

% Arc
gs n 5756.4 -3417.2 4788.1 113.0 95.3 arcn
gs col0 s gr
 gr

% Arc
gs  clippath
851 1046 m 967 1004 l 884 1096 l 1019 1007 l 986 957 l cp
clip
n 272.5 42.5 1188.5 74.0 52.9 arcn
gs col0 s gr
 gr

% arrowhead
n 851 1046 m 967 1004 l 884 1096 l  col0 s
% Polyline
gs  clippath
1953 720 m 2073 750 l 1953 780 l 2115 780 l 2115 720 l cp
clip
n 1500 750 m 2100 750 l gs col0 s gr gr

% arrowhead
n 1953 720 m 2073 750 l 1953 780 l 1953 750 l 1953 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3153 720 m 3273 750 l 3153 780 l 3315 780 l 3315 720 l cp
clip
n 2700 750 m 3300 750 l gs col0 s gr gr

% arrowhead
n 3153 720 m 3273 750 l 3153 780 l 3153 750 l 3153 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4353 720 m 4473 750 l 4353 780 l 4515 780 l 4515 720 l cp
clip
n 3900 750 m 4500 750 l gs col0 s gr gr

% arrowhead
n 4353 720 m 4473 750 l 4353 780 l 4353 750 l 4353 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5178 720 m 5298 750 l 5178 780 l 5340 780 l 5340 720 l cp
clip
n 5100 750 m 5325 750 l gs col0 s gr gr

% arrowhead
n 5178 720 m 5298 750 l 5178 780 l 5178 750 l 5178 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
753 720 m 873 750 l 753 780 l 915 780 l 915 720 l cp
clip
n 600 750 m 900 750 l gs col0 s gr gr

% arrowhead
n 753 720 m 873 750 l 753 780 l 753 750 l 753 720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 5325 1170 m 5790 960 l 5790 945 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5325 1350 m 5745 1350 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5100 975 m 5700 1125 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 600 1200 m 165 1290 l 165 1305 l gs col0 s gr  [] 0 sd
% Polyline
n 2700 150 m 3300 150 l 3225 150 l gs col7 s gr 
% Polyline
n 2775 1875 m 3375 1875 l 3300 1875 l gs col7 s gr 
/Times-Italic ff 210.00 scf sf
1950 1575 m
gs 1 -1 sc (Jump Pointer) col0 sh gr
/Times-Roman ff 270.00 scf sf
5550 780 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman ff 270.00 scf sf
150 765 m
gs 1 -1 sc (. . .) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 158 415 a(\(b\))h(Link)o(ed)f(list)h(with)g(jump)f(p)q
(oin)o(ters)42 676 y @beginspecial 0 @llx 0 @lly 348
@urx 96 @ury 504 @rhi @setspecial
%%BeginDocument: graphs/prefetch-3.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-13.0 110.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2828 m -1000 -1000 l 7006 -1000 l 7006 2828 l cp clip
 0.06000 0.06000 sc
7.500 slw
% Ellipse
n 1319 525 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Italic ff 240.00 scf sf
1259 585 m
gs 1 -1 sc (n) col0 sh gr
/Times-Roman ff 150.00 scf sf
1396 644 m
gs 1 -1 sc (i) col0 sh gr
% Ellipse
n 2519 525 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
2521 644 m
gs 1 -1 sc (i+1) col0 sh gr
/Times-Italic ff 240.00 scf sf
2371 569 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 3719 525 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
3721 644 m
gs 1 -1 sc (i+2) col0 sh gr
/Times-Italic ff 240.00 scf sf
3571 569 m
gs 1 -1 sc (n) col0 sh gr
% Ellipse
n 4919 525 277 277 0 360 DrawEllipse gs col0 s gr

/Times-Roman ff 150.00 scf sf
4921 644 m
gs 1 -1 sc (i+3) col0 sh gr
/Times-Italic ff 240.00 scf sf
4771 569 m
gs 1 -1 sc (n) col0 sh gr
% Polyline
gs  clippath
2102 480 m 2222 510 l 2102 540 l 2264 540 l 2264 480 l cp
clip
n 1649 510 m 2249 510 l gs col0 s gr gr

% arrowhead
n 2102 480 m 2222 510 l 2102 540 l 2102 510 l 2102 480 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3302 480 m 3422 510 l 3302 540 l 3464 540 l 3464 480 l cp
clip
n 2849 510 m 3449 510 l gs col0 s gr gr

% arrowhead
n 3302 480 m 3422 510 l 3302 540 l 3302 510 l 3302 480 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4502 480 m 4622 510 l 4502 540 l 4664 540 l 4664 480 l cp
clip
n 4049 510 m 4649 510 l gs col0 s gr gr

% arrowhead
n 4502 480 m 4622 510 l 4502 540 l 4502 510 l 4502 480 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5327 480 m 5447 510 l 5327 540 l 5489 540 l 5489 480 l cp
clip
n 5249 510 m 5474 510 l gs col0 s gr gr

% arrowhead
n 5327 480 m 5447 510 l 5327 540 l 5327 510 l 5327 480 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
902 480 m 1022 510 l 902 540 l 1064 540 l 1064 480 l cp
clip
n 749 510 m 1049 510 l gs col0 s gr gr

% arrowhead
n 902 480 m 1022 510 l 902 540 l 902 510 l 902 480 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 270.00 scf sf
299 525 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Roman ff 270.00 scf sf
5699 540 m
gs 1 -1 sc (. . .) col0 sh gr
/Times-Italic ff 210.00 scf sf
3178 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
3433 1515 m
gs 1 -1 sc (i+2) col-1 sh gr
/Times-Italic ff 210.00 scf sf
3703 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
3958 1515 m
gs 1 -1 sc (i+3) col-1 sh gr
/Times-Italic ff 210.00 scf sf
4228 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
4483 1515 m
gs 1 -1 sc (i+4) col-1 sh gr
/Times-Italic ff 210.00 scf sf
4753 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
5008 1515 m
gs 1 -1 sc (i+5) col-1 sh gr
/Times-Italic ff 210.00 scf sf
2653 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
2908 1515 m
gs 1 -1 sc (i+1) col-1 sh gr
/Times-Italic ff 210.00 scf sf
2128 1470 m
gs 1 -1 sc (&n) col-1 sh gr
/Times-Italic ff 150.00 scf sf
2383 1515 m
gs 1 -1 sc (i) col-1 sh gr
% Polyline
n 2624 1260 m 2624 1560 l gs col-1 s gr 
% Polyline
n 3149 1260 m 3149 1560 l gs col-1 s gr 
% Polyline
n 3674 1260 m 3674 1560 l gs col-1 s gr 
% Polyline
n 4199 1260 m 4199 1560 l gs col-1 s gr 
% Polyline
n 4724 1260 m 4724 1560 l gs col-1 s gr 
% Polyline
 [60] 0 sd
n 2099 1260 m 1424 1260 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 2099 1560 m 1424 1560 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5249 1260 m 5924 1260 l gs col-1 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5249 1560 m 5924 1560 l gs col-1 s gr  [] 0 sd
% Polyline
n 2099 1260 m 5249 1260 l 5249 1560 l 2099 1560 l cp gs col-1 s gr 
/Times-Roman ff 270.00 scf sf
1574 1410 m
gs 1 -1 sc (. . .) col-1 sh gr
/Times-Roman ff 270.00 scf sf
5474 1410 m
gs 1 -1 sc (. . .) col-1 sh gr
% Arc
gs n 1349.0 810.0 75.0 180.0 0.0 arcn
gs col-1 s gr
 gr

% Arc
gs n 2549.0 810.0 75.0 180.0 0.0 arcn
gs col-1 s gr
 gr

% Arc
gs n 3749.0 810.0 75.0 180.0 0.0 arcn
gs col-1 s gr
 gr

% Arc
gs n 4949.0 810.0 75.0 180.0 0.0 arcn
gs col-1 s gr
 gr

% Polyline
gs  clippath
2128 1172 m 2224 1248 l 2103 1226 l 2250 1294 l 2275 1239 l cp
clip
n 1424 885 m 2249 1260 l gs col-1 s gr gr

% arrowhead
n 2128 1172 m 2224 1248 l 2103 1226 l  col-1 s
% Polyline
gs  clippath
1617 828 m 1523 747 l 1644 774 l 1499 701 l 1472 755 l cp
clip
n 2549 1260 m 1499 735 l gs col-1 s gr gr

% arrowhead
n 1617 828 m 1523 747 l 1644 774 l  col-1 s
% Polyline
gs  clippath
2799 1119 m 2835 1236 l 2748 1149 l 2831 1288 l 2882 1257 l cp
clip
n 2624 885 m 2849 1260 l gs col-1 s gr gr

% arrowhead
n 2799 1119 m 2835 1236 l 2748 1149 l  col-1 s
% Polyline
gs  clippath
2746 878 m 2712 758 l 2798 848 l 2718 707 l 2666 737 l cp
clip
n 2999 1260 m 2699 735 l gs col-1 s gr gr

% arrowhead
n 2746 878 m 2712 758 l 2798 848 l  col-1 s
% Polyline
gs  clippath
3564 1164 m 3465 1238 l 3517 1126 l 3416 1253 l 3463 1290 l cp
clip
n 3749 885 m 3449 1260 l gs col-1 s gr gr

% arrowhead
n 3564 1164 m 3465 1238 l 3517 1126 l  col-1 s
% Polyline
gs  clippath
3492 916 m 3584 832 l 3542 949 l 3632 814 l 3582 781 l cp
clip
n 3299 1260 m 3599 810 l gs col-1 s gr gr

% arrowhead
n 3492 916 m 3584 832 l 3542 949 l  col-1 s
% Polyline
gs  clippath
4195 1226 m 4073 1248 l 4170 1172 l 4023 1239 l 4048 1294 l cp
clip
n 4874 885 m 4049 1260 l gs col-1 s gr gr

% arrowhead
n 4195 1226 m 4073 1248 l 4170 1172 l  col-1 s
% Polyline
gs  clippath
4654 774 m 4774 747 l 4681 828 l 4826 755 l 4799 701 l cp
clip
n 3749 1260 m 4799 735 l gs col-1 s gr gr

% arrowhead
n 4654 774 m 4774 747 l 4681 828 l  col-1 s
% Polyline
n 3899 1560 m 3900 1800 l gs col-1 s gr 
% Polyline
n 2324 1560 m 2325 1800 l gs col-1 s gr 
% Polyline
n 2325 1725 m 3900 1725 l gs col-1 s gr 
/Times-Italic ff 210.00 scf sf
4019 1770 m
gs 1 -1 sc (prefetching) col-1 sh gr
/Times-Italic ff 210.00 scf sf
5054 1770 m
gs 1 -1 sc (distance) col-1 sh gr
/Times-Italic ff 210.00 scf sf
224 1485 m
gs 1 -1 sc (Jump Pointer) col0 sh gr
/Times-Italic ff 210.00 scf sf
524 1710 m
gs 1 -1 sc (Array) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 106 712 a(\(c\))h(Link)o(ed)f(list)h(with)g(a)h(jump-p)q
(oin)n(ter)c(arra)o(y)p -76 754 V -68 788 a Fq(Figure)14
b(4:)20 b(Addressing)14 b(the)h(p)q(oin)o(ter-c)o(hasing)e(problem.)-76
950 y Fv(thereb)o(y)e(defeating)g(our)f(goal)h(of)e(hiding)j(the)e
(miss)g(latency)h(of)f Fd(n)858 954 y Ff(i)p Ft(+3)910
950 y Fv(.)-38 991 y(Luk)17 b(and)h(Mo)o(wry)g(prop)q(osed)h(t)o(w)o(o)
e(solutions)i(to)f(the)f(p)q(oin)o(ter-)-76 1033 y(c)o(hasing)f
(problem)g(that)e(are)g(applicabl)q(e)j(to)d(link)o(ed)i(lists)g([13,)e
(14].)-76 1074 y(The)c(\014rst)g(sc)o(heme)g(\()p Fu(data-line)n(ariza)
o(tio)o(n)e(pr)n(efetching)r Fv(\))f(in)o(v)o(olv)o(es)12
b(ar-)-76 1115 y(ranging)j(the)e(no)q(des)i(in)f(memory)f(suc)o(h)h
(that)f(their)h(addresses)h(can)-76 1157 y(b)q(e)i(trivially)j
(calculated)f(without)f(dereferencing)h(an)o(y)e(p)q(oin)o(ters.)-76
1198 y(F)m(or)d(example,)i(if)e(the)h(leaf)f(no)q(des)h(of)f(the)h(B)
582 1182 y Ft(+)607 1198 y Fv(-T)m(ree)f(are)g(arranged)-76
1240 y(sequen)o(tially)i(in)d(con)o(tiguous)i(memory)m(,)d(they)h(w)o
(ould)g(b)q(e)g(trivial)h(to)-76 1281 y(prefetc)o(h.)27
b(Ho)o(w)o(ev)o(er,)17 b(this)g(will)h(only)g(w)o(ork)e(in)h(read-only)
h(situa-)-76 1322 y(tions,)d(and)g(w)o(e)f(w)o(ould)h(lik)o(e)h(to)e
(supp)q(ort)h(frequen)o(t)g(up)q(dates.)21 b(The)-76
1364 y(second)c(sc)o(heme)f(\()p Fu(history-p)n(oint)o(er)e(pr)n
(efetching)r Fv(\))f(in)o(v)o(olv)o(es)18 b(creat-)-76
1405 y(ing)f(new)e(p)q(oin)o(ters|call)q(ed)k Fu(jump)c(p)n(ointers)p
Fv(|whic)o(h)g(p)q(oin)o(t)h(from)-76 1447 y(a)h(no)q(de)g(to)g(the)f
(no)q(de)i(that)e(it)h(should)i(prefetc)o(h.)28 b(F)m(or)16
b(example,)-76 1488 y(Figure)d(4\(b\))f(sho)o(ws)h(ho)o(w)e(no)q(de)i
Fd(n)429 1492 y Ff(i)454 1488 y Fv(could)g(directly)h(prefetc)o(h)e(no)
q(de)-76 1529 y Fd(n)-53 1533 y Ff(i)p Ft(+3)12 1529
y Fv(using)i(three-ahead)g(jump)g(p)q(oin)o(ters.)-38
1571 y(In)19 b(our)h(study)m(,)i(w)o(e)d(will)i(build)h(up)q(on)e(the)g
(concept)h(of)e(jump)-76 1612 y(p)q(oin)o(ters,)g(but)d(customize)i
(them)f(to)f(the)h(sp)q(eci\014c)h(needs)f(of)f(B)882
1596 y Ft(+)908 1612 y Fv(-)-76 1654 y(T)m(ree)d(indices.)20
b(Rather)14 b(than)g(storing)h(jump)e(p)q(oin)o(ters)i(directly)g(in)
-76 1695 y(the)e(leaf)h(no)q(des,)f(w)o(e)g(instead)h(pull)h(them)e
(out)g(in)o(to)h(a)f(separate)g(ar-)-76 1736 y(ra)o(y)m(,)i(whic)o(h)h
(w)o(e)e(call)i(the)f Fu(jump-p)n(ointer)e(arr)n(ay)p
Fv(,)h(as)h(illustrated)i(in)-76 1778 y(Figure)g(4\(c\).)26
b(T)m(o)16 b(initiate)i(prefetc)o(hing,)g(a)e(bac)o(k-p)q(oin)o(ter)i
(in)f(the)-76 1819 y(starting)c(leaf)f(no)q(de)g(is)g(used)g(to)f(lo)q
(cate)i(the)e(leaf)s('s)h(p)q(osition)i(within)-76 1861
y(the)f(jump)g(p)q(oin)o(ter)g(arra)o(y;)g(then)g(based)h(on)e(the)h
(desired)h(prefetc)o(h-)-76 1902 y(ing)d(distance,)h(an)e(arra)o(y)g
(o\013set)g(is)h(adjusted)f(to)g(\014nd)h(the)f(address)g(of)-76
1943 y(the)i(appropriate)h(leaf)f(no)q(de)g(to)f(prefetc)o(h.)17
b(As)11 b(the)h(scan)f(pro)q(ceeds,)-76 1985 y(the)k(prefetc)o(hing)g
(task)g(simply)h(con)o(tin)o(ues)g(to)f(w)o(alk)g(ahead)g(in)g(the)-76
2026 y(jump-p)q(oin)o(ter)g(arra)o(y)e(\(whic)o(h)h(itself)g(is)g(also)
g(prefetc)o(hed\))f(without)-76 2068 y(ha)o(ving)i(to)e(dereference)h
(the)f(actual)h(leaf)f(no)q(des)h(again.)-38 2109 y(Jump-p)q(oin)o(ter)
e(arra)o(ys)g(are)g(more)f(\015exible)j(than)e(jump)g(p)q(oin)o(ters)
-76 2151 y(stored)e(directly)i(in)e(the)g(leaf)g(no)q(des.)17
b(W)m(e)10 b(can)g(adjust)g(the)g(prefetc)o(h-)-76 2192
y(ing)16 b(distance)h(b)o(y)e(simply)i(c)o(hanging)g(the)e(o\013set)g
(used)h(within)g(the)-76 2233 y(arra)o(y)m(.)21 b(This)15
b(allo)o(ws)h(dynamic)g(adaptation)h(to)d(c)o(hanging)i(p)q(erfor-)-76
2275 y(mance)10 b(conditions)i(on)e(a)g(giv)o(en)h(mac)o(hine,)g(or)f
(if)f(the)h(co)q(de)g(migrates)-76 2316 y(to)16 b(di\013eren)o(t)h(mac)
o(hines.)27 b(In)16 b(addition,)j(the)d(same)g(jump-p)q(oin)o(ter)-76
2358 y(arra)o(y)c(can)f(b)q(e)h(reused)f(to)g(target)h(di\013eren)o(t)g
(latencies)h(in)f(the)g(mem-)-76 2399 y(ory)h(hierarc)o(h)o(y)i
(\(e.g.,)d(disk)i(latency)h(vs.)e(memory)g(latency\).)-38
2440 y(F)m(rom)20 b(an)h(abstract)h(p)q(ersp)q(ectiv)o(e,)i(one)e(migh)
o(t)f(think)h(of)f(the)-76 2482 y(jump-p)q(oin)o(ter)14
b(arra)o(y)f(as)f(a)g(single)i(large,)f(con)o(tiguous)i(arra)o(y)m(,)d
(as)g(il-)-76 2523 y(lustrated)g(in)f(Figure)g(5\(a\).)16
b(This)11 b(w)o(ould)g(b)q(e)g(e\016cien)o(t)g(in)g(read-only)-76
2565 y(situations,)h(but)e(in)h(suc)o(h)f(cases)g(w)o(e)f(could)i
(simply)h(arrange)e(the)g(leaf)-76 2606 y(no)q(des)22
b(themselv)o(es)h(con)o(tiguously)h(and)d(use)h Fu(data-line)n(ari)o
(zat)o(ion)-76 2647 y(pr)n(efetching)11 b Fv([13,)j(14].)21
b(Therefore)14 b(a)g(k)o(ey)h(issue)g(in)g(implemen)o(ting)-76
2689 y(jump-p)q(oin)o(ter)g(arra)o(ys)e(is)h(to)f(handle)i(up)q(dates)f
(gracefully)m(.)p 1020 -74 V 1085 286 a @beginspecial
0 @llx 0 @lly 257 @urx 98 @ury 792 @rhi @setspecial
%%BeginDocument: graphs/array.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 106.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2765 m -1000 -1000 l 5415 -1000 l 5415 2765 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 150 1050 m 600 1050 l 600 1200 l 150 1200 l cp gs col0 s gr 
% Polyline
n 900 1050 m 1350 1050 l 1350 1200 l 900 1200 l cp gs col0 s gr 
% Polyline
n 1650 1050 m 2100 1050 l 2100 1200 l 1650 1200 l cp gs col0 s gr 
% Polyline
gs  clippath
753 1095 m 873 1125 l 753 1155 l 915 1155 l 915 1095 l cp
clip
n 525 1125 m 900 1125 l gs col0 s gr gr

% arrowhead
n 753 1095 m 873 1125 l 753 1155 l 753 1125 l 753 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1503 1095 m 1623 1125 l 1503 1155 l 1665 1155 l 1665 1095 l cp
clip
n 1275 1125 m 1650 1125 l gs col0 s gr gr

% arrowhead
n 1503 1095 m 1623 1125 l 1503 1155 l 1503 1125 l 1503 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2253 1095 m 2373 1125 l 2253 1155 l 2415 1155 l 2415 1095 l cp
clip
n 2025 1125 m 2400 1125 l gs col0 s gr gr

% arrowhead
n 2253 1095 m 2373 1125 l 2253 1155 l 2253 1125 l 2253 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3750 1050 m 4200 1050 l 4200 1200 l 3750 1200 l cp gs col0 s gr 
% Polyline
gs  clippath
3603 1095 m 3723 1125 l 3603 1155 l 3765 1155 l 3765 1095 l cp
clip
n 3375 1125 m 3750 1125 l gs col0 s gr gr

% arrowhead
n 3603 1095 m 3723 1125 l 3603 1155 l 3603 1125 l 3603 1095 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 270.00 scf sf
2625 1125 m
gs 1 -1 sc (.  .  .) col0 sh gr
% Polyline
n 750 1575 m 3450 1575 l 3450 1725 l 750 1725 l cp gs col0 s gr 
% Polyline
n 900 1575 m 900 1725 l gs col0 s gr 
% Polyline
n 1050 1575 m 1050 1725 l gs col0 s gr 
% Polyline
n 1200 1575 m 1200 1725 l gs col0 s gr 
% Polyline
n 3300 1575 m 3300 1725 l gs col0 s gr 
% Polyline
n 375 750 m 375 1050 l gs col0 s gr 
% Polyline
n 1125 750 m 1125 1050 l gs col0 s gr 
% Polyline
n 1875 750 m 1875 1050 l gs col0 s gr 
% Polyline
n 3975 750 m 3975 1050 l gs col0 s gr 
% Polyline
n 300 750 m 2175 150 l 4050 750 l 300 750 l  cp gs col0 s gr 
% Polyline
gs  clippath
752 1519 m 807 1629 l 707 1558 l 812 1681 l 858 1642 l cp
448 1256 m 392 1145 l 493 1217 l 388 1094 l 342 1133 l cp
clip
n 375 1125 m 825 1650 l gs col0 s gr gr

% arrowhead
n 448 1256 m 392 1145 l 493 1217 l  col0 s
% arrowhead
n 752 1519 m 807 1629 l 707 1558 l  col0 s
% Polyline
gs  clippath
1044 1517 m 982 1624 l 987 1500 l 942 1656 l 1000 1673 l cp
1056 1258 m 1117 1150 l 1113 1275 l 1158 1119 l 1100 1102 l cp
clip
n 1125 1125 m 975 1650 l gs col0 s gr gr

% arrowhead
n 1056 1258 m 1117 1150 l 1113 1275 l  col0 s
% arrowhead
n 1044 1517 m 982 1624 l 987 1500 l  col0 s
% Polyline
gs  clippath
1263 1590 m 1147 1634 l 1228 1541 l 1096 1634 l 1130 1683 l cp
1737 1185 m 1852 1140 l 1772 1234 l 1904 1141 l 1870 1092 l cp
clip
n 1875 1125 m 1125 1650 l gs col0 s gr gr

% arrowhead
n 1737 1185 m 1852 1140 l 1772 1234 l  col0 s
% arrowhead
n 1263 1590 m 1147 1634 l 1228 1541 l  col0 s
% Polyline
gs  clippath
3505 1576 m 3395 1632 l 3466 1531 l 3344 1637 l 3383 1682 l cp
3845 1199 m 3954 1142 l 3884 1244 l 4006 1138 l 3967 1093 l cp
clip
n 3975 1125 m 3375 1650 l gs col0 s gr gr

% arrowhead
n 3845 1199 m 3954 1142 l 3884 1244 l  col0 s
% arrowhead
n 3505 1576 m 3395 1632 l 3466 1531 l  col0 s
/Times-Roman ff 150.00 scf sf
450 975 m
gs 1 -1 sc (leaf nodes) col0 sh gr
/Times-Roman ff 150.00 scf sf
3600 1725 m
gs 1 -1 sc (address array) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 1425 m
gs 1 -1 sc (back) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 1620 m
gs 1 -1 sc (pointer) col0 sh gr
/Times-Roman ff 180.00 scf sf
2025 525 m
gs 1 -1 sc (Tree) col0 sh gr
/Times-Roman ff 150.00 scf sf
1575 1500 m
gs 1 -1 sc (leaf node addresses) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 1190 327 a(\(a\))f(single)i(arra)o(y)f(with)f(real)h(bac)o
(k-p)q(oin)o(ters)1092 670 y @beginspecial 0 @llx 0 @lly
261 @urx 101 @ury 792 @rhi @setspecial
%%BeginDocument: graphs/lplist.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 109.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2815 m -1000 -1000 l 5482 -1000 l 5482 2815 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 375 750 m 375 1050 l gs col0 s gr 
% Polyline
n 1125 750 m 1125 1050 l gs col0 s gr 
% Polyline
n 1875 750 m 1875 1050 l gs col0 s gr 
% Polyline
n 3975 750 m 3975 1050 l gs col0 s gr 
% Polyline
n 300 750 m 2175 150 l 4050 750 l 300 750 l  cp gs col0 s gr 
% Polyline
n 450 1575 m 1575 1575 l 1575 1725 l 450 1725 l cp gs col0 s gr 
% Polyline
n 600 1575 m 600 1725 l gs col0 s gr 
% Polyline
n 750 1575 m 750 1725 l gs col0 s gr 
% Polyline
n 900 1575 m 900 1725 l gs col0 s gr 
% Polyline
n 1425 1575 m 1425 1725 l gs col0 s gr 
% Polyline
n 3600 1575 m 3600 1725 l gs col0 s gr 
% Polyline
gs  clippath
1653 1620 m 1773 1650 l 1653 1680 l 1815 1680 l 1815 1620 l cp
clip
n 1500 1650 m 1800 1650 l gs col0 s gr gr

% arrowhead
n 1653 1620 m 1773 1650 l 1653 1680 l 1653 1650 l 1653 1620 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2628 1620 m 2748 1650 l 2628 1680 l 2790 1680 l 2790 1620 l cp
clip
n 2475 1650 m 2775 1650 l gs col0 s gr gr

% arrowhead
n 2628 1620 m 2748 1650 l 2628 1680 l 2628 1650 l 2628 1620 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 150 1050 m 600 1050 l 600 1200 l 150 1200 l cp gs col0 s gr 
% Polyline
n 900 1050 m 1350 1050 l 1350 1200 l 900 1200 l cp gs col0 s gr 
% Polyline
n 1650 1050 m 2100 1050 l 2100 1200 l 1650 1200 l cp gs col0 s gr 
% Polyline
gs  clippath
753 1095 m 873 1125 l 753 1155 l 915 1155 l 915 1095 l cp
clip
n 525 1125 m 900 1125 l gs col0 s gr gr

% arrowhead
n 753 1095 m 873 1125 l 753 1155 l 753 1125 l 753 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1503 1095 m 1623 1125 l 1503 1155 l 1665 1155 l 1665 1095 l cp
clip
n 1275 1125 m 1650 1125 l gs col0 s gr gr

% arrowhead
n 1503 1095 m 1623 1125 l 1503 1155 l 1503 1125 l 1503 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2253 1095 m 2373 1125 l 2253 1155 l 2415 1155 l 2415 1095 l cp
clip
n 2025 1125 m 2400 1125 l gs col0 s gr gr

% arrowhead
n 2253 1095 m 2373 1125 l 2253 1155 l 2253 1125 l 2253 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3750 1050 m 4200 1050 l 4200 1200 l 3750 1200 l cp gs col0 s gr 
% Polyline
gs  clippath
3603 1095 m 3723 1125 l 3603 1155 l 3765 1155 l 3765 1095 l cp
clip
n 3375 1125 m 3750 1125 l gs col0 s gr gr

% arrowhead
n 3603 1095 m 3723 1125 l 3603 1155 l 3603 1125 l 3603 1095 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2775 1575 m 3900 1575 l 3900 1725 l 2775 1725 l cp gs col0 s gr 
% Polyline
n 3750 1575 m 3750 1725 l gs col0 s gr 
% Polyline
 [60] 0 sd
n 375 1125 m 675 1575 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1200 1125 m 900 1575 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 1950 1125 m 1200 1575 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3900 1125 m 3525 1575 l gs col0 s gr  [] 0 sd
% Polyline
n 3450 1575 m 3450 1725 l gs col0 s gr 
% Polyline
n 3300 1575 m 3300 1725 l gs col0 s gr 
/Times-Roman ff 270.00 scf sf
2625 1125 m
gs 1 -1 sc (.  .  .) col0 sh gr
/Times-Roman ff 270.00 scf sf
1950 1650 m
gs 1 -1 sc (.  .  .) col0 sh gr
/Times-Roman ff 180.00 scf sf
3825 1725 m
gs 1 -1 sc (/) col0 sh gr
/Times-Roman ff 180.00 scf sf
2025 525 m
gs 1 -1 sc (Tree) col0 sh gr
/Times-Roman ff 150.00 scf sf
3975 1425 m
gs 1 -1 sc (chunked) col0 sh gr
/Times-Roman ff 150.00 scf sf
3975 1620 m
gs 1 -1 sc (linked) col0 sh gr
/Times-Roman ff 150.00 scf sf
3975 1815 m
gs 1 -1 sc (list) col0 sh gr
/Times-Roman ff 150.00 scf sf
150 1350 m
gs 1 -1 sc (hints) col0 sh gr
/Times-Roman ff 150.00 scf sf
2475 1500 m
gs 1 -1 sc (leaf addresses) col0 sh gr
/Times-Roman ff 150.00 scf sf
1050 1650 m
gs 1 -1 sc (.  .  .) col0 sh gr
/Times-Roman ff 150.00 scf sf
2925 1650 m
gs 1 -1 sc (.  .  .) col0 sh gr
/Times-Roman ff 150.00 scf sf
450 975 m
gs 1 -1 sc (leaf nodes) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 1108 711 a(\(b\))f(c)o(h)o(unk)o(ed)h(link)o(ed)h(list)f
(with)g(\\hin)o(t")g(bac)o(k-p)q(oin)o(ters)p 1020 755
V 1131 789 a Fq(Figure)g(5:)20 b(External)15 b(jump-p)q(oin)o(ter)d
(arra)o(ys.)1020 893 y Fw(3.2)50 b(Implementing)12 b(J)o(ump\255P)o
(ointer)g(Arrays)h(to)1132 941 y(Support)e(Ef\002cient)g(Updates)1057
991 y Fv(Let)16 b(us)g(brie\015y)i(consider)f(the)f(problems)h(created)
g(b)o(y)f(up)q(dates)1020 1033 y(if)i(w)o(e)g(attempted)h(to)f(main)o
(tain)i(the)f(jump-p)q(oin)o(ter)g(arra)o(y)g(as)f(a)1020
1074 y(single)h(con)o(tiguous)g(arra)o(y)e(as)g(sho)o(wn)g(in)g(Figure)
h(5\(a\).)28 b(When)18 b(a)1020 1115 y(leaf)h(is)f(deleted,)j(w)o(e)c
(can)i(simply)h(lea)o(v)o(e)f(an)f(empt)o(y)g(slot)h(in)g(the)1020
1157 y(arra)o(y)m(.)26 b(Ho)o(w)o(ev)o(er,)16 b(insertion)i(can)e(b)q
(e)g(v)o(ery)g(exp)q(ensiv)o(e.)27 b(When)17 b(a)1020
1198 y(new)11 b(leaf)g(is)g Fu(inserte)n(d)p Fv(,)e(an)i(empt)o(y)g
(slot)g(needs)h(to)e(b)q(e)h(created)g(in)h(the)1020
1240 y(appropriate)i(p)q(osition)g(for)d(the)g(new)h(jump)g(p)q(oin)o
(ter.)17 b(If)11 b(no)h(nearb)o(y)1020 1281 y(empt)o(y)i(slots)h(could)
g(b)q(e)f(lo)q(cated,)h(this)f(could)h(p)q(oten)o(tially)i(in)o(v)o
(olv)o(e)1020 1322 y(cop)o(ying)j(a)f(v)o(ery)g(large)h(amoun)o(t)f(of)
f(data)h(within)h(the)f(arra)o(y)g(in)1020 1364 y(order)14
b(to)g(create)g(the)g(empt)o(y)g(slot.)20 b(In)14 b(addition,)i(for)e
(eac)o(h)g(jump-)1020 1405 y(p)q(oin)o(ter)k(that)e(is)h(mo)o(v)o(ed)g
(within)h(the)f(arra)o(y)m(,)g(the)f(corresp)q(onding)1020
1447 y(bac)o(k-p)q(oin)o(ter)j(from)f(the)f(leaf)h(no)q(de)g(in)o(to)h
(the)e(arra)o(y)h(also)g(needs)1020 1488 y(to)c(b)q(e)h(up)q(dated,)h
(whic)o(h)f(could)h(b)q(e)f(v)o(ery)g(costly)g(to)q(o.)22
b(Clearly)16 b(w)o(e)1020 1529 y(w)o(ould)e(not)f(w)o(an)o(t)g(to)g(pa)
o(y)h(suc)o(h)f(a)g(high)i(cost)e(up)q(on)h(insertions.)1057
1571 y(W)m(e)i(impro)o(v)o(e)g(up)q(on)h(the)e(naiv)o(e)i(con)o
(tiguous)h(arra)o(y)d(implemen-)1020 1612 y(tation)f(in)g(the)f(follo)o
(wing)i(three)f(w)o(a)o(ys.)j(First,)c(w)o(e)g(break)h(the)f(con-)1020
1654 y(tiguous)19 b(arra)o(y)f(in)o(to)h(a)e(c)o(h)o(unk)o(ed)i(link)o
(ed)h(list|as)f(illustrated)h(in)1020 1695 y(Figure)c(5\(b\)|whic)o(h)g
(allo)o(ws)h(us)e(to)f(limit)j(the)e(impact)h(of)e(an)i(in-)1020
1736 y(sertion)k(to)f(its)h(corresp)q(onding)i(c)o(h)o(unk.)36
b(\(W)m(e)19 b(will)h(discuss)h(the)1020 1778 y(c)o(h)o(unk)14
b(size)g(selection)h(later)e(in)h(Section)h(3.3\).)1057
1819 y(Second,)c(w)o(e)d(activ)o(ely)j(attempt)e(to)f(in)o(terlea)o(v)o
(e)j(empt)o(y)e(slots)h(within)1020 1861 y(the)f(jump-p)q(oin)o(ter)h
(arra)o(y)f(so)g(that)g(insertions)i(can)e(pro)q(ceed)h(quic)o(kly)m(.)
1020 1902 y(During)15 b(bulkload)i(or)d(when)g(a)g(c)o(h)o(unk)g
(splits,)i(the)e(jump)g(p)q(oin)o(ters)1020 1943 y(are)i(stored)h(suc)o
(h)g(that)f(empt)o(y)h(slots)g(are)f(ev)o(enly)h(distributed)i(to)1020
1985 y(maximize)d(the)e(c)o(hance)h(of)f(\014nding)i(a)e(nearb)o(y)h
(empt)o(y)f(slot)h(for)f(in-)1020 2026 y(sertion.)j(When)12
b(a)f(jump-p)q(oin)o(ter)i(is)e(deleted,)i(w)o(e)d(simply)j(lea)o(v)o
(e)f(an)1020 2068 y(empt)o(y)h(slot)h(in)g(the)f(c)o(h)o(unk.)1057
2109 y(Finally)m(,)i(w)o(e)c(alter)h(the)g(meaning)h(of)f(the)g(bac)o
(k-p)q(oin)o(ter)h(in)g(a)f(leaf)1020 2151 y(no)q(de)k(to)e(its)i(p)q
(osition)h(in)f(the)f(jump-p)q(oin)o(ter)h(arra)o(y)f(suc)o(h)h(that)f
(it)1020 2192 y(is)i(merely)h(a)f(hin)o(t.)28 b(The)17
b(p)q(oin)o(ter)h(should)h(p)q(oin)o(t)f(to)e(the)h(correct)1020
2233 y(c)o(h)o(unk,)h(but)f(the)f(p)q(osition)j(within)f(that)f(c)o(h)o
(unk)g(ma)o(y)g(b)q(e)f(impre-)1020 2275 y(cise.)23 b(Therefore)15
b(when)f(mo)o(ving)j(jump)d(p)q(oin)o(ters)j(in)e(a)g(c)o(h)o(unk)g
(for)1020 2316 y(inserting)h(a)e(new)g(leaf)g(address,)h(w)o(e)f(do)g
(not)g(need)h(to)f(up)q(date)h(the)1020 2358 y(hin)o(ts)g(for)e(the)g
(mo)o(v)o(ed)h(jump)g(p)q(oin)o(ters.)19 b(W)m(e)13 b(only)i(up)q(date)
g(a)e Fo(hint)1020 2399 y Fv(\014eld)e(when:)16 b(\(i\))11
b(the)f(precise)h(p)q(osition)i(in)e(the)f(jump-p)q(oin)o(ter)i(arra)o
(y)1020 2440 y(is)e(lo)q(ok)o(ed)i(up)e(during)h(range)g(scan)f(or)g
(insertion,)i(in)e(whic)o(h)h(case)f(the)1020 2482 y(leaf)j(no)q(de)g
(should)h(b)q(e)e(already)i(in)f(cac)o(he)f(and)h(up)q(dating)i(the)d
Fo(hint)1020 2523 y Fv(is)17 b(almost)g(free;)h(and)e(\(ii\))i(when)e
(a)h(c)o(h)o(unk)g(splits)h(and)f(addresses)1020 2565
y(are)12 b(redistributed,)j(in)e(whic)o(h)g(case)g(w)o(e)f(are)g
(forced)g(to)h(up)q(date)g(the)1020 2606 y Fo(hint)p
Fv(s)h(to)h(p)q(oin)o(t)h(to)f(the)h(new)f(c)o(h)o(unk.)24
b(The)15 b(cost)h(of)f(using)h(hin)o(ts,)1020 2647 y(of)d(course,)h(is)
h(that)e(w)o(e)g(need)i(to)e(searc)o(h)h(for)g(the)f(correct)h(lo)q
(cation)1020 2689 y(within)j(the)f(c)o(h)o(unk)h(in)f(some)g(cases.)26
b(In)15 b(practice,)j(ho)o(w)o(ev)o(er,)e(the)p eop
%%Page: 6 6
6 5 bop -76 -34 a Fv(hin)o(ts)19 b(app)q(ear)f(to)f(b)q(e)h(go)q(o)q(d)
g(appro)o(ximations)i(of)d(the)h(true)f(p)q(osi-)-76
7 y(tions,)f(and)f(searc)o(hing)h(for)f(the)f(precise)i(lo)q(cation)h
(is)e(not)g(a)f(costly)-76 48 y(op)q(eration)h(\(e.g.,)d(it)h(should)i
(not)e(incur)i(an)o(y)e(cac)o(he)h(misses\).)-38 90 y(In)d(summary)m(,)
i(the)e(net)h(e\013ect)h(of)e(these)h(three)g(enhancemen)o(ts)i(is)-76
131 y(that)g(nothing)h(mo)o(v)o(es)f(during)h(deletions,)h(t)o
(ypically)g(only)f(a)f(small)-76 173 y(n)o(um)o(b)q(er)20
b(of)g(jump)f(p)q(oin)o(ters)i(\(b)q(et)o(w)o(een)f(the)f(insertion)j
(p)q(osition)-76 214 y(and)e(the)f(nearest)h(empt)o(y)g(slot\))g(mo)o
(v)o(e)f(during)i(insertions,)i(and)-76 256 y(in)13 b(neither)h(case)f
(do)g(w)o(e)f(normally)i(up)q(date)g(the)e Fo(hint)p
Fv(s)f(within)j(the)-76 297 y(leaf)g(no)q(des.)k(Th)o(us)13
b(w)o(e)f(exp)q(ect)i(jump-p)q(oin)o(ter)g(arra)o(ys)g(to)f(p)q(erform)
-76 338 y(w)o(ell)h(during)h(up)q(dates.)-76 420 y Fw(3.3)50
b(Algorithm)12 b(and)g(Qualitative)d(Analysis)-38 470
y Fv(Ha)o(ving)j(describ)q(ed)h(the)e(data)g(structure)h(to)f
(facilitate)i(prefetc)o(h-)-76 511 y(ing,)g(w)o(e)f(no)o(w)g(describ)q
(e)i(our)e(prefetc)o(hing)i(algorithm.)k(Recall)c(that)-76
552 y(the)f(basic)h(range)f(scan)h(algorithm)g(consists)g(of)f(a)g(lo)q
(op)h(that)f(visits)-76 594 y(a)k(leaf)f(on)h(eac)o(h)g(iteration)h(b)o
(y)f(follo)o(wing)h(a)f Fo(next-lea)o(f)c Fv(p)q(oin)o(ter.)-76
635 y(T)m(o)e(supp)q(ort)h(prefetc)o(hing,)h(w)o(e)e(add)g(prefetc)o
(hes)h(b)q(oth)g(prior)g(to)f(this)-76 677 y(lo)q(op)19
b(\(for)e(the)h Fu(startup)g Fv(phase\),)h(and)f(inside)h(the)f(lo)q
(op)h(\(for)e(the)-76 718 y Fu(ste)n(ady-state)f Fv(phase\).)31
b(Let)17 b Fd(k)h Fv(b)q(e)f(the)h(desired)g Fu(pr)n(efetching)d(dis-)
-76 759 y(tanc)n(e)p Fv(,)10 b(in)k(units)f(of)f(leaf)h(no)q(des)h(\(w)
o(e)d(discuss)k(b)q(elo)o(w)e(ho)o(w)f(to)g(select)-76
801 y Fd(k)q Fv(\).)29 b(During)18 b(the)f(startup)h(phase,)g(w)o(e)f
(issue)h(prefetc)o(hes)f(for)g(the)-76 842 y(\014rst)c
Fd(k)g Fv(leaf)g(no)q(des.)212 826 y Ft(3)248 842 y Fv(These)f(prefetc)
o(hes)h(pro)q(ceed)h(in)f(parallel,)i(ex-)-76 884 y(ploiting)f(the)e(a)
o(v)n(ailable)i(memory)e(hierarc)o(h)o(y)h(bandwidth.)19
b(During)-76 925 y(eac)o(h)14 b(lo)q(op)h(iteration)h(\(i.e.)d(in)i
(the)f(steady-state)g(phase\),)h(prior)f(to)-76 966 y(visiting)h(the)e
(curren)o(t)g(leaf)f(no)q(de)i(in)f(the)f(range)h(scan,)g(w)o(e)f
(prefetc)o(h)-76 1008 y(the)e(leaf)h(no)q(de)g(that)f(is)h
Fd(k)f Fv(no)q(des)h(after)f(the)g(curren)o(t)h(leaf)g(no)q(de.)16
b(The)-76 1049 y(goal)e(is)f(to)g(ensure)g(that)g(b)o(y)g(the)g(time)g
(the)g(basic)h(range)f(scan)g(lo)q(op)-76 1091 y(is)g(ready)g(to)f
(visit)h(a)f(leaf)h(no)q(de,)g(that)f(no)q(de)h(is)g(already)h(prefetc)
o(hed)-76 1132 y(in)o(to)i(the)g(cac)o(he.)25 b(With)16
b(this)g(framew)o(ork)g(in)g(mind,)h(w)o(e)e(no)o(w)g(de-)-76
1173 y(scrib)q(e)f(further)g(details)g(of)f(our)g(algorithm.)-38
1215 y(First,)23 b(in)e(the)g(startup)h(phase,)i(w)o(e)c(m)o(ust)h(lo)q
(cate)h(the)f(jump)-76 1256 y(p)q(oin)o(ter)d(of)e(the)h(starting)g
(leaf)g(within)h(the)e(jump-p)q(oin)o(ter)i(arra)o(y)m(.)-76
1298 y(T)m(o)11 b(do)h(this,)h(w)o(e)e(follo)o(w)h(the)g
Fo(hint)e Fv(p)q(oin)o(ter)j(from)e(the)h(starting)h(leaf)-76
1339 y(to)g(see)f(whether)h(it)g(is)g(precise|i.e.)h(whether)f(the)g
Fo(hint)d Fv(p)q(oin)o(ts)k(to)-76 1381 y(a)k(p)q(oin)o(ter)g(bac)o(k)g
(to)g(the)f(starting)i(leaf.)31 b(If)17 b(not,)h(then)g(w)o(e)f(start)
-76 1422 y(searc)o(hing)c(within)g(the)e(c)o(h)o(unk)h(in)g(b)q(oth)g
(directions)h(relativ)o(e)g(to)e(the)-76 1463 y(hin)o(t)16
b(p)q(osition)h(un)o(til)g(the)e(matc)o(hing)h(p)q(osition)i(is)d
(found.)24 b(As)14 b(dis-)-76 1505 y(cussed)f(earlier,)h(the)f
(distance)h(b)q(et)o(w)o(een)e(the)h(hin)o(t)g(and)g(the)g(actual)-76
1546 y(p)q(osition)i(app)q(ears)g(to)e(b)q(e)g(small)h(in)g(practice.)
-38 1588 y(Second,)i(w)o(e)f(need)h(to)f(prefetc)o(h)h(the)f(jump-p)q
(oin)o(ter)i(c)o(h)o(unks)f(as)-76 1629 y(w)o(ell)c(as)f(the)f(leaf)i
(no)q(des,)f(and)h(handle)g(empt)o(y)f(slots)h(in)g(the)e(c)o(h)o
(unks.)-76 1670 y(During)17 b(the)e(startup)g(phase,)h(b)q(oth)g(the)f
(curren)o(t)h(c)o(h)o(unk)f(and)h(the)-76 1712 y(next)10
b(c)o(h)o(unk)g(are)f(prefetc)o(hed.)16 b(When)10 b(lo)q(oking)h(for)e
(a)g(jump)g(p)q(oin)o(ter,)-76 1753 y(w)o(e)14 b(test)h(for)f(and)i
(skip)f(all)h(empt)o(y)f(slots.)23 b(If)14 b(the)h(end)g(of)f(the)h
(cur-)-76 1795 y(ren)o(t)g(c)o(h)o(unk)h(is)g(reac)o(hed,)g(w)o(e)f
(will)h(go)g(to)f(the)g(next)g(c)o(h)o(unk)h(to)f(get)-76
1836 y(the)e(\014rst)f(non-empt)o(y)h(jump-p)q(oin)o(ter)h(\(there)f
(is)g(at)f(least)h(one)g(non-)-76 1877 y(empt)o(y)e(jump)f(p)q(oin)o
(ter)i(or)e(the)h(c)o(h)o(unk)g(should)h(ha)o(v)o(e)f(b)q(een)g
(deleted\).)-76 1919 y(W)m(e)h(then)h(prefetc)o(h)f(the)g(next)g(c)o(h)
o(unk)h(ahead)g(in)g(the)f(jump-p)q(oin)o(ter)-76 1960
y(arra)o(y)m(.)30 b(Because)19 b(w)o(e)d(alw)o(a)o(ys)j(prefetc)o(h)e
(the)h(next)g(c)o(h)o(unk)g(b)q(efore)-76 2002 y(prefetc)o(hing)c(an)o
(y)g(leaf)f(no)q(des)g(p)q(oin)o(ted)i(to)d(b)o(y)h(the)g(curren)o(t)h
(c)o(h)o(unk,)-76 2043 y(w)o(e)e(exp)q(ect)h(the)f(next)h(c)o(h)o(unk)g
(to)f(b)q(e)g(in)h(the)g(cac)o(he)f(b)o(y)h(the)f(time)h(w)o(e)-76
2084 y(access)h(it.)-38 2126 y(Third,)d(although)i(the)e(actual)h(n)o
(um)o(b)q(er)f(of)g Fo(tupleID)p Fv(s)c(in)12 b(the)f(leaf)-76
2167 y(no)q(de)j(is)g(unkno)o(wn)g(when)f(w)o(e)g(do)g(range)h(prefetc)
o(hing,)g(w)o(e)f(will)h(as-)-76 2209 y(sume)e(that)g(the)g(leaf)g(is)g
(full)h(and)f(prefetc)o(h)g(the)g(return)g(bu\013er)h(area)-76
2250 y(accordingly)m(.)18 b(Th)o(us)9 b(the)g(return)h(bu\013er)f(will)
i(alw)o(a)o(ys)e(b)q(e)h(prefetc)o(hed)-76 2291 y(su\016cien)o(tly)15
b(early)m(.)-38 2333 y(W)m(e)10 b(no)o(w)g(discuss)i(ho)o(w)f(to)f
(select)h(the)g(prefetc)o(hing)h(distance)g(and)-76 2374
y(the)h(c)o(h)o(unk)h(size.)-38 2448 y Fq(Selecting)f(the)i(prefetc)o
(hing)e(distance)h Fd(k)q Fq(.)34 b Fv(The)13 b Fu(pr)n(efetch-)-76
2489 y(ing)i(distanc)n(e)g Fv(\()p Fd(k)q Fv(,)h(in)g(units)g(of)f(no)q
(des)h(to)g(prefetc)o(h)f(ahead\))h(is)g(se-)p -76 2526
399 2 v -76 2550 a Fn(3)-59 2563 y Fm(Note)8 b(that)h(the)g(bu\013er)g
(area)f(to)g(hold)i(the)f(resulting)h Fc(tupleID)p Fm(s)j(needs)c(also)
g(to)-76 2594 y(b)q(e)k(prefetc)o(hed;)i(to)e(simplify)j(presen)o
(tation,)e(when)f(w)o(e)g(refer)g(to)f(\\prefetc)o(h-)-76
2626 y(ing)j(a)f(leaf)g(no)q(de")g(in)h(the)f(range)g(scan)g
(algorithm,)i(w)o(e)e(mean)g(prefetc)o(hing)-76 2657
y(the)e(cac)o(he)g(lines)h(for)f(b)q(oth)h(the)f(leaf)g(no)q(de)g(and)h
(the)f(bu\013er)h(area)e(where)g(the)-76 2689 y Fc(tupleID)p
Fm(s)k(are)10 b(to)h(b)q(e)g(stored.)1020 -34 y Fv(lected)g(as)g(follo)
o(ws.)17 b(Normally)11 b(this)g(quan)o(tit)o(y)h(is)f(deriv)o(ed)h(b)o
(y)e(divid-)1020 7 y(ing)17 b(the)f(exp)q(ected)h(w)o(orst-case)g(miss)
f(latency)i(b)o(y)e(the)g(computa-)1020 48 y(tion)f(time)f(sp)q(en)o(t)
g(on)h(one)f(leaf)g(no)q(de)h(\(similar)h(to)d(what)h(has)g(b)q(een)
1020 90 y(done)19 b(in)f(other)h(con)o(texts)f([16]\).)32
b(Ho)o(w)o(ev)o(er,)18 b(b)q(ecause)h(the)f(com-)1020
131 y(putation)e(time)e(asso)q(ciated)i(with)f(visiting)i(a)d(leaf)g
(no)q(de)h(during)h(a)1020 173 y(range)c(scan)f(is)h(quite)g(small)g
(relativ)o(e)g(to)f(the)g(miss)h(latency)m(,)g(w)o(e)f(will)1020
214 y(assume)16 b(that)g(the)f(limiting)j(factor)d(is)h(the)g(memory)f
(bandwidth.)1020 256 y(Roughly)i(sp)q(eaking,)f(w)o(e)e(can)h(estimate)
h(this)f(bandwidth-limi)q(ted)1020 297 y(prefetc)o(hing)g(distance)f
(as)1427 369 y Fd(k)e Fv(=)1500 317 y Fa(\030)1527 345
y Fd(B)p 1527 361 31 2 v 1528 395 a(w)1563 317 y Fa(\031)1592
369 y Fd(;)364 b Fv(\(2\))1020 465 y(where)12 b Fd(B)i
Fv(is)f(the)f(normalized)j(memory)e(bandwidth)h(and)f
Fd(w)f Fv(is)h(the)1020 506 y(n)o(um)o(b)q(er)j(of)e(cac)o(he)h(lines)i
(p)q(er)e(leaf)g(no)q(de,)h(as)f(de\014ned)h(in)f(T)m(able)g(1.)1020
547 y(In)g(practice,)i(there)f(is)g(no)f(problem)i(with)f(increasing)i
Fd(k)e Fv(a)f(bit)h(to)1020 589 y(create)c(some)h(extra)f(slac)o(k,)h
(b)q(ecause)g(an)o(y)f(prefetc)o(hes)h(that)f(cannot)1020
630 y(pro)q(ceed)i(are)f(simply)i(bu\013ered)f(within)h(the)e(memory)g
(system.)1956 614 y Ft(4)1057 701 y Fq(Selecting)20 b(the)i(c)o(h)o
(unk)e(size)i Fd(c)p Fq(.)57 b Fv(Ch)o(unks)20 b(m)o(ust)g(b)q(e)f
(suf-)1020 743 y(\014cien)o(tly)f(large)e(to)g(ensure)g(that)g(w)o(e)f
(only)h(need)g(to)g(prefetc)o(h)g(one)1020 784 y(c)o(h)o(unk)11
b(ahead)g(to)f(hide)h(the)f(miss)g(latency)i(of)d(accessing)j(the)e(c)o
(h)o(unks)1020 825 y(themselv)o(es.)24 b(Recall)16 b(that)f(during)i
(the)d(steady-state)i(phase)g(of)e(a)1020 867 y(range)j(scan,)g(when)f
(w)o(e)g(get)g(to)f(a)h(new)g(c)o(h)o(unk,)i(w)o(e)d(immediately)1020
908 y(prefetc)o(h)j(the)f(next)h(c)o(h)o(unk)g(ahead)g(so)f(that)h(w)o
(e)e(can)i(o)o(v)o(erlap)h(its)1020 950 y(fetc)o(h)14
b(time)g(with)h(the)f(time)g(it)g(tak)o(es)h(to)e(prefetc)o(h)i(the)f
(leaf)g(no)q(des)1020 991 y(asso)q(ciated)i(with)e(the)g(curren)o(t)g
(c)o(h)o(unk.)20 b(Since)15 b(the)f(memory)g(hier-)1020
1033 y(arc)o(h)o(y)e(only)g(has)g(enough)h(bandwidth)g(to)e(initiate)i
Fd(B)g Fv(cac)o(he)f(misses)1020 1074 y(during)20 b(the)e(time)g(it)h
(tak)o(es)f(one)h(cac)o(he)f(miss)h(to)f(complete,)i(the)1020
1115 y(c)o(h)o(unks)f(w)o(ould)f(clearly)h(b)q(e)f(large)g(enough)g(to)
g(hide)g(the)g(latency)1020 1157 y(of)c(fetc)o(hing)g(the)g(next)g(c)o
(h)o(unk)h(if)f(they)g(con)o(tained)i(at)e(least)g Fd(B)i
Fv(leaf)1020 1198 y(p)q(oin)o(ters)d(\(there)e(is)h(at)g(least)g(one)f
(cac)o(he)h(line)h(access)f(for)f(ev)o(ery)h(leaf)1020
1240 y(visit\).)18 b(F)m(or)12 b(a)g(full)h(tree)e(with)i(no)f(empt)o
(y)g(leaf)g(slots)h(and)g(no)f(empt)o(y)1020 1281 y(c)o(h)o(unk)h
(slots,)f(eac)o(h)g(cac)o(he)g(line)h(can)f(hold)h(2)p
Fd(m)f Fv(leaf)g(p)q(oin)o(ters)h(\(since)1020 1322 y(there)i(are)f
(only)h(p)q(oin)o(ters)h(and)f(no)g(k)o(eys\),)f(in)h(whic)o(h)g(case)g
(w)o(e)f(can)1020 1364 y(estimate)g(the)f(minim)o(um)i(c)o(h)o(unk)f
(size)f(in)h(units)g(of)f(cac)o(he)h(lines)g(as)1422
1452 y Fd(c)c Fv(=)1490 1399 y Fa(\030)1528 1428 y Fd(B)p
1517 1443 54 2 v 1517 1477 a Fv(2)p Fd(m)1575 1399 y
Fa(\031)1604 1452 y Fd(:)352 b Fv(\(3\))1020 1547 y(T)m(o)14
b(accoun)o(t)h(for)f(empt)o(y)h(c)o(h)o(unk)g(slots,)g(w)o(e)f(can)h(m)
o(ultiply)i(the)d(de-)1020 1589 y(nominator)i(in)f(equation)g(\(3\))f
(b)o(y)h(the)f(o)q(ccupancy)h(of)f(c)o(h)o(unk)h(slots)1020
1630 y(\(a)10 b(v)n(alue)h(similar)i(to)d(the)g Fu(bulklo)n(ad)e
(factor)p Fv(\),)h(whic)o(h)i(w)o(ould)g(increase)1020
1671 y Fd(c)j Fv(somewhat.)22 b(Another)15 b(factor)g(that)g(could)h
(\(in)f(theory\))g(dictate)1020 1713 y(the)f(minim)o(um)i(c)o(h)o(unk)f
(size)g(is)f(that)g(eac)o(h)h(c)o(h)o(unk)g(should)h(con)o(tain)1020
1754 y(at)11 b(least)g Fd(k)h Fv(leaf)f(p)q(oin)o(ters)h(so)f(that)g
(our)g(prefetc)o(hing)h(algorithm)h(can)1020 1796 y(get)g(su\016cien)o
(tly)i(far)d(ahead.)18 b(Ho)o(w)o(ev)o(er,)12 b(since)i
Fd(k)e Fp(\024)f Fd(B)j Fv(from)f(equa-)1020 1837 y(tion)h(\(2\),)e
(the)h(c)o(h)o(unk)h(size)f(in)h(equation)g(\(3\))f(should)h(b)q(e)f
(su\016cien)o(t.)1020 1878 y(Increasing)i Fd(c)d Fv(b)q(ey)o(ond)i
(this)g(minim)o(um)g(v)n(alue)g(to)f(create)g(some)g(ex-)1020
1920 y(tra)i(slac)o(k)h(for)f(empt)o(y)g(leaf)g(no)q(des)h(and)g(empt)o
(y)f(c)o(h)o(unk)h(slots)f(do)q(es)1020 1961 y(not)e(h)o(urt)h(p)q
(erformance)g(in)f(practice.)1579 1945 y Ft(4)1057 2032
y Fq(Remarks.)37 b Fv(Giv)o(en)15 b(su\016cien)o(t)g(memory)f(system)g
(bandwidth,)1020 2074 y(our)f(prefetc)o(hing)h(sc)o(heme)e(hides)i(the)
f(full)g(memory)g(latency)h(exp)q(e-)1020 2115 y(rienced)i(at)e(ev)o
(ery)g(leaf)h(no)q(de)g(visited)h(during)g(range)f(scan)g(op)q(era-)
1020 2157 y(tions.)32 b(With)10 b(the)f(data)h(structure)f(impro)o(v)o
(emen)o(ts)i(in)e(Section)i(3.2,)1020 2198 y(w)o(e)i(also)h(exp)q(ect)f
(go)q(o)q(d)h(p)q(erformance)g(on)f(up)q(dates.)1057
2239 y(Ho)o(w)o(ev)o(er,)18 b(there)g(is)g(a)g(space)g(o)o(v)o(erhead)h
(asso)q(ciated)g(with)f(the)1020 2281 y(jump-p)q(oin)o(ter)d(arra)o(y)m
(.)i(Since)d(the)f(jump)g(p)q(oin)o(ter)h(arra)o(y)g(only)g(con-)1020
2322 y(tains)h(one)g(p)q(oin)o(ter)h(p)q(er)f(leaf)f(no)q(de,)i(the)e
(space)h(o)o(v)o(erhead)h(is)f(rela-)1020 2364 y(tiv)o(ely)c(small.)18
b(Since)11 b(a)e(next-leaf)i(p)q(oin)o(ter)g(and)g(a)e(bac)o(k-p)q(oin)
o(ter)j(are)1020 2405 y(stored)i(in)f(ev)o(ery)h(leaf,)f(there)h(are)f
(at)g(most)g Fd(d)8 b Fp(\000)h Fv(2)k Fp(h)p Fo(key)p
Fv(,)e Fo(tupleID)p Fp(i)1020 2446 y Fv(pairs)17 b(in)g(ev)o(ery)f
(leaf)g(no)q(des)h(\()p Fd(d)e Fv(is)i(de\014ned)g(in)f(T)m(able)h
(1\).)25 b(So)16 b(the)1020 2488 y(jump)e(p)q(oin)o(ter)h(for)e(a)h
(full)g(leaf)g(no)q(de)h(only)f(tak)o(es)1806 2473 y
Ft(1)p 1766 2480 95 2 v 1766 2500 a(2\()p Ff(d)p Fb(\000)p
Ft(2\))1879 2488 y Fv(as)g(m)o(uc)o(h)1020 2537 y(space)d(as)f(the)g
(leaf)g(no)q(de.)17 b(Giv)o(en)11 b(our)f(tec)o(hnique)i(describ)q(ed)g
(earlier)1020 2578 y(in)h(Section)h(2)e(for)g(creating)h(wider)g(B)1564
2562 y Ft(+)1589 2578 y Fv(-T)m(ree)f(no)q(des,)h(the)f(resulting)1020
2620 y(increase)f(in)g(the)f(fanout)g Fd(d)g Fv(will)h(help)g(reduce)g
(this)g(o)o(v)o(erhead.)17 b(Ho)o(w-)p 1020 2652 399
2 v 1020 2676 a Fn(4)1037 2689 y Fm(Details)11 b(are)f(in)i(the)g(full)
g(pap)q(er)f([7].)p eop
%%Page: 7 7
7 6 bop -76 -74 997 2 v -63 196 a @beginspecial 0 @llx
0 @lly 299 @urx 74 @ury 576 @rhi @setspecial
%%BeginDocument: graphs/bptr.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-49.0 82.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 2362 m -1000 -1000 l 6787 -1000 l 6787 2362 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1275 900 m 1200 900 1200 975 75 arcto 4 {pop} repeat
  1200 1050 1725 1050 75 arcto 4 {pop} repeat
  1800 1050 1800 975 75 arcto 4 {pop} repeat
  1800 900 1275 900 75 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1275 1050 m 1050 1200 l gs col0 s gr 
% Polyline
n 1725 1050 m 1950 1200 l gs col0 s gr 
% Polyline
n 1425 1050 m 1275 1200 l gs col0 s gr 
% Polyline
gs  clippath
1802 1245 m 1861 1275 l 1802 1305 l 1890 1305 l 1890 1245 l cp
clip
n 1650 1275 m 1875 1275 l gs col0 s gr gr

% arrowhead
n 1802 1245 m 1861 1275 l 1802 1305 l 1802 1275 l 1802 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1275 1200 m 1425 1200 l 1425 1350 l 1275 1350 l cp gs col0 s gr 
% Polyline
n 1875 1200 m 2025 1200 l 2025 1350 l 1875 1350 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 1425 1275 m 1575 1275 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
1202 1245 m 1261 1275 l 1202 1305 l 1290 1305 l 1290 1245 l cp
clip
n 1125 1275 m 1275 1275 l gs col0 s gr gr

% arrowhead
n 1202 1245 m 1261 1275 l 1202 1305 l 1202 1275 l 1202 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 975 1200 m 1125 1200 l 1125 1350 l 975 1350 l cp gs col0 s gr 
% Polyline
n 2475 900 m 2400 900 2400 975 75 arcto 4 {pop} repeat
  2400 1050 2925 1050 75 arcto 4 {pop} repeat
  3000 1050 3000 975 75 arcto 4 {pop} repeat
  3000 900 2475 900 75 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 2475 1050 m 2250 1200 l gs col0 s gr 
% Polyline
n 2925 1050 m 3150 1200 l gs col0 s gr 
% Polyline
n 2625 1050 m 2475 1200 l gs col0 s gr 
% Polyline
gs  clippath
3002 1245 m 3061 1275 l 3002 1305 l 3090 1305 l 3090 1245 l cp
clip
n 2850 1275 m 3075 1275 l gs col0 s gr gr

% arrowhead
n 3002 1245 m 3061 1275 l 3002 1305 l 3002 1275 l 3002 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2475 1200 m 2625 1200 l 2625 1350 l 2475 1350 l cp gs col0 s gr 
% Polyline
n 3075 1200 m 3225 1200 l 3225 1350 l 3075 1350 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2625 1275 m 2775 1275 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
2402 1245 m 2461 1275 l 2402 1305 l 2490 1305 l 2490 1245 l cp
clip
n 2325 1275 m 2475 1275 l gs col0 s gr gr

% arrowhead
n 2402 1245 m 2461 1275 l 2402 1305 l 2402 1275 l 2402 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2175 1200 m 2325 1200 l 2325 1350 l 2175 1350 l cp gs col0 s gr 
% Polyline
n 5025 900 m 4950 900 4950 975 75 arcto 4 {pop} repeat
  4950 1050 5475 1050 75 arcto 4 {pop} repeat
  5550 1050 5550 975 75 arcto 4 {pop} repeat
  5550 900 5025 900 75 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5025 1050 m 4800 1200 l gs col0 s gr 
% Polyline
n 5475 1050 m 5700 1200 l gs col0 s gr 
% Polyline
n 5175 1050 m 5025 1200 l gs col0 s gr 
% Polyline
gs  clippath
5552 1245 m 5611 1275 l 5552 1305 l 5640 1305 l 5640 1245 l cp
clip
n 5400 1275 m 5625 1275 l gs col0 s gr gr

% arrowhead
n 5552 1245 m 5611 1275 l 5552 1305 l 5552 1275 l 5552 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 5025 1200 m 5175 1200 l 5175 1350 l 5025 1350 l cp gs col0 s gr 
% Polyline
n 5625 1200 m 5775 1200 l 5775 1350 l 5625 1350 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 5175 1275 m 5325 1275 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
4952 1245 m 5011 1275 l 4952 1305 l 5040 1305 l 5040 1245 l cp
clip
n 4875 1275 m 5025 1275 l gs col0 s gr gr

% arrowhead
n 4952 1245 m 5011 1275 l 4952 1305 l 4952 1275 l 4952 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4725 1200 m 4875 1200 l 4875 1350 l 4725 1350 l cp gs col0 s gr 
% Polyline
gs  clippath
2327 945 m 2386 975 l 2327 1005 l 2415 1005 l 2415 945 l cp
clip
n 1800 975 m 2400 975 l gs col0 s gr gr

% arrowhead
n 2327 945 m 2386 975 l 2327 1005 l 2327 975 l 2327 945 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3377 945 m 3436 975 l 3377 1005 l 3465 1005 l 3465 945 l cp
clip
n 3000 975 m 3450 975 l gs col0 s gr gr

% arrowhead
n 3377 945 m 3436 975 l 3377 1005 l 3377 975 l 3377 945 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2102 1245 m 2161 1275 l 2102 1305 l 2190 1305 l 2190 1245 l cp
clip
n 2025 1275 m 2175 1275 l gs col0 s gr gr

% arrowhead
n 2102 1245 m 2161 1275 l 2102 1305 l 2102 1275 l 2102 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4877 945 m 4936 975 l 4877 1005 l 4965 1005 l 4965 945 l cp
clip
n 4575 975 m 4950 975 l gs col0 s gr gr

% arrowhead
n 4877 945 m 4936 975 l 4877 1005 l 4877 975 l 4877 945 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4652 1245 m 4711 1275 l 4652 1305 l 4740 1305 l 4740 1245 l cp
clip
n 4575 1275 m 4725 1275 l gs col0 s gr gr

% arrowhead
n 4652 1245 m 4711 1275 l 4652 1305 l 4652 1275 l 4652 1245 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
n 3225 1275 m 4575 1275 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 3450 975 m 4575 975 l gs col0 s gr  [] 0 sd
% Polyline
n 2700 750 m 2700 900 l gs col0 s gr 
% Polyline
n 1500 750 m 1500 900 l gs col0 s gr 
% Polyline
n 5250 750 m 5250 900 l gs col0 s gr 
% Polyline
n 1425 750 m 5325 750 l 3375 150 l 1425 750 l  cp gs col0 s gr 
/Times-Roman-iso ff 180.00 scf sf
3225 525 m
gs 1 -1 sc (Tree) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
825 675 m
gs 1 -1 sc (Bottom) col0 sh gr
/Times-Roman-iso ff 150.00 scf sf
825 825 m
gs 1 -1 sc (non-leaf) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial -76 227 V 41 262 a Fq(Figure)14 b(6:)20
b(In)o(ternal)14 b(jump-p)q(oin)o(ter)e(arra)o(ys.)-76
343 y Fv(ev)o(er,)e(if)g(this)g(space)g(o)o(v)o(erhead)g(is)g(still)h
(a)f(concern,)g(w)o(e)f(no)o(w)h(describ)q(e)-76 385
y(ho)o(w)j(it)h(can)f(b)q(e)g(reduced)h(further.)-76
462 y Fw(3.4)50 b(Inter)o(nal)12 b(J)o(ump\255P)o(ointer)g(Arrays)-38
512 y Fv(So)f(far)f(w)o(e)h(ha)o(v)o(e)g(describ)q(ed)i(ho)o(w)d(a)h
(jump-p)q(oin)o(ter)i(arra)o(y)e(can)g(b)q(e)-76 553
y(implemen)o(ted)17 b(b)o(y)e(creating)i(a)e(new)f Fu(external)j
Fv(structure)e(to)g(store)-76 595 y(the)f(jump)f(p)q(oin)o(ters)i(\(as)
f(illustrated)i(earlier)f(in)f(Figure)h(5\).)j(Ho)o(w-)-76
636 y(ev)o(er,)g(there)f(is)g(an)g(existing)i(structure)e
Fu(within)i Fv(a)d(B)721 620 y Ft(+)747 636 y Fv(-T)m(ree)g(that)-76
678 y(already)d(con)o(tains)g(p)q(oin)o(ters)g(to)e(the)g(leaf)h(no)q
(des,)g(namely)m(,)h(the)e Fu(p)n(ar-)-76 719 y(ents)h
Fv(of)f(the)f(leaf)h(no)q(des.)18 b(W)m(e)10 b(will)i(refer)f(to)f
(these)h(paren)o(t)h(no)q(des)f(as)-76 761 y(the)i Fu(b)n(ottom)f
(non-le)n(af)f(no)n(des)p Fv(.)k(The)d(c)o(hild)j(p)q(oin)o(ters)f
(within)g(a)f(b)q(ot-)-76 802 y(tom)e(non-leaf)h(no)q(de)g(corresp)q
(ond)h(to)e(the)g(jump-p)q(oin)o(ters)i(within)f(a)-76
843 y(c)o(h)o(unk)k(of)e(the)g(external)i(jump-p)q(oin)o(ter)g(arra)o
(y)f(describ)q(ed)h(in)f(Sec-)-76 885 y(tion)f(3.2.)k(A)13
b(k)o(ey)h(di\013erence,)h(ho)o(w)o(ev)o(er,)f(is)g(that)f(there)h(is)g
(no)g(easy)-76 926 y(w)o(a)o(y)d(to)h(tra)o(v)o(erse)g(these)f(b)q
(ottom)h(non-leaf)h(no)q(des)f(quic)o(kly)i(enough)-76
968 y(to)i(p)q(erform)g(prefetc)o(hing.)27 b(A)15 b(p)q(oten)o(tial)j
(solution)g(is)f(to)e(connect)-76 1009 y(these)h(b)q(ottom)g(non-leaf)g
(no)q(des)h(together)f(in)g(leaf)g(k)o(ey)f(order)h(us-)-76
1050 y(ing)g(link)o(ed-li)q(st)i(p)q(oin)o(ters.)25 b(\(Note)15
b(that)h(this)g(is)g(sometimes)g(done)-76 1092 y(already)f(for)d
(concurrency)j(con)o(trol)f(purp)q(oses)h([22].\))-38
1133 y(Figure)d(6)g(illustrates)i(the)e Fu(internal)h
Fv(jump-p)q(oin)o(ter)g(arra)o(y)m(.)j(Note)-76 1175
y(that)g(leaf)f(no)q(des)i(do)e(not)h(con)o(tain)h(bac)o(k-p)q(oin)o
(ters)g(to)e(their)h(p)q(osi-)-76 1216 y(tions)h(within)f(their)g
(paren)o(ts.)25 b(It)15 b(turns)h(out)f(that)h(suc)o(h)g(p)q(oin)o
(ters)-76 1257 y(are)e(not)g(necessary)g(for)g(this)g(in)o(ternal)i
(implemen)o(tation,)g(b)q(ecause)-76 1299 y(the)i(p)q(osition)i(will)f
(b)q(e)f(determined)h(during)h(the)d(searc)o(h)i(for)e(the)-76
1340 y(starting)h(k)o(ey)m(.)26 b(If)15 b(w)o(e)h(simply)i(retain)f
(the)g(result)g(of)e(the)i(b)q(ottom)-76 1382 y(non-leaf)f(no)q(de's)g
(binary)h(searc)o(h,)f(w)o(e)e(will)j(ha)o(v)o(e)f(the)f(p)q(osition)i
(to)-76 1423 y(initiate)e(the)f(prefetc)o(hing)g(appropriately)m(.)-38
1464 y(This)k(approac)o(h)i(is)f(attractiv)o(e)g(with)g(resp)q(ect)f
(to)g(space)h(o)o(v)o(er-)-76 1506 y(head,)c(since)g(the)g(only)g(o)o
(v)o(erhead)g(is)g(one)g(additional)i(p)q(oin)o(ter)f(p)q(er)-76
1547 y(b)q(ottom)9 b(non-leaf)h(no)q(de.)17 b(The)8 b(o)o(v)o(erhead)i
(of)f(up)q(dating)i(this)e(p)q(oin)o(ter)-76 1589 y(should)14
b(b)q(e)f(insigni\014cant,)h(b)q(ecause)f(it)g(only)g(needs)g(to)g(b)q
(e)f(c)o(hanged)-76 1630 y(in)18 b(the)f(rare)g(ev)o(en)o(t)g(that)g(a)
g(b)q(ottom)g(non-leaf)h(no)q(de)f(splits)i(or)e(is)-76
1671 y(deleted.)h(One)11 b(p)q(oten)o(tial)i(limitation)i(of)c(this)h
(approac)o(h,)g(ho)o(w)o(ev)o(er,)-76 1713 y(is)k(that)g(the)g(length)h
(of)e(a)h(\\c)o(h)o(unk")h(in)f(this)h(jump-p)q(oin)o(ter)g(arra)o(y)
-76 1754 y(is)f(dictated)g(b)o(y)f(the)g(B)266 1738 y
Ft(+)292 1754 y Fv(-T)m(ree)f(structure,)h(and)h(ma)o(y)f(not)g(b)q(e)g
(eas-)-76 1796 y(ily)h(adjusted)g(to)f(satisfy)h(large)g(prefetc)o(h)f
(distance)i(requiremen)o(ts)-76 1837 y(\(e.g.,)12 b(for)h(hiding)i
(disk)f(latencies\).)-38 1879 y(In)20 b(the)h(remainder)h(of)e(this)h
(pap)q(er,)i(w)o(e)d(will)i(use)f(the)g(nota-)-76 1920
y(tions)c(\\p)61 1924 y Ff(e)78 1920 y Fv(B)105 1904
y Ft(+)130 1920 y Fv(-T)m(ree")e(and)h(\\p)368 1924 y
Ff(i)382 1920 y Fv(B)409 1904 y Ft(+)434 1920 y Fv(-T)m(ree")f(to)h
(refer)f(to)g(pB)793 1904 y Ft(+)819 1920 y Fv(-T)m(rees)-76
1961 y(with)9 b Fu(external)i Fv(and)e Fu(internal)h
Fv(jump-p)q(oin)o(ter)h(arra)o(ys,)e(resp)q(ectiv)o(ely)m(.)-76
2003 y(F)m(urther)h(details)i(on)d(the)h(algorithms)i(using)f(external)
g(and)f(in)o(ternal)-76 2044 y(jump)j(p)q(oin)o(ter)i(arra)o(ys)e(can)h
(b)q(e)f(found)h(in)f(the)h(full)g(pap)q(er)g([7].)-76
2139 y Fw(4.)50 b(EXPERIMENT)l(AL)14 b(RESUL)-5 b(TS)-38
2189 y Fv(T)m(o)17 b(facilitate)k(comparisons)f(with)f(CSB)580
2173 y Ft(+)606 2189 y Fv(-T)m(rees,)g(w)o(e)f(presen)o(t)-76
2230 y(our)h(exp)q(erimen)o(tal)i(results)f(in)f(a)g
Fu(main-memory)h Fv(database)g(en-)-76 2272 y(vironmen)o(t.)26
b(W)m(e)16 b(b)q(egin)h(b)o(y)f(describing)i(the)e(framew)o(ork)g(for)f
(the)-76 2313 y(exp)q(erimen)o(ts,)j(includin)q(g)h(our)d(p)q
(erformance)h(sim)o(ulator)g(and)g(the)-76 2354 y(implemen)o(tation)e
(details)e(of)e(the)g(index)i(structures)f(that)g(w)o(e)e(com-)-76
2396 y(pare.)23 b(The)14 b(three)h(subsections)i(that)e(follo)o(w)g
(presen)o(t)h(our)f(exp)q(er-)-76 2437 y(imen)o(tal)j(results)g(for)e
(index)j(searc)o(h,)e(index)h(scan,)g(and)f(up)q(dates.)-76
2479 y(Finally)m(,)h(w)o(e)c(presen)o(t)i(a)f(detailed)i(cac)o(he)e(p)q
(erformance)h(study)f(for)-76 2520 y(a)e(few)g(of)f(our)i(earlier)g
(exp)q(erimen)o(ts.)-76 2598 y Fw(4.1)50 b(Experimental)12
b(Framework)-38 2647 y Fq(Mac)o(hine)20 b(Mo)q(del.)56
b Fv(W)m(e)19 b(ev)n(aluate)i(the)e(p)q(erformance)h(im-)-76
2689 y(pact)d(of)f Fu(Pr)n(efetching)e(B)292 2673 y Ft(+)317
2689 y Fu(-T)m(r)n(e)n(es)h Fv(through)j(detailed)g(sim)o(ulations)1206
-42 y Fq(T)l(able)c(2:)20 b(Sim)o(ulation)12 b(parameters.)p
1104 -14 828 2 v 1104 -7 V 1103 29 2 36 v 1111 29 V 1363
19 a Fk(Pip)q(eline)d(P)o(arameters)p 1924 29 V 1931
29 V 1104 31 828 2 v 1104 38 V 1103 74 2 36 v 1111 74
V 1134 63 a(Clo)q(c)o(k)i(Rate)p 1564 74 V 496 w(1)g(GHz)p
1924 74 V 1931 74 V 1104 76 828 2 v 1103 111 2 36 v 1111
111 V 1134 101 a(Issue)g(Width)p 1564 111 V 387 w(4)g(insts/cycle)p
1924 111 V 1931 111 V 1104 113 828 2 v 1103 148 2 36
v 1111 148 V 1134 138 a(F)m(unctional)e(Units)p 1564
148 V 267 w(2)i(In)o(teger,)f(2)h(FP)m(,)p 1924 148 V
1931 148 V 1103 184 V 1111 184 V 1564 184 V 1587 173
a(2)g(Memory)m(,)f(1)i(Branc)o(h)p 1924 184 V 1931 184
V 1104 186 828 2 v 1103 221 2 36 v 1111 221 V 1134 210
a(Reorder)e(Bu\013er)h(Size)p 1564 221 V 347 w(64)g(insts)p
1924 221 V 1931 221 V 1104 223 828 2 v 1103 258 2 36
v 1111 258 V 1134 248 a(In)o(teger)f(Multiply/Divide)p
1564 258 V 204 w(12/76)g(cycles)p 1924 258 V 1931 258
V 1104 260 828 2 v 1103 295 2 36 v 1111 295 V 1134 285
a(All)i(Other)f(In)o(teger)p 1564 295 V 393 w(1)h(cycle)p
1924 295 V 1931 295 V 1104 297 828 2 v 1103 333 2 36
v 1111 333 V 1134 322 a(FP)g(Divide/Squar)o(e)d(Ro)q(ot)p
1564 333 V 208 w(15/20)h(cycles)p 1924 333 V 1931 333
V 1104 334 828 2 v 1103 370 2 36 v 1111 370 V 1134 359
a(All)i(Other)f(FP)p 1564 370 V 442 w(2)h(cycles)p 1924
370 V 1931 370 V 1104 371 828 2 v 1103 407 2 36 v 1111
407 V 1134 396 a(Branc)o(h)e(Prediction)f(Sc)o(heme)p
1564 407 V 193 w(gshare)h([15])p 1924 407 V 1931 407
V 1104 409 828 2 v 1104 416 V 1052 427 934 2 v 1052 434
V 1051 470 2 36 v 1058 470 V 1361 459 a(Memory)h(P)o(arameters)p
1976 470 V 1984 470 V 1052 471 934 2 v 1052 478 V 1051
514 2 36 v 1058 514 V 1081 504 a(Line)g(Size)p 1516 514
V 605 w(64)g(b)o(ytes)p 1976 514 V 1984 514 V 1052 516
934 2 v 1051 552 2 36 v 1058 552 V 1081 541 a(Primary)f(Data)h(Cac)o
(he)p 1516 552 V 186 w(64)g(KB,)h(2-w)o(a)o(y)f(set-asso)q(c.)p
1976 552 V 1984 552 V 1052 553 934 2 v 1051 589 2 36
v 1058 589 V 1081 578 a(Primary)f(Instruction)f(Cac)o(he)p
1516 589 V 92 w(64)i(KB,)h(2-w)o(a)o(y)f(set-asso)q(c.)p
1976 589 V 1984 589 V 1052 590 934 2 v 1051 626 2 36
v 1058 626 V 1081 615 a(Miss)h(Handlers)p 1516 626 V
313 w(32)f(for)g(data,)f(2)h(for)g(inst.)p 1976 626 V
1984 626 V 1052 628 934 2 v 1051 663 2 36 v 1058 663
V 1081 652 a(Uni\014ed)g(Secondary)e(Cac)o(he)p 1516
663 V 156 w(2)j(MB,)f(direct-mapp)q(e)o(d)p 1976 663
V 1984 663 V 1052 665 934 2 v 1051 700 2 36 v 1058 700
V 1081 690 a(Primary-to-Sec)o(ond)o(ary)p 1516 700 V
132 w(15)g(cycles)g(\(plus)f(an)o(y)h(dela)o(ys)p 1976
700 V 1984 700 V 1051 736 V 1058 736 V 1081 725 a(Miss)h(Latency)p
1516 736 V 383 w(due)e(to)h(con)o(ten)o(tion\))p 1976
736 V 1984 736 V 1052 737 934 2 v 1051 773 2 36 v 1058
773 V 1081 762 a(Primary-to-Memo)o(ry)p 1516 773 V 146
w(150)f(cycles)h(\(plus)f(an)o(y)h(dela)o(ys)p 1976 773
V 1984 773 V 1051 809 V 1058 809 V 1081 798 a(Miss)h(Latency)p
1516 809 V 383 w(due)e(to)h(con)o(ten)o(tion\))p 1976
809 V 1984 809 V 1052 810 934 2 v 1051 846 2 36 v 1058
846 V 1081 835 a(Main)h(Memory)e(Bandwidth)p 1516 846
V 139 w(1)h(access)g(p)q(er)f(10)h(cycles)p 1976 846
V 1984 846 V 1052 847 934 2 v 1052 854 V 1020 919 a Fv(of)i
(fully-functional)j(executables)f(running)g(on)e(a)g(state-of-the-art)
1020 961 y(mac)o(hine.)40 b(Since)22 b(the)e(gap)h(b)q(et)o(w)o(een)f
(pro)q(cessor)i(and)f(memory)1020 1002 y(sp)q(eeds)13
b(is)g(con)o(tin)o(uing)i(to)d(increase)i(dramatically)h(with)e(eac)o
(h)f(new)1020 1044 y(generation)j(of)d(mac)o(hines,)i(it)f(is)h(imp)q
(ortan)o(t)g(to)f(fo)q(cus)g(on)g(the)g(p)q(er-)1020
1085 y(formance)c(c)o(haracteristics)i(of)e(mac)o(hines)h(in)f(the)g
(near)h(future)e(rather)1020 1126 y(than)15 b(in)g(the)g(past.)21
b(Hence)15 b(w)o(e)e(base)i(our)g(memory)g(hierarc)o(h)o(y)h(on)1020
1168 y(the)e(Compaq)h(ES40)g([8])f(\(one)g(of)g(the)g(most)h(adv)n
(anced)g(computer)1020 1209 y(systems)j(announced)h(to)f(date\),)g(but)
g(w)o(e)f(up)q(date)h(it)g(sligh)o(tly)i(to)1020 1251
y(include)14 b(a)d(dynamicall)q(y-sc)o(hed)q(ul)q(ed,)j(sup)q(erscalar)
g(pro)q(cessor)f(sim-)1020 1292 y(ilar)20 b(to)g(the)f(MIPS)g(R10000)h
([23])f(running)i(at)e(a)g(clo)q(c)o(k)h(rate)f(of)1020
1333 y(1)g(GHz.)35 b(The)19 b(sim)o(ulator)j(p)q(erforms)d(a)g(cycle-b)
o(y-cycle)j(sim)o(ula-)1020 1375 y(tion,)f(mo)q(deling)g(the)d(ric)o(h)
i(details)g(of)e(the)h(pro)q(cessor)h(including)1020
1416 y(the)d(pip)q(eline,)i(register)f(renaming,)g(the)e(reorder)h
(bu\013er,)h(branc)o(h)1020 1458 y(prediction,)f(branc)o(hing)h(p)q
(enalties,)f(the)e(memory)g(hierarc)o(h)o(y)i(\(in-)1020
1499 y(cluding)e(all)f(forms)f(of)g(con)o(ten)o(tion\),)h(etc.)j(T)m
(able)c(2)g(sho)o(ws)g(the)g(k)o(ey)1020 1541 y(parameters)h(of)f(the)g
(sim)o(ulator.)1057 1582 y(Giv)o(en)f(the)e(parameters)h(in)g(T)m(able)
g(2,)f(one)h(can)f(see)g(that)h(the)f(nor-)1020 1623
y(malized)17 b(memory)e(bandwidth)i(\()p Fd(B)r Fv(\)|i.e.)e(the)g(n)o
(um)o(b)q(er)h(of)f(cac)o(he)1020 1665 y(misses)f(to)f(memory)g(that)h
(can)f(b)q(e)g(serviced)i(sim)o(ultaneously)q(|i)q(s:)1323
1751 y Fd(B)e Fv(=)1430 1727 y Fd(T)1452 1731 y Ft(1)p
1410 1742 79 2 v 1410 1776 a Fd(T)1432 1780 y Fn(next)1505
1751 y Fv(=)1550 1727 y(150)p 1550 1742 58 2 v 1560 1776
a(10)1624 1751 y(=)d(15)p Fd(:)254 b Fv(\(4\))1020 1836
y(This)14 b(is)h(sligh)o(tly)h(p)q(essimistic)h(compared)d(with)h(the)f
(actual)h(Com-)1020 1877 y(paq)h(ES40)h([8],)f(where)f
Fd(B)j Fv(=)d(16)p Fd(:)p Fv(25,)h(and)h(is)f(in)o(tended)i(to)e
(re\015ect)1020 1918 y(other)10 b(recen)o(t)f(memory)h(system)g
(designs)h([3].)k(As)9 b(sho)o(wn)h(in)g(the)g(full)1020
1960 y(pap)q(er)17 b([7],)f(small)h(v)n(ariations)h(in)f
Fd(B)h Fv(do)e(not)g(substan)o(tiv)o(ely)j(alter)1020
2001 y(the)13 b(results)h(of)f(our)g(studies.)1057 2043
y(W)m(e)18 b(compiled)i(our)e(C)f(source)h(co)q(de)h(in)o(to)f(MIPS)g
(executables)1020 2084 y(using)g(v)o(ersion)f(2.95.2)f(of)g(the)g(gcc)g
(compiler)i(with)e(optimization)1020 2125 y(\015ags)e(enabled.)k(W)m(e)
13 b(added)h(prefetc)o(h)f(instructions)j(to)c(the)h(source)1020
2167 y(co)q(de)k(b)o(y)g(hand,)h(using)g(the)e(gcc)h
Fo(ASM)e Fv(macro)i(to)f(translate)i(these)1020 2208
y(directly)d(in)o(to)f(v)n(alid)h(MIPS)e(prefetc)o(h)g(instructions.)
1057 2275 y Fq(B)1088 2259 y Ft(+)1114 2275 y Fq(-T)l(rees)e(Studied)d
(and)h(Implemen)o(tation)f(Details.)26 b Fv(Our)1020
2316 y(exp)q(erimen)o(tal)11 b(study)f(compares)f(pB)1559
2300 y Ft(+)1585 2316 y Fv(-T)m(rees)f(of)h(v)n(arious)h(no)q(de)g
(widths)1020 2358 y Fd(w)g Fv(with)g(B)1169 2342 y Ft(+)1195
2358 y Fv(-T)m(rees)f(and)i(CSB)1454 2342 y Ft(+)1479
2358 y Fv(-T)m(rees.)16 b(W)m(e)10 b(consider)h(b)q(oth)g(p)1926
2342 y Ff(w)1926 2364 y(e)1951 2358 y Fv(B)1978 2342
y Ft(+)2004 2358 y Fv(-)1020 2399 y(T)m(rees)h(and)g(p)1215
2383 y Ff(w)1215 2406 y(i)1241 2399 y Fv(B)1268 2383
y Ft(+)1293 2399 y Fv(-T)m(rees)g(\(describ)q(ed)h(earlier)h(in)f
(Sections)g(3.2{3.3)1020 2440 y(and)h(Section)h(3.4,)e(resp)q(ectiv)o
(ely\).)21 b(W)m(e)13 b(also)i(consider)g(the)e(com)o(bi-)1020
2482 y(nation)h(of)f(b)q(oth)g(pB)1321 2466 y Ft(+)1347
2482 y Fv(-T)m(ree)f(and)h(CSB)1596 2466 y Ft(+)1622
2482 y Fv(-T)m(ree)f(tec)o(hniques,)i(whic)o(h)1020 2523
y(w)o(e)f(denote)g(as)g(a)g(pCSB)1376 2507 y Ft(+)1402
2523 y Fv(-T)m(ree.)1057 2565 y(W)m(e)e(implemen)o(ted)h(bulkload,)h
(searc)o(h,)e(insertion,)h(deletion,)g(and)1020 2606
y(range)f(scan)f(op)q(erations)i(for:)j(\(i\))c(standard)g(B)1695
2590 y Ft(+)1721 2606 y Fv(-T)m(rees;)f(\(ii\))h(p)1926
2590 y Ff(w)1951 2606 y Fv(B)1978 2590 y Ft(+)2004 2606
y Fv(-)1020 2647 y(T)m(rees)j(for)f(no)q(de)i(widths)f
Fd(w)f Fv(=)f(2)p Fd(;)6 b Fv(4)p Fd(;)g Fv(8)p Fd(;)14
b Fv(and)g(16;)g(\(iii\))i(p)1834 2632 y Ft(8)1834 2654
y Ff(e)1851 2647 y Fv(B)1878 2632 y Ft(+)1904 2647 y
Fv(-T)m(rees;)1020 2689 y(and)g(\(iv\))h(p)1195 2673
y Ft(8)1195 2696 y Ff(i)1212 2689 y Fv(B)1239 2673 y
Ft(+)1265 2689 y Fv(-T)m(rees.)24 b(F)m(or)16 b(these)g(latter)g(t)o(w)
o(o)f(cases,)i(the)e(no)q(de)p eop
%%Page: 8 8
8 7 bop -76 -34 a Fv(width)15 b Fd(w)f Fv(=)f(8)h(w)o(as)g(selected)i
(b)q(ecause)f(our)g(exp)q(erimen)o(ts)h(sho)o(w)o(ed)-76
7 y(that)9 b(this)h(c)o(hoice)g(resulted)h(in)e(the)g(b)q(est)h(searc)o
(h)f(p)q(erformance)h(\(con-)-76 48 y(sisten)o(t)17 b(with)f(the)g
(analytical)j(computation)e(in)g(Section)g(2\).)25 b(W)m(e)-76
90 y(also)15 b(implemen)o(ted)h(bulkload)h(and)e(searc)o(h)g(for)e(CSB)
717 74 y Ft(+)743 90 y Fv(-T)m(rees)h(and)-76 131 y(pCSB)21
115 y Ft(+)47 131 y Fv(-T)m(rees.)j(Although)e(w)o(e)e(did)h(not)g
(implemen)o(t)h(insertion)g(or)-76 173 y(deletion)g(for)e(CSB)204
157 y Ft(+)230 173 y Fv(-T)m(rees,)f(w)o(e)g(conduct)i(the)f(same)g
(exp)q(erimen)o(ts)-76 214 y(as)e(in)h(Rao)f(and)h(Ross)f([20])g(\(alb)
q(eit)h(in)g(a)f(di\013eren)o(t)h(memory)f(hierar-)-76
256 y(c)o(h)o(y\))h(to)f(facilitate)j(a)e(comparison)h(of)e(the)h
(results.)18 b(Although)13 b(Rao)-76 297 y(and)i(Ross)h(presen)o(t)f
(tec)o(hniques)i(to)d(impro)o(v)o(e)i(CSB)690 281 y Ft(+)716
297 y Fv(-T)m(ree)e(searc)o(h)-76 338 y(p)q(erformance)g
Fu(within)g Fv(a)f(no)q(de)h([20],)e(w)o(e)g(only)i(implemen)o(ted)h
(stan-)-76 380 y(dard)c(binary)g(searc)o(h)g(for)e(all)i(the)f(trees)g
(studied)i(b)q(ecause)f(our)f(fo)q(cus)-76 421 y(is)h(on)f(memory)g(p)q
(erformance)h(\(whic)o(h)g(is)g(the)f(primary)h(b)q(ottlenec)o(k,)-76
463 y(as)i(sho)o(wn)h(earlier)g(in)g(Figure)g(1\).)-38
504 y(Our)8 b(pB)84 488 y Ft(+)110 504 y Fv(-T)m(ree)g(tec)o(hniques)j
(impro)o(v)o(e)f(p)q(erformance)g(o)o(v)o(er)e(a)h(range)-76
545 y(of)18 b Fo(key)p Fv(,)g(p)q(oin)o(ter,)i(and)f
Fo(tupleID)d Fv(sizes.)33 b(F)m(or)18 b(concreteness,)j(w)o(e)-76
587 y(rep)q(ort)d(exp)q(erimen)o(tal)i(results)f(where)e(the)h
Fo(key)p Fv(s,)f(p)q(oin)o(ters,)j(and)-76 628 y Fo(tupleID)p
Fv(s)14 b(are)k(4)f(b)o(ytes)g(eac)o(h,)h(as)g(w)o(as)e(done)i(in)g
(previous)h(stud-)-76 670 y(ies)e([19,)g(20].)26 b(As)16
b(discussed)i(in)f(Section)h(2,)e(w)o(e)g(use)h(a)f(standard)-76
711 y(B)-49 695 y Ft(+)-23 711 y Fv(-T)m(ree)h(no)q(de)i(structure,)g
(consisten)o(t)h(with)e(previous)i(studies.)-76 752 y(F)m(or)c(the)f(B)
91 737 y Ft(+)117 752 y Fv(-T)m(ree,)g(eac)o(h)h(no)q(de)h(is)f(one)g
(cac)o(he)g(line)h(wide)g(\(i.e.)e(64)-76 794 y(b)o(ytes\).)27
b(Eac)o(h)16 b(non-leaf)h(no)q(de)g(con)o(tains)g(a)f
Fo(keynum)e Fv(\014eld,)k(7)e Fo(key)-76 835 y Fv(\014elds)e(and)e(8)h
Fo(childptr)c Fv(\014elds,)k(while)g(eac)o(h)g(leaf)f(no)q(de)h(con)o
(tains)h(a)-76 877 y Fo(keynum)f Fv(\014eld,)k(7)e Fo(key)f
Fv(\014elds,)j(7)f(asso)q(ciated)h Fo(tupleID)c Fv(\014elds,)k(and)-76
918 y(a)e Fo(next-leaf)d Fv(p)q(oin)o(ter.)25 b(The)15
b(no)q(des)i(of)e(the)g(pB)658 902 y Ft(+)684 918 y Fv(-T)m(rees)g(are)
g(the)-76 959 y(same)h(as)g(the)g(B)169 944 y Ft(+)195
959 y Fv(-T)m(rees,)g(except)g(that)g(they)h(are)f(wider.)26
b(So)16 b(for)-76 1001 y(eigh)o(t-cac)o(he-line-wi)q(de)f(no)q(des,)e
(eac)o(h)g(non-leaf)g(no)q(de)g(is)g(512)g(b)o(ytes)-76
1042 y(and)h(con)o(tains)g(a)f Fo(keynum)e Fv(\014eld,)j(63)f
Fo(key)f Fv(\014elds,)i(and)f(64)h Fo(childptr)-76 1084
y Fv(\014elds,)i(while)h(eac)o(h)e(leaf)g(no)q(de)h(con)o(tains)g(a)f
Fo(keynum)d Fv(\014eld,)17 b(63)e Fo(key)-76 1125 y Fv(\014elds,)c(63)e
(asso)q(ciated)h Fo(tupleID)c Fv(\014elds,)11 b(and)e(a)g
Fo(next-leaf)c Fv(p)q(oin)o(ter.)-76 1166 y(F)m(or)20
b(the)g(p)94 1151 y Ft(8)94 1173 y Ff(e)112 1166 y Fv(B)139
1151 y Ft(+)165 1166 y Fv(-T)m(ree,)h(non-leaf)g(no)q(des)g(ha)o(v)o(e)
g(the)f(same)g(struc-)-76 1208 y(ture)c(as)g(for)f(the)h(pB)236
1192 y Ft(+)262 1208 y Fv(-T)m(ree,)f(while)i(eac)o(h)f(leaf)g(no)q(de)
g(has)g(a)g Fo(hint)-76 1249 y Fv(\014eld)i(and)e(one)h(few)o(er)f
Fo(key)e Fv(and)j Fo(tupleID)c Fv(\014elds.)28 b(The)16
b(only)i(dif-)-76 1291 y(ference)e(with)f(a)h(p)201 1275
y Ft(8)201 1298 y Ff(i)218 1291 y Fv(B)245 1275 y Ft(+)271
1291 y Fv(-T)m(ree)f(compared)h(to)f(a)h(pB)682 1275
y Ft(+)707 1291 y Fv(-T)m(ree)f(is)h(that)-76 1332 y(eac)o(h)11
b(b)q(ottom)g(non-leaf)h(no)q(de)g(has)f(a)g Fo(next-sib)o(lin)o(g)c
Fv(p)q(oin)o(ter,)13 b(and)-76 1374 y(one)g(few)o(er)g
Fo(key)e Fv(and)i Fo(childptr)d Fv(\014elds.)18 b(F)m(or)13
b(the)g(CSB)734 1358 y Ft(+)759 1374 y Fv(-T)m(ree)g(and)-76
1415 y(the)f(pCSB)86 1399 y Ft(+)112 1415 y Fv(-T)m(ree,)f(eac)o(h)i
(non-leaf)g(no)q(de)g(has)f(only)h(one)g Fo(childptr)-76
1456 y Fv(\014eld.)k(F)m(or)11 b(example,)h(a)e(CSB)352
1440 y Ft(+)377 1456 y Fv(-T)m(ree)g(non-leaf)i(no)q(de)f(has)f(a)h
Fo(keynum)-76 1498 y Fv(\014eld,)j(14)f Fo(key)e Fv(\014elds,)j(and)f
(a)g Fo(childptr)c Fv(\014eld.)18 b(All)c(tree)e(no)q(des)i(are)-76
1539 y(aligned)h(on)f(a)f(64)g(b)o(yte)g(b)q(oundary)i(when)e(allo)q
(cated.)-38 1581 y(F)m(or)h(the)g(p)120 1565 y Ft(8)120
1587 y Ff(e)138 1581 y Fv(B)165 1565 y Ft(+)190 1581
y Fv(-T)m(ree)g(and)h(p)388 1565 y Ft(8)388 1587 y Ff(i)406
1581 y Fv(B)433 1565 y Ft(+)458 1581 y Fv(-T)m(ree)f(exp)q(erimen)o
(ts,)i(w)o(e)e(need)-76 1622 y(to)e(select)h(the)f(prefetc)o(h)g
(distance)i(\(for)d(b)q(oth\))i(and)f(the)h(c)o(h)o(unk)f(size)-76
1663 y(\(for)17 b(the)h(former\).)30 b(According)19 b(to)e(equations)i
(\(2\))f(and)g(\(4\),)g(w)o(e)-76 1709 y(should)f(select)f
Fd(k)f Fv(=)234 1679 y Fa(\006)257 1694 y Ff(B)p 257
1701 25 2 v 258 1722 a(w)286 1679 y Fa(\007)318 1709
y Fv(=)362 1679 y Fa(\006)385 1694 y Ft(15)p 385 1701
31 2 v 393 1722 a(8)420 1679 y Fa(\007)452 1709 y Fv(=)f(2.)23
b(Ho)o(w)o(ev)o(er,)15 b(as)g(discussed)-76 1751 y(in)g(Section)h(3,)f
(it)g(is)g(often)f(adv)n(an)o(tageous)j(to)d(sligh)o(tly)j(increase)f
Fd(k)-76 1792 y Fv(in)e(order)f(to)g(create)g(some)g(extra)g(slac)o(k.)
18 b(W)m(e)13 b(set)g Fd(k)e Fv(=)g(3,)h(to)h(create)-76
1833 y(extra)e(slac)o(k)i(for)d(the)h(prefetc)o(hing)i(of)e(c)o(h)o
(unks)h(and)f(non-leaf)i(no)q(des.)-76 1875 y(\(Our)g(sensitivit)o(y)j
(analysis)g(in)e([7])f(sho)o(w)o(ed)h(that)f(selecting)i
Fd(k)e Fv(=)e(2,)-76 1916 y(3,)f(or)g(4)f(results)i(in)f(similar)i
(scan)e(p)q(erformance.\))17 b(As)9 b(for)h(the)f(c)o(h)o(unk)-76
1958 y(size,)16 b(according)g(to)f(equation)i(\(3\))d(and)i(the)f
(discussion)i(that)e(fol-)-76 2003 y(lo)o(ws,)d(w)o(e)f(should)i
(select)f Fd(c)f Fv(to)g(b)q(e)h(at)f(least)553 1973
y Fa(\006)585 1988 y Ff(B)p 576 1995 43 2 v 576 2016
a Ft(2)p Ff(m)624 1973 y Fa(\007)652 2003 y Fv(=)693
1973 y Fa(\006)716 1988 y Ft(15)p 716 1995 31 2 v 716
2016 a(16)751 1973 y Fa(\007)780 2003 y Fv(=)g(1.)16
b(W)m(e)-76 2045 y(conserv)n(ativ)o(ely)h(select)d Fd(c)e
Fv(=)g(8|i.e.)i(eac)o(h)g(c)o(h)o(unk)h(is)f(8)g(cac)o(he)h(lines)-76
2086 y(wide|so)j(that)g(eac)o(h)f(c)o(h)o(unk)h(con)o(tains)g(126)g
(leaf)f(p)q(oin)o(ter)h(\014elds.)-76 2128 y(\(Our)h(sensitivit)o(y)j
(analysis)g([7])c(sho)o(w)o(ed)i(that)f(selecting)i Fd(c)g
Fv(=)f(1)-76 2169 y(through)14 b(32)f(results)i(in)e(similar)j(scan)d
(p)q(erformance.\))-76 2253 y Fw(4.2)50 b(Sear)o(ch)12
b(P)o(erf)o(ormance)-38 2303 y Fv(W)m(e)h(\014rst)g(ev)n(aluate)h
(index)h(searc)o(h)e(p)q(erformance)h(for)f(B)783 2287
y Ft(+)808 2303 y Fv(-T)m(rees,)-76 2344 y(CSB)0 2329
y Ft(+)26 2344 y Fv(-T)m(rees,)g(p)173 2329 y Ff(w)198
2344 y Fv(B)225 2329 y Ft(+)251 2344 y Fv(-T)m(rees)g(\(where)g
Fd(w)f Fv(=)i(2,)f(4,)g(8,)h(and)g(16\),)g(and)-76 2386
y(p)-55 2370 y Ft(8)-37 2386 y Fv(CSB)39 2370 y Ft(+)64
2386 y Fv(-T)m(rees)9 b(\(whic)o(h)g(com)o(bine)h(our)f(prefetc)o(hing)
i(approac)o(h)f(with)-76 2427 y(CSB)0 2411 y Ft(+)26
2427 y Fv(-T)m(rees\).)-38 2497 y Fq(V)l(arying)16 b(the)h(n)o(um)o(b)q
(er)e(of)h(leaf)f(no)q(des.)38 b Fv(Figure)16 b(7)e(sho)o(ws)-76
2539 y(the)e(execution)h(time)g(of)e(100K)h(random)h(searc)o(hes)f
(after)g(bulkload-)-76 2580 y(ing)i(10K,)e(30K,)g(100K,)h(300K,)f(1M,)g
(3M,)h(and)g(10M)g(k)o(eys)g(in)o(to)g(the)-76 2622 y(trees)g(\(no)q
(des)h(are)g(100\045)f(full)i(except)e(the)h(ro)q(ot\).)656
2606 y Ft(5)691 2622 y Fv(In)f(the)g(exp)q(eri-)p -76
2652 399 2 v -76 2676 a Fn(5)-59 2689 y Fm(Note)d(that)h(throughout)h
(this)g(pap)q(er,)g(\\K")f(and)h(\\M")e(corresp)q(ond)h(to)g(1000)p
1020 -74 997 2 v 975 391 a @beginspecial 166 @llx 288
@lly 435 @urx 504 @ury 1044 @rhi @setspecial
%%BeginDocument: graphs/exp1.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

   61    -3  3230  2590 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2166 L
 450  127 mt  450  140 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 344 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 504 2303 mt 
(4) s
 719 2179 mt  719 2166 L
 719  127 mt  719  140 L
 877 2179 mt  877 2166 L
 877  127 mt  877  140 L
 989 2179 mt  989 2166 L
 989  127 mt  989  140 L
1076 2179 mt 1076 2166 L
1076  127 mt 1076  140 L
1146 2179 mt 1146 2166 L
1146  127 mt 1146  140 L
1206 2179 mt 1206 2166 L
1206  127 mt 1206  140 L
1258 2179 mt 1258 2166 L
1258  127 mt 1258  140 L
1304 2179 mt 1304 2166 L
1304  127 mt 1304  140 L
1345 2179 mt 1345 2166 L
1345  127 mt 1345  140 L
1345 2179 mt 1345 2152 L
1345  127 mt 1345  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

1239 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

1399 2303 mt 
(5) s
1614 2179 mt 1614 2166 L
1614  127 mt 1614  140 L
1772 2179 mt 1772 2166 L
1772  127 mt 1772  140 L
1884 2179 mt 1884 2166 L
1884  127 mt 1884  140 L
1971 2179 mt 1971 2166 L
1971  127 mt 1971  140 L
2041 2179 mt 2041 2166 L
2041  127 mt 2041  140 L
2101 2179 mt 2101 2166 L
2101  127 mt 2101  140 L
2153 2179 mt 2153 2166 L
2153  127 mt 2153  140 L
2199 2179 mt 2199 2166 L
2199  127 mt 2199  140 L
2240 2179 mt 2240 2166 L
2240  127 mt 2240  140 L
2240 2179 mt 2240 2152 L
2240  127 mt 2240  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

2134 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

2294 2303 mt 
(6) s
2509 2179 mt 2509 2166 L
2509  127 mt 2509  140 L
2667 2179 mt 2667 2166 L
2667  127 mt 2667  140 L
2779 2179 mt 2779 2166 L
2779  127 mt 2779  140 L
2866 2179 mt 2866 2166 L
2866  127 mt 2866  140 L
2936 2179 mt 2936 2166 L
2936  127 mt 2936  140 L
2996 2179 mt 2996 2166 L
2996  127 mt 2996  140 L
3048 2179 mt 3048 2166 L
3048  127 mt 3048  140 L
3094 2179 mt 3094 2166 L
3094  127 mt 3094  140 L
3135 2179 mt 3135 2166 L
3135  127 mt 3135  140 L
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

3029 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

3189 2303 mt 
(7) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 255 2232 mt 
(10) s
 450 1886 mt  477 1886 L
3135 1886 mt 3108 1886 L
 255 1939 mt 
(20) s
 450 1593 mt  477 1593 L
3135 1593 mt 3108 1593 L
 255 1646 mt 
(30) s
 450 1300 mt  477 1300 L
3135 1300 mt 3108 1300 L
 255 1353 mt 
(40) s
 450 1006 mt  477 1006 L
3135 1006 mt 3108 1006 L
 255 1059 mt 
(50) s
 450  713 mt  477  713 L
3135  713 mt 3108  713 L
 255  766 mt 
(60) s
 450  420 mt  477  420 L
3135  420 mt 3108  420 L
 255  473 mt 
(70) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 255  180 mt 
(80) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
468 -310 427 -380 468 -335 427 -334 468 -101 427 -137 450 1905 7 MP stroke
gr

12 w
c8
gs 377 235 2832 1744 MR c np
0 j
41 71 -82 0 41 -71 450 1952 4 MP
DP
41 71 -82 0 41 -71 877 1815 4 MP
DP
41 71 -82 0 41 -71 1345 1714 4 MP
DP
41 71 -82 0 41 -71 1772 1380 4 MP
DP
41 71 -82 0 41 -71 2240 1045 4 MP
DP
41 71 -82 0 41 -71 2667 665 4 MP
DP
41 71 -82 0 41 -71 3135 355 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
468 -328 427 -245 468 -301 427 -254 468 -112 427 -106 450 1930 7 MP stroke
gr

gs 377 511 2832 1493 MR c np
  36   36  450 1930 FO
  36   36  877 1824 FO
  36   36 1345 1712 FO
  36   36 1772 1458 FO
  36   36 2240 1157 FO
  36   36 2667  912 FO
  36   36 3135  584 FO
gr

gs 450 127 2686 2053 MR c np
DD
468 -294 427 -215 468 -366 427 -224 468 -120 427 -75 450 1946 7 MP stroke
gr

DD
gs 377 579 2832 1441 MR c np
SO
 414 1946 mt  486 1946 L
 450 1910 mt  450 1982 L
 841 1871 mt  913 1871 L
 877 1835 mt  877 1907 L
1309 1751 mt 1381 1751 L
1345 1715 mt 1345 1787 L
1736 1527 mt 1808 1527 L
1772 1491 mt 1772 1563 L
2204 1161 mt 2276 1161 L
2240 1125 mt 2240 1197 L
2631  946 mt 2703  946 L
2667  910 mt 2667  982 L
3099  652 mt 3171  652 L
3135  616 mt 3135  688 L
DD
gr

gs 450 127 2686 2053 MR c np
SO
468 -239 427 -222 468 -310 427 -168 468 -107 427 -71 450 1967 7 MP stroke
gr

SO
gs 377 777 2832 1264 MR c np
 425 1942 mt  475 1992 L
 475 1942 mt  425 1992 L
 852 1871 mt  902 1921 L
 902 1871 mt  852 1921 L
1320 1764 mt 1370 1814 L
1370 1764 mt 1320 1814 L
1747 1596 mt 1797 1646 L
1797 1596 mt 1747 1646 L
2215 1286 mt 2265 1336 L
2265 1286 mt 2215 1336 L
2642 1064 mt 2692 1114 L
2692 1064 mt 2642 1114 L
3110  825 mt 3160  875 L
3160  825 mt 3110  875 L
gr

gs 450 127 2686 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
468 -146 427 -173 468 -310 427 -192 468 -67 427 -65 450 1949 7 MP stroke
gr

c9
DD
gs 377 923 2832 1100 MR c np
SO
0 j
-41 71 -41 -71 82 0 409 1973 4 MP
DP
-41 71 -41 -71 82 0 836 1908 4 MP
DP
-41 71 -41 -71 82 0 1304 1841 4 MP
DP
-41 71 -41 -71 82 0 1731 1649 4 MP
DP
-41 71 -41 -71 82 0 2199 1339 4 MP
DP
-41 71 -41 -71 82 0 2626 1166 4 MP
DP
-41 71 -41 -71 82 0 3094 1020 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
c8
468 -165 427 -227 468 -357 427 -127 468 -61 427 -131 450 1963 7 MP stroke
gr

c8
gs 377 822 2832 1215 MR c np
SO
0 j
0 -58 -58 0 0 58 58 0 421 1934 5 MP
DP
0 -58 -58 0 0 58 58 0 848 1803 5 MP
DP
0 -58 -58 0 0 58 58 0 1316 1742 5 MP
DP
0 -58 -58 0 0 58 58 0 1743 1615 5 MP
DP
0 -58 -58 0 0 58 58 0 2211 1258 5 MP
DP
0 -58 -58 0 0 58 58 0 2638 1031 5 MP
DP
0 -58 -58 0 0 58 58 0 3106 866 5 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
468 -160 427 -190 468 -320 427 -132 468 -69 427 -58 450 1949 7 MP stroke
gr

SO
gs 377 947 2832 1076 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 450 1996 5 MP
DP
36 47 -36 47 -36 -47 36 -47 877 1938 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1345 1869 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1772 1737 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2240 1417 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2667 1227 5 MP
DP
36 47 -36 47 -36 -47 36 -47 3135 1067 5 MP
DP
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
1150 2553 mt 
(entries in leaf nodes) s
 200 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
6 w
 954  345 mt 
(B+tree   ) s
 954  511 mt 
(CSB+     ) s
 954  677 mt 
(p2B+tree ) s
 954  843 mt 
(p4B+tree ) s
 954 1009 mt 
(p8B+tree ) s
 954 1175 mt 
(p16B+tree) s
 954 1341 mt 
(p8CSB+   ) s
gs 551 198 1153 1189 MR c np
12 w
c8
241 0 632 296 2 MP stroke
gs 679 223 147 147 MR c np
0 j
41 71 -82 0 41 -71 752 343 4 MP
DP
gr

241 0 632 462 2 MP stroke
gs 679 389 147 147 MR c np
  36   36  752  462 FO
gr

DD
241 0 632 628 2 MP stroke
SO
gs 679 555 147 147 MR c np
 716  628 mt  788  628 L
 752  592 mt  752  664 L
gr

241 0 632 794 2 MP stroke
gs 679 721 147 147 MR c np
 727  769 mt  777  819 L
 777  769 mt  727  819 L
gr

DD
c9
241 0 632 961 2 MP stroke
SO
gs 679 888 147 147 MR c np
0 j
-41 71 -41 -71 82 0 711 985 4 MP
DP
gr

DD
c8
241 0 632 1127 2 MP stroke
SO
gs 679 1054 147 147 MR c np
0 j
0 -58 -58 0 0 58 58 0 723 1098 5 MP
DP
gr

241 0 632 1293 2 MP stroke
gs 679 1220 147 147 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 752 1340 5 MP
DP
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 534 w @beginspecial 161 @llx 288 @lly 435
@urx 504 @ury 1044 @rhi @setspecial
%%BeginDocument: graphs/exp1-cold.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0    -3  3291  2590 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2166 L
 450  127 mt  450  140 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 344 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 504 2303 mt 
(4) s
 719 2179 mt  719 2166 L
 719  127 mt  719  140 L
 877 2179 mt  877 2166 L
 877  127 mt  877  140 L
 989 2179 mt  989 2166 L
 989  127 mt  989  140 L
1076 2179 mt 1076 2166 L
1076  127 mt 1076  140 L
1146 2179 mt 1146 2166 L
1146  127 mt 1146  140 L
1206 2179 mt 1206 2166 L
1206  127 mt 1206  140 L
1258 2179 mt 1258 2166 L
1258  127 mt 1258  140 L
1304 2179 mt 1304 2166 L
1304  127 mt 1304  140 L
1345 2179 mt 1345 2166 L
1345  127 mt 1345  140 L
1345 2179 mt 1345 2152 L
1345  127 mt 1345  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

1239 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

1399 2303 mt 
(5) s
1614 2179 mt 1614 2166 L
1614  127 mt 1614  140 L
1772 2179 mt 1772 2166 L
1772  127 mt 1772  140 L
1884 2179 mt 1884 2166 L
1884  127 mt 1884  140 L
1971 2179 mt 1971 2166 L
1971  127 mt 1971  140 L
2041 2179 mt 2041 2166 L
2041  127 mt 2041  140 L
2101 2179 mt 2101 2166 L
2101  127 mt 2101  140 L
2153 2179 mt 2153 2166 L
2153  127 mt 2153  140 L
2199 2179 mt 2199 2166 L
2199  127 mt 2199  140 L
2240 2179 mt 2240 2166 L
2240  127 mt 2240  140 L
2240 2179 mt 2240 2152 L
2240  127 mt 2240  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

2134 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

2294 2303 mt 
(6) s
2509 2179 mt 2509 2166 L
2509  127 mt 2509  140 L
2667 2179 mt 2667 2166 L
2667  127 mt 2667  140 L
2779 2179 mt 2779 2166 L
2779  127 mt 2779  140 L
2866 2179 mt 2866 2166 L
2866  127 mt 2866  140 L
2936 2179 mt 2936 2166 L
2936  127 mt 2936  140 L
2996 2179 mt 2996 2166 L
2996  127 mt 2996  140 L
3048 2179 mt 3048 2166 L
3048  127 mt 3048  140 L
3094 2179 mt 3094 2166 L
3094  127 mt 3094  140 L
3135 2179 mt 3135 2166 L
3135  127 mt 3135  140 L
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

3029 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

3189 2303 mt 
(7) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 255 2232 mt 
(60) s
 450 1992 mt  477 1992 L
3135 1992 mt 3108 1992 L
 255 2045 mt 
(80) s
 450 1806 mt  477 1806 L
3135 1806 mt 3108 1806 L
 175 1859 mt 
(100) s
 450 1619 mt  477 1619 L
3135 1619 mt 3108 1619 L
 175 1672 mt 
(120) s
 450 1433 mt  477 1433 L
3135 1433 mt 3108 1433 L
 175 1486 mt 
(140) s
 450 1246 mt  477 1246 L
3135 1246 mt 3108 1246 L
 175 1299 mt 
(160) s
 450 1060 mt  477 1060 L
3135 1060 mt 3108 1060 L
 175 1113 mt 
(180) s
 450  873 mt  477  873 L
3135  873 mt 3108  873 L
 175  926 mt 
(200) s
 450  687 mt  477  687 L
3135  687 mt 3108  687 L
 175  740 mt 
(220) s
 450  500 mt  477  500 L
3135  500 mt 3108  500 L
 175  553 mt 
(240) s
 450  314 mt  477  314 L
3135  314 mt 3108  314 L
 175  367 mt 
(260) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 175  180 mt 
(280) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
468 -10 427 -163 468 -12 427 -165 468 -8 427 -167 450 1724 7 MP stroke
gr

12 w
c8
gs 377 1126 2832 672 MR c np
0 j
41 71 -82 0 41 -71 450 1771 4 MP
DP
41 71 -82 0 41 -71 877 1604 4 MP
DP
41 71 -82 0 41 -71 1345 1596 4 MP
DP
41 71 -82 0 41 -71 1772 1431 4 MP
DP
41 71 -82 0 41 -71 2240 1419 4 MP
DP
41 71 -82 0 41 -71 2667 1256 4 MP
DP
41 71 -82 0 41 -71 3135 1246 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
468 -165 427 -11 468 -166 427 -13 468 -15 427 -162 450 1868 7 MP stroke
gr

gs 377 1263 2832 679 MR c np
  36   36  450 1868 FO
  36   36  877 1706 FO
  36   36 1345 1691 FO
  36   36 1772 1678 FO
  36   36 2240 1512 FO
  36   36 2667 1501 FO
  36   36 3135 1336 FO
gr

gs 450 127 2686 2053 MR c np
DD
468 -13 427 -11 468 -169 427 -16 468 -163 427 -15 450 1867 7 MP stroke
gr

DD
gs 377 1407 2832 534 MR c np
SO
 414 1867 mt  486 1867 L
 450 1831 mt  450 1903 L
 841 1852 mt  913 1852 L
 877 1816 mt  877 1888 L
1309 1689 mt 1381 1689 L
1345 1653 mt 1345 1725 L
1736 1673 mt 1808 1673 L
1772 1637 mt 1772 1709 L
2204 1504 mt 2276 1504 L
2240 1468 mt 2240 1540 L
2631 1493 mt 2703 1493 L
2667 1457 mt 2667 1529 L
3099 1480 mt 3171 1480 L
3135 1444 mt 3135 1516 L
DD
gr

gs 450 127 2686 2053 MR c np
SO
468 -10 427 -166 468 -18 427 -11 468 -169 427 -15 450 2010 7 MP stroke
gr

SO
gs 377 1548 2832 536 MR c np
 425 1985 mt  475 2035 L
 475 1985 mt  425 2035 L
 852 1970 mt  902 2020 L
 902 1970 mt  852 2020 L
1320 1801 mt 1370 1851 L
1370 1801 mt 1320 1851 L
1747 1790 mt 1797 1840 L
1797 1790 mt 1747 1840 L
2215 1772 mt 2265 1822 L
2265 1772 mt 2215 1822 L
2642 1606 mt 2692 1656 L
2692 1606 mt 2642 1656 L
3110 1596 mt 3160 1646 L
3160 1596 mt 3110 1646 L
gr

gs 450 127 2686 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
468 -3 427 -10 468 -4 427 -192 468 -15 427 -6 450 1973 7 MP stroke
gr

c9
DD
gs 377 1670 2832 377 MR c np
SO
0 j
-41 71 -41 -71 82 0 409 1997 4 MP
DP
-41 71 -41 -71 82 0 836 1991 4 MP
DP
-41 71 -41 -71 82 0 1304 1976 4 MP
DP
-41 71 -41 -71 82 0 1731 1784 4 MP
DP
-41 71 -41 -71 82 0 2199 1780 4 MP
DP
-41 71 -41 -71 82 0 2626 1770 4 MP
DP
-41 71 -41 -71 82 0 3094 1767 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
c8
468 -5 427 -243 468 -7 427 -1 468 0 427 -243 450 2089 7 MP stroke
gr

c8
gs 377 1517 2832 646 MR c np
SO
0 j
0 -58 -58 0 0 58 58 0 421 2060 5 MP
DP
0 -58 -58 0 0 58 58 0 848 1817 5 MP
DP
0 -58 -58 0 0 58 58 0 1316 1817 5 MP
DP
0 -58 -58 0 0 58 58 0 1743 1816 5 MP
DP
0 -58 -58 0 0 58 58 0 2211 1809 5 MP
DP
0 -58 -58 0 0 58 58 0 2638 1566 5 MP
DP
0 -58 -58 0 0 58 58 0 3106 1561 5 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
468 -15 427 -200 468 -33 427 -7 468 -1 427 -5 450 1909 7 MP stroke
gr

SO
gs 377 1575 2832 408 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 450 1956 5 MP
DP
36 47 -36 47 -36 -47 36 -47 877 1951 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1345 1950 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1772 1943 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2240 1910 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2667 1710 5 MP
DP
36 47 -36 47 -36 -47 36 -47 3135 1695 5 MP
DP
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
1150 2553 mt 
(entries in leaf nodes) s
 120 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
6 w
 954  345 mt 
(B+tree   ) s
 954  511 mt 
(CSB+     ) s
 954  677 mt 
(p2B+tree ) s
 954  843 mt 
(p4B+tree ) s
 954 1009 mt 
(p8B+tree ) s
 954 1175 mt 
(p16B+tree) s
 954 1341 mt 
(p8CSB+   ) s
gs 551 198 1153 1189 MR c np
12 w
c8
241 0 632 296 2 MP stroke
gs 679 223 147 147 MR c np
0 j
41 71 -82 0 41 -71 752 343 4 MP
DP
gr

241 0 632 462 2 MP stroke
gs 679 389 147 147 MR c np
  36   36  752  462 FO
gr

DD
241 0 632 628 2 MP stroke
SO
gs 679 555 147 147 MR c np
 716  628 mt  788  628 L
 752  592 mt  752  664 L
gr

241 0 632 794 2 MP stroke
gs 679 721 147 147 MR c np
 727  769 mt  777  819 L
 777  769 mt  727  819 L
gr

DD
c9
241 0 632 961 2 MP stroke
SO
gs 679 888 147 147 MR c np
0 j
-41 71 -41 -71 82 0 711 985 4 MP
DP
gr

DD
c8
241 0 632 1127 2 MP stroke
SO
gs 679 1054 147 147 MR c np
0 j
0 -58 -58 0 0 58 58 0 723 1098 5 MP
DP
gr

241 0 632 1293 2 MP stroke
gs 679 1220 147 147 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 752 1340 5 MP
DP
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1117 429 a Fv(\(a\))i(w)o(arm)g(cac)o(he)315
b(\(b\))13 b(cold)h(cac)o(he)p 1020 473 V 1020 508 a
Fq(Figure)e(7:)19 b(100K)13 b(searc)o(hes)h(after)g(bulkloading)c
(10K-10M)1020 549 y(k)o(eys.)1020 641 y(T)l(able)k(3:)20
b(The)14 b(n)o(um)o(b)q(er)f(of)h(lev)o(els)g(in)f(trees)j(for)e
(Figure)g(7.)p 1020 667 1015 2 v 1019 702 2 36 v 1259
702 V 1267 702 V 1524 692 a Fk(Num)o(b)q(er)d(of)g(Keys)p
2033 702 V 1267 704 768 2 v 1019 738 2 36 v 1060 727
a(T)m(ree)h(T)o(yp)q(e)p 1259 738 V 1266 738 V 69 w(10K)p
1374 738 V 45 w(30K)p 1481 738 V 44 w(100K)p 1606 738
V 44 w(300K)p 1731 738 V 45 w(1M)p 1826 738 V 44 w(3M)p
1921 738 V 45 w(10M)p 2033 738 V 1020 739 1015 2 v 1020
746 V 1019 785 2 39 v 1075 775 a(B)1100 763 y Ft(+)1125
775 y Fk(-T)m(ree)p 1259 785 V 1266 785 V 107 w(5)p 1374
785 V 89 w(6)p 1481 785 V 99 w(6)p 1606 785 V 107 w(7)p
1731 785 V 92 w(7)p 1826 785 V 77 w(8)p 1921 785 V 85
w(8)p 2033 785 V 1020 787 1015 2 v 1019 825 2 39 v 1052
814 a(CSB)1122 803 y Ft(+)1148 814 y Fk(-T)m(ree)p 1259
825 V 1266 825 V 84 w(4)p 1374 825 V 89 w(5)p 1481 825
V 99 w(5)p 1606 825 V 107 w(5)p 1731 825 V 92 w(6)p 1826
825 V 77 w(6)p 1921 825 V 85 w(7)p 2033 825 V 1020 827
1015 2 v 1019 865 2 39 v 1056 855 a(p)1076 843 y Ft(2)1093
855 y Fk(B)1118 843 y Ft(+)1144 855 y Fk(-T)m(ree)p 1259
865 V 1266 865 V 88 w(4)p 1374 865 V 89 w(4)p 1481 865
V 99 w(5)p 1606 865 V 107 w(5)p 1731 865 V 92 w(6)p 1826
865 V 77 w(6)p 1921 865 V 85 w(6)p 2033 865 V 1020 867
1015 2 v 1019 905 2 39 v 1056 895 a(p)1076 883 y Ft(4)1093
895 y Fk(B)1118 883 y Ft(+)1144 895 y Fk(-T)m(ree)p 1259
905 V 1266 905 V 88 w(3)p 1374 905 V 89 w(3)p 1481 905
V 99 w(4)p 1606 905 V 107 w(4)p 1731 905 V 92 w(4)p 1826
905 V 77 w(5)p 1921 905 V 85 w(5)p 2033 905 V 1020 907
1015 2 v 1019 945 2 39 v 1056 935 a(p)1076 923 y Ft(8)1093
935 y Fk(B)1118 923 y Ft(+)1144 935 y Fk(-T)m(ree)p 1259
945 V 1266 945 V 88 w(3)p 1374 945 V 89 w(3)p 1481 945
V 99 w(3)p 1606 945 V 107 w(4)p 1731 945 V 92 w(4)p 1826
945 V 77 w(4)p 1921 945 V 85 w(4)p 2033 945 V 1020 947
1015 2 v 1019 985 2 39 v 1049 975 a(p)1069 963 y Ft(16)1101
975 y Fk(B)1126 963 y Ft(+)1151 975 y Fk(-T)m(ree)p 1259
985 V 1266 985 V 81 w(2)p 1374 985 V 89 w(3)p 1481 985
V 99 w(3)p 1606 985 V 107 w(3)p 1731 985 V 92 w(3)p 1826
985 V 77 w(4)p 1921 985 V 85 w(4)p 2033 985 V 1020 987
1015 2 v 1019 1025 2 39 v 1042 1015 a(pCSB)1132 1003
y Ft(+)1157 1015 y Fk(-T)m(ree)p 1259 1025 V 1266 1025
V 75 w(3)p 1374 1025 V 89 w(3)p 1481 1025 V 99 w(3)p
1606 1025 V 107 w(3)p 1731 1025 V 92 w(3)p 1826 1025
V 77 w(4)p 1921 1025 V 85 w(4)p 2033 1025 V 1020 1027
1015 2 v 1020 1111 a Fv(men)o(ts)e(sho)o(wn)f(in)i(Figure)f(7\(a\),)g
(searc)o(h)g(op)q(erations)h(are)e(p)q(erformed)1020
1152 y(one)21 b(immediately)i(after)e(another)g(\(the)g(\\w)o(arm)f
(cac)o(he")h(case\);)1020 1194 y(whereas)13 b(in)f(the)h(exp)q(erimen)o
(ts)h(sho)o(wn)e(in)h(Figure)g(7\(b\),)f(the)h(cac)o(he)1020
1235 y(is)h(cleared)g(b)q(et)o(w)o(een)g(eac)o(h)f(searc)o(h)h(\(the)f
(\\cold)i(cac)o(he")e(case\).)18 b(De-)1020 1276 y(p)q(ending)d(on)e
(the)g(op)q(erations)i(p)q(erformed)f(b)q(et)o(w)o(een)f(the)g(searc)o
(hes,)1020 1318 y(the)i(real-w)o(orld)i(p)q(erformance)e(of)g(an)g
(index)i(searc)o(h)e(w)o(ould)h(lie)g(in)1020 1359 y(b)q(et)o(w)o(een)
11 b(the)g(t)o(w)o(o)f(extremes:)16 b(closer)11 b(to)g(the)f(w)o(arm)h
(cac)o(he)g(case)f(for)1020 1401 y(index)g(joins,)h(while)f(often)f
(closer)g(to)g(the)g(cold)h(cac)o(he)f(case)h(for)e(single)1020
1442 y(v)n(alue)17 b(selections.)27 b(F)m(rom)15 b(these)h(exp)q
(erimen)o(ts,)i(w)o(e)d(see)g(that:)23 b(\(i\))1020 1484
y(the)15 b(B)1115 1468 y Ft(+)1140 1484 y Fv(-T)m(ree)f(has)g(the)h(w)o
(orst)f(p)q(erformance;)i(\(ii\))f(the)f(trees)h(with)1020
1525 y(wider)i(no)q(des)g(and)f(prefetc)o(hing)i(supp)q(ort)f(\(pB)1726
1509 y Ft(+)1752 1525 y Fv(-T)m(rees,)f(pCSB)1978 1509
y Ft(+)2004 1525 y Fv(-)1020 1566 y(T)m(ree\))i(all)h(p)q(erform)f(b)q
(etter)h(than)f(their)h(non-prefetc)o(hing)i(coun-)1020
1608 y(terparts)15 b(\(B)1209 1592 y Ft(+)1235 1608 y
Fv(-T)m(ree,)f(CSB)1423 1592 y Ft(+)1449 1608 y Fv(-T)m(ree\);)h(and)g
(\(iii\))i(the)e(p)1819 1592 y Ft(8)1837 1608 y Fv(B)1864
1592 y Ft(+)1889 1608 y Fv(-T)m(ree)g(is)1020 1649 y(comparable)i(to)d
(or)h(b)q(etter)g(than)h(all)g(other)f(pB)1737 1633 y
Ft(+)1763 1649 y Fv(-T)m(rees)f(o)o(v)o(er)h(the)1020
1691 y(en)o(tire)g(range)f(of)g(tree)g(sizes.)20 b(F)m(or)14
b(w)o(arm)g(cac)o(hes,)g(the)g(sp)q(eedup)h(of)1020 1732
y(the)e(p)1107 1716 y Ft(8)1125 1732 y Fv(B)1152 1716
y Ft(+)1177 1732 y Fv(-T)m(ree)f(o)o(v)o(er)h(the)g(B)1451
1716 y Ft(+)1477 1732 y Fv(-T)m(ree)f(is)i(b)q(et)o(w)o(een)f(a)g
(factor)f(of)h(1.27)1020 1773 y(to)k(1.47.)30 b(The)17
b(w)o(arm)g(cac)o(he)h(sp)q(eedup)h(of)e(the)g(p)1773
1757 y Ft(8)1791 1773 y Fv(B)1818 1757 y Ft(+)1843 1773
y Fv(-T)m(ree)g(o)o(v)o(er)1020 1815 y(the)d(CSB)1163
1799 y Ft(+)1188 1815 y Fv(-T)m(ree)f(is)i(b)q(et)o(w)o(een)e(a)h
(factor)g(of)f(1.14)h(to)f(1.28)h(once)g(the)1020 1856
y(tree)f(no)g(longer)h(\014ts)f(in)h(the)f(L2)g(cac)o(he.)k(Lik)o
(ewise,)d(the)f(cold)h(cac)o(he)1020 1898 y(sp)q(eedups)h(are)e(1.32)g
(to)g(1.55)g(and)h(1.14)f(to)f(1.34,)h(resp)q(ectiv)o(ely)m(.)1057
1939 y(The)c(cold)i(cac)o(he)e(curv)o(es)h(pro)o(vide)h(insigh)o(t)g
(in)o(to)f(the)f(index)i(searc)o(h)1020 1980 y(p)q(erformance.)41
b(The)21 b(trend)g(of)f(ev)o(ery)h(single)i(curv)o(e)e(is)g(clearly)
1020 2022 y(sho)o(wn)14 b(in)f(the)g(cold)i(cac)o(he)e(exp)q(erimen)o
(t:)19 b(the)13 b(curv)o(es)g(all)i(increase)1020 2063
y(in)j(discrete)g(large)g(steps,)g(and)f(within)i(the)e(same)g(step)g
(they)h(in-)1020 2105 y(crease)13 b(only)h(sligh)o(tly)m(.)20
b(The)13 b(large)g(steps)h(for)e(a)h(curv)o(e)g(o)q(ccur)h(when)1020
2146 y(the)g(n)o(um)o(b)q(er)g(of)f(lev)o(els)i(in)g(the)e(tree)h
(increases.)19 b(This)c(can)e(b)q(e)h(v)o(er-)1020 2187
y(i\014ed)20 b(b)o(y)e(examining)j(T)m(able)e(3,)h(whic)o(h)f(depicts)h
(the)e(n)o(um)o(b)q(er)h(of)1020 2229 y(lev)o(els)g(in)f(the)f(tree)g
(for)g(eac)o(h)g(data)h(p)q(oin)o(t)g(plotted)g(in)g(Figure)g(7.)1020
2270 y(Within)f(a)d(step,)h(additional)j(leaf)d(no)q(des)h(result)f(in)
h(more)e(k)o(eys)h(in)1020 2312 y(the)9 b(ro)q(ot)h(no)q(de)g(\(the)f
(other)h(no)q(des)g(in)g(the)g(tree)f(remain)h(full\),)h(whic)o(h)1020
2353 y(in)16 b(turn)g(increases)h(the)f(cost)g(to)f(searc)o(h)h(the)g
(ro)q(ot.)25 b(The)15 b(step-up)1020 2394 y(trend)g(is)h(blurred)g(in)g
(the)f(w)o(arm)g(cac)o(he)g(curv)o(es)h(b)q(ecause)g(the)f(top)1020
2436 y(lev)o(els)20 b(of)d(the)h(tree)g(ma)o(y)g(remain)h(in)g(the)f
(cac)o(he.)32 b(F)m(or)18 b(di\013eren)o(t)1020 2477
y(curv)o(es,)d(w)o(e)e(can)h(see)g(that)g(generally)j(the)d(higher)h
(the)f(tree)g(struc-)1020 2519 y(ture,)g(the)f(larger)i(the)f(searc)o
(h)g(cost;)g(when)f(trees)h(are)g(of)f(the)h(same)1020
2560 y(heigh)o(t,)f(the)g(smaller)h(no)q(de)f(size)g(yields)h(b)q
(etter)e(p)q(erformance.)18 b(W)m(e)p 1020 2592 399 2
v 1020 2626 a Fm(and)12 b(1,000,000,)e(resp)q(ectiv)o(ely)m(,)j(except)
f(for)f(when)h(w)o(e)f(refer)h(to)f(the)h(size)f(of)h(a)1020
2657 y(memory)i(structure)g(\(e.g.,)h(a)e(cac)o(he\),)h(in)g(whic)o(h)g
(case)f(they)i(corresp)q(ond)e(to)1020 2689 y(1024)c(and)j(1,048,576,)d
(resp)q(ectiv)o(ely)m(.)p eop
%%Page: 9 9
9 8 bop -76 -74 997 2 v -130 385 a @beginspecial 161
@llx 292 @lly 436 @urx 504 @ury 1029 @rhi @setspecial
%%BeginDocument: graphs/exp2.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0    -3  3304  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 370 2348 mt 
(50) s
 987 2179 mt  987 2152 L
 987  127 mt  987  154 L
 907 2348 mt 
(60) s
1524 2179 mt 1524 2152 L
1524  127 mt 1524  154 L
1444 2348 mt 
(70) s
2061 2179 mt 2061 2152 L
2061  127 mt 2061  154 L
1981 2348 mt 
(80) s
2598 2179 mt 2598 2152 L
2598  127 mt 2598  154 L
2518 2348 mt 
(90) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3015 2348 mt 
(100) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 255 2232 mt 
(40) s
 450 1886 mt  477 1886 L
3135 1886 mt 3108 1886 L
 255 1939 mt 
(50) s
 450 1593 mt  477 1593 L
3135 1593 mt 3108 1593 L
 255 1646 mt 
(60) s
 450 1300 mt  477 1300 L
3135 1300 mt 3108 1300 L
 255 1353 mt 
(70) s
 450 1006 mt  477 1006 L
3135 1006 mt 3108 1006 L
 255 1059 mt 
(80) s
 450  713 mt  477  713 L
3135  713 mt 3108  713 L
 255  766 mt 
(90) s
 450  420 mt  477  420 L
3135  420 mt 3108  420 L
 175  473 mt 
(100) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 175  180 mt 
(110) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
767 131 767 153 768 252 833 961 4 MP stroke
gr

12 w
c8
gs 760 888 2449 683 MR c np
0 j
41 71 -82 0 41 -71 833 1008 4 MP
DP
41 71 -82 0 41 -71 1601 1260 4 MP
DP
41 71 -82 0 41 -71 2368 1413 4 MP
DP
41 71 -82 0 41 -71 3135 1544 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
767 136 767 54 768 116 833 1485 4 MP stroke
gr

gs 760 1412 2449 453 MR c np
  36   36  833 1485 FO
  36   36 1601 1601 FO
  36   36 2368 1655 FO
  36   36 3135 1791 FO
gr

gs 450 127 2686 2053 MR c np
DD
716 83 358 42 716 112 358 78 987 1511 5 MP stroke
gr

DD
gs 914 1438 2295 462 MR c np
SO
 951 1511 mt 1023 1511 L
 987 1475 mt  987 1547 L
1309 1589 mt 1381 1589 L
1345 1553 mt 1345 1625 L
2025 1701 mt 2097 1701 L
2061 1665 mt 2061 1737 L
2383 1743 mt 2455 1743 L
2419 1707 mt 2419 1779 L
3099 1826 mt 3171 1826 L
3135 1790 mt 3135 1862 L
DD
gr

gs 450 127 2686 2053 MR c np
SO
693 37 520 28 519 43 520 123 883 1737 5 MP stroke
gr

SO
gs 810 1664 2399 378 MR c np
 858 1712 mt  908 1762 L
 908 1712 mt  858 1762 L
1378 1835 mt 1428 1885 L
1428 1835 mt 1378 1885 L
1897 1878 mt 1947 1928 L
1947 1878 mt 1897 1928 L
2417 1906 mt 2467 1956 L
2467 1906 mt 2417 1956 L
3110 1943 mt 3160 1993 L
3160 1943 mt 3110 1993 L
gr

gs 450 127 2686 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
597 0 511 23 512 25 596 80 919 1893 5 MP stroke
gr

c9
DD
gs 846 1820 2363 275 MR c np
SO
0 j
-41 71 -41 -71 82 0 878 1917 4 MP
DP
-41 71 -41 -71 82 0 1474 1997 4 MP
DP
-41 71 -41 -71 82 0 1986 2022 4 MP
DP
-41 71 -41 -71 82 0 2497 2045 4 MP
DP
-41 71 -41 -71 82 0 3094 2045 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
c8
550 3 549 6 550 8 508 18 978 1905 5 MP stroke
gr

c8
gs 905 1832 2304 182 MR c np
SO
0 j
0 -58 -58 0 0 58 58 0 949 1876 5 MP
DP
0 -58 -58 0 0 58 58 0 1457 1894 5 MP
DP
0 -58 -58 0 0 58 58 0 2007 1902 5 MP
DP
0 -58 -58 0 0 58 58 0 2556 1908 5 MP
DP
0 -58 -58 0 0 58 58 0 3106 1911 5 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
597 1 511 8 512 16 596 31 919 2004 5 MP stroke
gr

SO
gs 846 1931 2363 203 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 919 2051 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1515 2082 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2027 2098 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2538 2106 5 MP
DP
36 47 -36 47 -36 -47 36 -47 3135 2107 5 MP
DP
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
 514 2509 mt 
(percentage of entries used in leaf nodes) s
 120 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
6 w
2395  288 mt 
(B+tree   ) s
2395  454 mt 
(CSB+     ) s
2395  620 mt 
(p2B+tree ) s
2395  786 mt 
(p4B+tree ) s
2395  952 mt 
(p8B+tree ) s
2395 1118 mt 
(p16B+tree) s
2395 1284 mt 
(p8CSB+   ) s
gs 1992 141 1153 1189 MR c np
12 w
c8
241 0 2073 239 2 MP stroke
gs 2120 166 147 147 MR c np
0 j
41 71 -82 0 41 -71 2193 286 4 MP
DP
gr

241 0 2073 405 2 MP stroke
gs 2120 332 147 147 MR c np
  36   36 2193  405 FO
gr

DD
241 0 2073 571 2 MP stroke
SO
gs 2120 498 147 147 MR c np
2157  571 mt 2229  571 L
2193  535 mt 2193  607 L
gr

241 0 2073 737 2 MP stroke
gs 2120 664 147 147 MR c np
2168  712 mt 2218  762 L
2218  712 mt 2168  762 L
gr

DD
c9
241 0 2073 904 2 MP stroke
SO
gs 2120 831 147 147 MR c np
0 j
-41 71 -41 -71 82 0 2152 928 4 MP
DP
gr

DD
c8
241 0 2073 1070 2 MP stroke
SO
gs 2120 997 147 147 MR c np
0 j
0 -58 -58 0 0 58 58 0 2164 1041 5 MP
DP
gr

241 0 2073 1236 2 MP stroke
gs 2120 1163 147 147 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 2193 1283 5 MP
DP
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 548 w @beginspecial 161 @llx 292 @lly 436
@urx 504 @ury 1029 @rhi @setspecial
%%BeginDocument: graphs/exp2-cold.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0    -3  3304  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 370 2348 mt 
(50) s
 987 2179 mt  987 2152 L
 987  127 mt  987  154 L
 907 2348 mt 
(60) s
1524 2179 mt 1524 2152 L
1524  127 mt 1524  154 L
1444 2348 mt 
(70) s
2061 2179 mt 2061 2152 L
2061  127 mt 2061  154 L
1981 2348 mt 
(80) s
2598 2179 mt 2598 2152 L
2598  127 mt 2598  154 L
2518 2348 mt 
(90) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3015 2348 mt 
(100) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 175 2232 mt 
(100) s
 450 1769 mt  477 1769 L
3135 1769 mt 3108 1769 L
 175 1822 mt 
(140) s
 450 1358 mt  477 1358 L
3135 1358 mt 3108 1358 L
 175 1411 mt 
(180) s
 450  948 mt  477  948 L
3135  948 mt 3108  948 L
 175 1001 mt 
(220) s
 450  537 mt  477  537 L
3135  537 mt 3108  537 L
 175  590 mt 
(260) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 175  180 mt 
(300) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
767 8 767 165 768 159 833 1190 4 MP stroke
gr

12 w
c8
gs 760 1117 2449 479 MR c np
0 j
41 71 -82 0 41 -71 833 1237 4 MP
DP
41 71 -82 0 41 -71 1601 1396 4 MP
DP
41 71 -82 0 41 -71 2368 1561 4 MP
DP
41 71 -82 0 41 -71 3135 1569 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
767 166 767 -2 768 -2 833 1682 4 MP stroke
gr

gs 760 1605 2449 313 MR c np
  36   36  833 1682 FO
  36   36 1601 1680 FO
  36   36 2368 1678 FO
  36   36 3135 1844 FO
gr

gs 450 127 2686 2053 MR c np
DD
716 0 358 0 716 161 358 0 987 1674 5 MP stroke
gr

DD
gs 914 1601 2295 308 MR c np
SO
 951 1674 mt 1023 1674 L
 987 1638 mt  987 1710 L
1309 1674 mt 1381 1674 L
1345 1638 mt 1345 1710 L
2025 1835 mt 2097 1835 L
2061 1799 mt 2061 1871 L
2383 1835 mt 2455 1835 L
2419 1799 mt 2419 1871 L
3099 1835 mt 3171 1835 L
3135 1799 mt 3135 1871 L
DD
gr

gs 450 127 2686 2053 MR c np
SO
693 -7 520 -4 519 2 520 171 883 1825 5 MP stroke
gr

SO
gs 810 1752 2399 320 MR c np
 858 1800 mt  908 1850 L
 908 1800 mt  858 1850 L
1378 1971 mt 1428 2021 L
1428 1971 mt 1378 2021 L
1897 1973 mt 1947 2023 L
1947 1973 mt 1897 2023 L
2417 1969 mt 2467 2019 L
2467 1969 mt 2417 2019 L
3110 1962 mt 3160 2012 L
3160 1962 mt 3110 2012 L
gr

gs 450 127 2686 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
597 -19 511 0 512 2 596 184 919 1947 5 MP stroke
gr

c9
DD
gs 846 1874 2363 333 MR c np
SO
0 j
-41 71 -41 -71 82 0 878 1971 4 MP
DP
-41 71 -41 -71 82 0 1474 2155 4 MP
DP
-41 71 -41 -71 82 0 1986 2157 4 MP
DP
-41 71 -41 -71 82 0 2497 2157 4 MP
DP
-41 71 -41 -71 82 0 3094 2138 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
c8
550 -13 549 -12 550 -16 508 -11 978 1999 5 MP stroke
gr

c8
gs 905 1874 2304 199 MR c np
SO
0 j
0 -58 -58 0 0 58 58 0 949 1970 5 MP
DP
0 -58 -58 0 0 58 58 0 1457 1959 5 MP
DP
0 -58 -58 0 0 58 58 0 2007 1943 5 MP
DP
0 -58 -58 0 0 58 58 0 2556 1931 5 MP
DP
0 -58 -58 0 0 58 58 0 3106 1918 5 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
597 -10 511 -12 512 -10 596 -13 919 2067 5 MP stroke
gr

SO
gs 846 1949 2363 192 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 919 2114 5 MP
DP
36 47 -36 47 -36 -47 36 -47 1515 2101 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2027 2091 5 MP
DP
36 47 -36 47 -36 -47 36 -47 2538 2079 5 MP
DP
36 47 -36 47 -36 -47 36 -47 3135 2069 5 MP
DP
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
 514 2509 mt 
(percentage of entries used in leaf nodes) s
 120 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
6 w
2326  334 mt 
(B+tree   ) s
2326  500 mt 
(CSB+     ) s
2326  666 mt 
(p2B+tree ) s
2326  832 mt 
(p4B+tree ) s
2326  998 mt 
(p8B+tree ) s
2326 1164 mt 
(p16B+tree) s
2326 1330 mt 
(p8CSB+   ) s
gs 1923 187 1153 1189 MR c np
12 w
c8
241 0 2004 285 2 MP stroke
gs 2051 212 147 147 MR c np
0 j
41 71 -82 0 41 -71 2124 332 4 MP
DP
gr

241 0 2004 451 2 MP stroke
gs 2051 378 147 147 MR c np
  36   36 2124  451 FO
gr

DD
241 0 2004 617 2 MP stroke
SO
gs 2051 544 147 147 MR c np
2088  617 mt 2160  617 L
2124  581 mt 2124  653 L
gr

241 0 2004 783 2 MP stroke
gs 2051 710 147 147 MR c np
2099  758 mt 2149  808 L
2149  758 mt 2099  808 L
gr

DD
c9
241 0 2004 950 2 MP stroke
SO
gs 2051 877 147 147 MR c np
0 j
-41 71 -41 -71 82 0 2083 974 4 MP
DP
gr

DD
c8
241 0 2004 1116 2 MP stroke
SO
gs 2051 1043 147 147 MR c np
0 j
0 -58 -58 0 0 58 58 0 2095 1087 5 MP
DP
gr

241 0 2004 1282 2 MP stroke
gs 2051 1209 147 147 MR c np
0 j
36 47 -36 47 -36 -47 36 -47 2124 1329 5 MP
DP
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 19 426 a Fv(\(a\))13 b(w)o(arm)f(cac)o(he)325
b(\(b\))13 b(cold)h(cac)o(he)p -76 470 V -76 505 a Fq(Figure)h(8:)22
b(100K)16 b(searc)o(hes)g(after)h(bulkloading)c(3M)i(k)o(eys)-76
546 y(with)f(v)n(arious)h(bulkload)d(factors.)-76 614
y Fv(conclude)18 b(that)d(the)h(p)q(erformance)g(gains)h(for)f(wider)g
(no)q(des)g(stem)-76 655 y(mainly)f(from)e(the)g(resulting)i(decrease)f
(in)g(tree)f(heigh)o(t.)-38 696 y(Another)j(observ)n(ation)i(w)o(orth)d
(men)o(tioning)k(is)d(that)g(when)g(the)-76 738 y(n)o(um)o(b)q(er)10
b(of)f(lev)o(els)h(are)g(the)f(same,)g(the)h(p)508 722
y Ft(2)525 738 y Fv(B)552 722 y Ft(+)578 738 y Fv(-T)m(ree)e(and)i(the)
f(CSB)882 722 y Ft(+)908 738 y Fv(-)-76 779 y(T)m(ree)18
b(ha)o(v)o(e)h(v)o(ery)g(similar)h(p)q(erformance.)34
b(This)20 b(is)f(b)q(ecause)g(the)-76 821 y(second)c(cac)o(he)f(line)h
(in)g(a)f(p)326 805 y Ft(2)343 821 y Fv(B)370 805 y Ft(+)396
821 y Fv(-T)m(ree)f(no)q(de)h(stores)g(p)q(oin)o(ters,)i(and)-76
862 y(the)e(cost)f(of)g(retrieving)j(these)e(second)g(lines)h(is)f
(partly)h(hidden)g(b)o(y)-76 903 y(the)j(k)o(ey)f(comparisons.)32
b(By)17 b(eliminati)q(ng)j(all)f(but)f(one)f(p)q(oin)o(ter,)-76
945 y(the)d(CSB)67 929 y Ft(+)93 945 y Fv(-T)m(ree)e(has)i(almost)h
(the)f(same)g(n)o(um)o(b)q(er)g(of)f(k)o(eys)h(as)g(the)-76
986 y(p)-55 970 y Ft(2)-37 986 y Fv(B)-10 970 y Ft(+)15
986 y Fv(-T)m(ree,)e(resulting)j(in)f(similar)h(k)o(ey)f(comparison)h
(costs.)-38 1051 y Fq(V)l(arying)h(the)f(bulkload)f(factor.)35
b Fv(Figure)15 b(8)f(sho)o(ws)g(the)g(ef-)-76 1092 y(fect)h(on)i(searc)
o(h)f(p)q(erformance)g(of)g(v)n(arying)h(the)f(bulkload)j(factor.)-76
1134 y(All)c(the)f(trees)g(are)g(bulkloaded)k(with)c(3M)g
Fp(h)p Fo(key)p Fv(,)d Fo(tupleID)p Fp(i)f Fv(pairs)r(,)-76
1175 y(with)17 b(bulkload)i(factors)d(of)g(60\045,)h(70\045,)g(80\045,)
g(90\045,)g(and)g(100\045.)-76 1216 y(Because)f(the)f(actual)h(n)o(um)o
(b)q(er)f(of)g(used)g(en)o(tries)h(in)f(leaf)h(no)q(des)f(in)-76
1258 y(an)d(exp)q(erimen)o(t)i(is)f(the)f(pro)q(duct)h(of)f(the)g
(bulkload)i(factor)e(and)h(the)-76 1299 y(maxim)o(um)h(n)o(um)o(b)q(er)
f(of)f(slots)i(\(rounded)g(to)e(the)h(nearest)g(in)o(teger\),)-76
1341 y(w)o(e)i(computed)h(and)g(used)g(the)f(true)g(p)q(ercen)o(tage)i
(of)d(used)i(en)o(tries)-76 1382 y(when)10 b(plotting)h(the)f
(data|hence)h(they)f(ma)o(y)g(not)f(b)q(e)h(aligned)i(with)-76
1423 y(the)g(target)f(bulkload)j(factors.)i(As)11 b(in)h(the)g
(previous)h(exp)q(erimen)o(ts,)-76 1465 y(Figure)20 b(8)e(sho)o(ws)g
(that:)28 b(\(i\))19 b(the)f(B)469 1449 y Ft(+)494 1465
y Fv(-T)m(ree)g(has)h(the)f(w)o(orst)g(p)q(er-)-76 1506
y(formance;)i(\(ii\))e(the)g(trees)f(with)h(wider)g(no)q(des)h(and)f
(prefetc)o(hing)-76 1548 y(supp)q(ort)e(\(pB)131 1532
y Ft(+)157 1548 y Fv(-T)m(rees,)f(pCSB)382 1532 y Ft(+)408
1548 y Fv(-T)m(ree\))f(all)j(p)q(erform)e(b)q(etter)h(than)-76
1589 y(their)i(non-prefetc)o(hing)h(coun)o(terparts)f(\(B)566
1573 y Ft(+)592 1589 y Fv(-T)m(ree,)f(CSB)783 1573 y
Ft(+)808 1589 y Fv(-T)m(ree\);)-76 1630 y(and)d(\(iii\))g(the)g(p)161
1615 y Ft(8)178 1630 y Fv(B)205 1615 y Ft(+)231 1630
y Fv(-T)m(ree)e(is)i(the)f(b)q(est)g(of)g(all)h(the)f(pB)728
1615 y Ft(+)754 1630 y Fv(-T)m(rees.)-38 1672 y(In)f(the)g(cold)h(cac)o
(he)g(exp)q(erimen)o(t,)h(w)o(e)d(see)i(a)f(step-do)o(wn)h(pattern)-76
1713 y(in)i(the)f(curv)o(es:)19 b(the)14 b(steps)g(corresp)q(ond)h(to)f
(the)g(n)o(um)o(b)q(er)g(of)g(lev)o(els)-76 1755 y(in)i(the)f(trees,)g
(since)h(the)f(tree)f(heigh)o(t)i(decreases)g(\(in)g(a)f(step-wise)-76
1796 y(fashion\))20 b(as)e(the)g(bulkload)j(factor)e(increases.)34
b(Within)20 b(a)e(step,)-76 1838 y(ho)o(w)o(ev)o(er,)13
b(the)f(curv)o(es)h(increase)h(sligh)o(tly)m(.)19 b(This)13
b(is)f(b)q(ecause)i(in)f(our)-76 1879 y(bulkload)g(algorithms,)g(the)d
(bulkload)j(factor)d(also)h(determines)h(the)-76 1920
y(n)o(um)o(b)q(er)f(of)g(k)o(eys)f(in)i(non-leaf)f(no)q(des.)17
b(So)11 b(the)f(larger)i(the)e(bulkload)-76 1962 y(factor,)i(the)g
(larger)g(the)g(n)o(um)o(b)q(er)h(of)e(k)o(eys)h(in)h(eac)o(h)f(non-ro)
q(ot)h(no)q(de,)-76 2003 y(and)h(hence)g(the)f(larger)h(the)f(k)o(ey)g
(comparison)i(cost.)-38 2045 y(In)d(the)i(full)g(pap)q(er)g([7],)e(w)o
(e)g(also)i(presen)o(t)g(exp)q(erimen)o(tal)h(results)-76
2086 y(for)k Fu(matur)n(e)h Fv(trees)f([20],)h(created)f(b)o(y)h
(bulkloadin)q(g)h(10\045)e(of)g(the)-76 2127 y Fp(h)p
Fo(key)p Fv(,)11 b Fo(tupleID)p Fp(i)f Fv(pairs)j(and)g(then)f
(inserting)i(the)e(remaining)i(90\045.)-76 2169 y(W)m(e)k(\014nd)g
(similar)h(p)q(erformance)f(for)g(mature)f(trees)h(as)f(for)g(trees)-76
2210 y(immediately)f(after)d(bulkloads.)-38 2275 y Fq(Searc)o(hes)j(on)
g(trees)h(with)e(jump-p)q(oin)o(ter)e(arra)o(ys.)39 b
Fv(Our)-76 2316 y(next)11 b(exp)q(erimen)o(t)h(determines)g(whether)e
(the)h(di\013eren)o(t)g(structures)-76 2358 y(for)f(sp)q(eeding)h(up)f
(range)h(scans)f(ha)o(v)o(e)g(an)g(impact)h(on)f(searc)o(h)g(p)q
(erfor-)-76 2399 y(mance.)17 b(W)m(e)11 b(use)g(no)q(de)g(width)h
Fd(w)f Fv(=)f(8)h(for)g(these)g(exp)q(erimen)o(ts,)h(b)q(e-)-76
2440 y(cause)f(the)f(p)108 2424 y Ft(8)125 2440 y Fv(B)152
2424 y Ft(+)178 2440 y Fv(-T)m(ree)f(resulted)i(in)g(the)f(b)q(est)g
(searc)o(h)g(p)q(erformance)-76 2482 y(among)i(the)f(pB)158
2466 y Ft(+)184 2482 y Fv(-T)m(rees.)16 b(Figure)c(9)f(compares)h(the)f
(searc)o(h)g(p)q(erfor-)-76 2523 y(mance)f(of)e(the)h(p)162
2507 y Ft(8)180 2523 y Fv(B)207 2507 y Ft(+)233 2523
y Fv(-T)m(ree,)f(the)h(p)422 2507 y Ft(8)422 2530 y Ff(e)440
2523 y Fv(B)467 2507 y Ft(+)493 2523 y Fv(-T)m(ree,)f(and)i(the)f(p)753
2507 y Ft(8)753 2530 y Ff(i)771 2523 y Fv(B)798 2507
y Ft(+)823 2523 y Fv(-T)m(ree.)-76 2565 y(The)15 b(same)f(exp)q(erimen)
o(ts)i(as)f(in)g(Figure)h(7)e(w)o(ere)g(p)q(erformed.)22
b(Re-)-76 2606 y(call)17 b(that)f(b)q(oth)g(the)g(p)266
2590 y Ft(8)266 2613 y Ff(e)284 2606 y Fv(B)311 2590
y Ft(+)336 2606 y Fv(-T)m(ree)f(and)h(the)g(p)605 2590
y Ft(8)605 2613 y Ff(i)623 2606 y Fv(B)650 2590 y Ft(+)675
2606 y Fv(-T)m(ree)f(consume)-76 2647 y(space)h(in)f(the)g(tree)g
(structures)g(relativ)o(e)i(to)d(the)h(p)679 2632 y Ft(8)697
2647 y Fv(B)724 2632 y Ft(+)749 2647 y Fv(-T)m(ree:)20
b(the)-76 2689 y(maxim)o(um)15 b(n)o(um)o(b)q(er)f(of)f(k)o(eys)h(in)g
(leaf)f(no)q(des)i(is)f(one)f(few)o(er)g(for)g(the)p
1020 -74 V 974 391 a @beginspecial 168 @llx 288 @lly
438 @urx 504 @ury 1044 @rhi @setspecial
%%BeginDocument: graphs/exp1-3compare.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

   95    -3  3231  2590 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2686 0 0 -2052 484 2179 4 MP
PP
-2686 0 0 2052 2686 0 0 -2052 484 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 484 2179 mt 3170 2179 L
 484  127 mt 3170  127 L
 484 2179 mt  484  127 L
3170 2179 mt 3170  127 L
 484 2179 mt 3170 2179 L
 484 2179 mt  484  127 L
 484 2179 mt  484 2166 L
 484  127 mt  484  140 L
 484 2179 mt  484 2152 L
 484  127 mt  484  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 378 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 538 2303 mt 
(4) s
 754 2179 mt  754 2166 L
 754  127 mt  754  140 L
 911 2179 mt  911 2166 L
 911  127 mt  911  140 L
1023 2179 mt 1023 2166 L
1023  127 mt 1023  140 L
1110 2179 mt 1110 2166 L
1110  127 mt 1110  140 L
1181 2179 mt 1181 2166 L
1181  127 mt 1181  140 L
1241 2179 mt 1241 2166 L
1241  127 mt 1241  140 L
1293 2179 mt 1293 2166 L
1293  127 mt 1293  140 L
1338 2179 mt 1338 2166 L
1338  127 mt 1338  140 L
1379 2179 mt 1379 2166 L
1379  127 mt 1379  140 L
1379 2179 mt 1379 2152 L
1379  127 mt 1379  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

1273 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

1433 2303 mt 
(5) s
1649 2179 mt 1649 2166 L
1649  127 mt 1649  140 L
1807 2179 mt 1807 2166 L
1807  127 mt 1807  140 L
1918 2179 mt 1918 2166 L
1918  127 mt 1918  140 L
2005 2179 mt 2005 2166 L
2005  127 mt 2005  140 L
2076 2179 mt 2076 2166 L
2076  127 mt 2076  140 L
2136 2179 mt 2136 2166 L
2136  127 mt 2136  140 L
2188 2179 mt 2188 2166 L
2188  127 mt 2188  140 L
2234 2179 mt 2234 2166 L
2234  127 mt 2234  140 L
2275 2179 mt 2275 2166 L
2275  127 mt 2275  140 L
2275 2179 mt 2275 2152 L
2275  127 mt 2275  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

2169 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

2329 2303 mt 
(6) s
2544 2179 mt 2544 2166 L
2544  127 mt 2544  140 L
2702 2179 mt 2702 2166 L
2702  127 mt 2702  140 L
2814 2179 mt 2814 2166 L
2814  127 mt 2814  140 L
2900 2179 mt 2900 2166 L
2900  127 mt 2900  140 L
2971 2179 mt 2971 2166 L
2971  127 mt 2971  140 L
3031 2179 mt 3031 2166 L
3031  127 mt 3031  140 L
3083 2179 mt 3083 2166 L
3083  127 mt 3083  140 L
3129 2179 mt 3129 2166 L
3129  127 mt 3129  140 L
3170 2179 mt 3170 2166 L
3170  127 mt 3170  140 L
3170 2179 mt 3170 2152 L
3170  127 mt 3170  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

3064 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

3224 2303 mt 
(7) s
 484 2179 mt  511 2179 L
3170 2179 mt 3143 2179 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 289 2232 mt 
(10) s
 484 1886 mt  511 1886 L
3170 1886 mt 3143 1886 L
 289 1939 mt 
(20) s
 484 1593 mt  511 1593 L
3170 1593 mt 3143 1593 L
 289 1646 mt 
(30) s
 484 1300 mt  511 1300 L
3170 1300 mt 3143 1300 L
 289 1353 mt 
(40) s
 484 1006 mt  511 1006 L
3170 1006 mt 3143 1006 L
 289 1059 mt 
(50) s
 484  713 mt  511  713 L
3170  713 mt 3143  713 L
 289  766 mt 
(60) s
 484  420 mt  511  420 L
3170  420 mt 3143  420 L
 289  473 mt 
(70) s
 484  127 mt  511  127 L
3170  127 mt 3143  127 L
 289  180 mt 
(80) s
 484 2179 mt 3170 2179 L
 484  127 mt 3170  127 L
 484 2179 mt  484  127 L
3170 2179 mt 3170  127 L
gs 484 127 2687 2053 MR c np
DD
12 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
468 -146 427 -173 468 -310 428 -192 468 -67 427 -65 484 1949 7 MP stroke
gr

12 w
c8
DD
gs 411 923 2833 1100 MR c np
SO
0 j
-41 71 -41 -71 82 0 443 1973 4 MP
DP
-41 71 -41 -71 82 0 870 1908 4 MP
DP
-41 71 -41 -71 82 0 1338 1841 4 MP
DP
-41 71 -41 -71 82 0 1766 1649 4 MP
DP
-41 71 -41 -71 82 0 2234 1339 4 MP
DP
-41 71 -41 -71 82 0 2661 1166 4 MP
DP
-41 71 -41 -71 82 0 3129 1020 4 MP
DP
DD
gr

gs 484 127 2687 2053 MR c np
SO
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
468 -181 427 -169 468 -316 428 -190 468 -69 427 -68 484 1953 7 MP stroke
gr

c9
SO
gs 411 887 2833 1140 MR c np
 448 1953 mt  520 1953 L
 484 1917 mt  484 1989 L
 875 1885 mt  947 1885 L
 911 1849 mt  911 1921 L
1343 1816 mt 1415 1816 L
1379 1780 mt 1379 1852 L
1771 1626 mt 1843 1626 L
1807 1590 mt 1807 1662 L
2239 1310 mt 2311 1310 L
2275 1274 mt 2275 1346 L
2666 1141 mt 2738 1141 L
2702 1105 mt 2702 1177 L
3134  960 mt 3206  960 L
3170  924 mt 3170  996 L
gr

gs 484 127 2687 2053 MR c np
DD
468 -172 427 -177 468 -308 428 -189 468 -66 427 -69 484 1953 7 MP stroke
gr

DD
gs 411 899 2833 1128 MR c np
SO
 459 1928 mt  509 1978 L
 509 1928 mt  459 1978 L
 886 1859 mt  936 1909 L
 936 1859 mt  886 1909 L
1354 1793 mt 1404 1843 L
1404 1793 mt 1354 1843 L
1782 1604 mt 1832 1654 L
1832 1604 mt 1782 1654 L
2250 1296 mt 2300 1346 L
2300 1296 mt 2250 1346 L
2677 1119 mt 2727 1169 L
2727 1119 mt 2677 1169 L
3145  947 mt 3195  997 L
3195  947 mt 3145  997 L
DD
gr

gs 484 127 2687 2053 MR c np
gr

0 sg
1184 2553 mt 
(entries in leaf nodes) s
 234 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
SO
6 w
 954  345 mt 
(p8B+tree ) s
 954  511 mt 
(p8eB+tree) s
 954  677 mt 
(p8iB+tree) s
gs 551 198 1153 525 MR c np
DD
12 w
c8
241 0 632 296 2 MP stroke
SO
gs 679 223 147 147 MR c np
0 j
-41 71 -41 -71 82 0 711 320 4 MP
DP
gr

c9
241 0 632 462 2 MP stroke
gs 679 389 147 147 MR c np
 716  462 mt  788  462 L
 752  426 mt  752  498 L
gr

DD
241 0 632 629 2 MP stroke
SO
gs 679 556 147 147 MR c np
 727  604 mt  777  654 L
 777  604 mt  727  654 L
gr

gr

12 w
c9
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 536 w @beginspecial 161 @llx 288 @lly 435
@urx 504 @ury 1044 @rhi @setspecial
%%BeginDocument: graphs/exp1-3compare-cold.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0    -3  3291  2590 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2166 L
 450  127 mt  450  140 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 344 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 504 2303 mt 
(4) s
 719 2179 mt  719 2166 L
 719  127 mt  719  140 L
 877 2179 mt  877 2166 L
 877  127 mt  877  140 L
 989 2179 mt  989 2166 L
 989  127 mt  989  140 L
1076 2179 mt 1076 2166 L
1076  127 mt 1076  140 L
1146 2179 mt 1146 2166 L
1146  127 mt 1146  140 L
1206 2179 mt 1206 2166 L
1206  127 mt 1206  140 L
1258 2179 mt 1258 2166 L
1258  127 mt 1258  140 L
1304 2179 mt 1304 2166 L
1304  127 mt 1304  140 L
1345 2179 mt 1345 2166 L
1345  127 mt 1345  140 L
1345 2179 mt 1345 2152 L
1345  127 mt 1345  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

1239 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

1399 2303 mt 
(5) s
1614 2179 mt 1614 2166 L
1614  127 mt 1614  140 L
1772 2179 mt 1772 2166 L
1772  127 mt 1772  140 L
1884 2179 mt 1884 2166 L
1884  127 mt 1884  140 L
1971 2179 mt 1971 2166 L
1971  127 mt 1971  140 L
2041 2179 mt 2041 2166 L
2041  127 mt 2041  140 L
2101 2179 mt 2101 2166 L
2101  127 mt 2101  140 L
2153 2179 mt 2153 2166 L
2153  127 mt 2153  140 L
2199 2179 mt 2199 2166 L
2199  127 mt 2199  140 L
2240 2179 mt 2240 2166 L
2240  127 mt 2240  140 L
2240 2179 mt 2240 2152 L
2240  127 mt 2240  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

2134 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

2294 2303 mt 
(6) s
2509 2179 mt 2509 2166 L
2509  127 mt 2509  140 L
2667 2179 mt 2667 2166 L
2667  127 mt 2667  140 L
2779 2179 mt 2779 2166 L
2779  127 mt 2779  140 L
2866 2179 mt 2866 2166 L
2866  127 mt 2866  140 L
2936 2179 mt 2936 2166 L
2936  127 mt 2936  140 L
2996 2179 mt 2996 2166 L
2996  127 mt 2996  140 L
3048 2179 mt 3048 2166 L
3048  127 mt 3048  140 L
3094 2179 mt 3094 2166 L
3094  127 mt 3094  140 L
3135 2179 mt 3135 2166 L
3135  127 mt 3135  140 L
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

3029 2392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

3189 2303 mt 
(7) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 255 2232 mt 
(60) s
 450 1974 mt  477 1974 L
3135 1974 mt 3108 1974 L
 255 2027 mt 
(80) s
 450 1769 mt  477 1769 L
3135 1769 mt 3108 1769 L
 175 1822 mt 
(100) s
 450 1563 mt  477 1563 L
3135 1563 mt 3108 1563 L
 175 1616 mt 
(120) s
 450 1358 mt  477 1358 L
3135 1358 mt 3108 1358 L
 175 1411 mt 
(140) s
 450 1153 mt  477 1153 L
3135 1153 mt 3108 1153 L
 175 1206 mt 
(160) s
 450  948 mt  477  948 L
3135  948 mt 3108  948 L
 175 1001 mt 
(180) s
 450  743 mt  477  743 L
3135  743 mt 3108  743 L
 175  796 mt 
(200) s
 450  537 mt  477  537 L
3135  537 mt 3108  537 L
 175  590 mt 
(220) s
 450  332 mt  477  332 L
3135  332 mt 3108  332 L
 175  385 mt 
(240) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 175  180 mt 
(260) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
DD
12 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
468 -4 427 -11 468 -4 427 -211 468 -17 427 -6 450 1952 7 MP stroke
gr

12 w
c8
DD
gs 377 1626 2832 400 MR c np
SO
0 j
-41 71 -41 -71 82 0 409 1976 4 MP
DP
-41 71 -41 -71 82 0 836 1970 4 MP
DP
-41 71 -41 -71 82 0 1304 1953 4 MP
DP
-41 71 -41 -71 82 0 1731 1742 4 MP
DP
-41 71 -41 -71 82 0 2199 1738 4 MP
DP
-41 71 -41 -71 82 0 2626 1727 4 MP
DP
-41 71 -41 -71 82 0 3094 1723 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
468 -22 427 -10 468 -5 427 -208 468 -17 427 -6 450 1953 7 MP stroke
gr

c9
SO
gs 377 1612 2832 415 MR c np
 414 1953 mt  486 1953 L
 450 1917 mt  450 1989 L
 841 1947 mt  913 1947 L
 877 1911 mt  877 1983 L
1309 1930 mt 1381 1930 L
1345 1894 mt 1345 1966 L
1736 1722 mt 1808 1722 L
1772 1686 mt 1772 1758 L
2204 1717 mt 2276 1717 L
2240 1681 mt 2240 1753 L
2631 1707 mt 2703 1707 L
2667 1671 mt 2667 1743 L
3099 1685 mt 3171 1685 L
3135 1649 mt 3135 1721 L
gr

gs 450 127 2686 2053 MR c np
DD
468 -166 427 -11 468 -5 427 -204 468 -17 427 -6 450 1956 7 MP stroke
gr

DD
gs 377 1474 2832 556 MR c np
SO
 425 1931 mt  475 1981 L
 475 1931 mt  425 1981 L
 852 1925 mt  902 1975 L
 902 1925 mt  852 1975 L
1320 1908 mt 1370 1958 L
1370 1908 mt 1320 1958 L
1747 1704 mt 1797 1754 L
1797 1704 mt 1747 1754 L
2215 1699 mt 2265 1749 L
2265 1699 mt 2215 1749 L
2642 1688 mt 2692 1738 L
2692 1688 mt 2642 1738 L
3110 1522 mt 3160 1572 L
3160 1522 mt 3110 1572 L
DD
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
1150 2553 mt 
(entries in leaf nodes) s
 120 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
SO
6 w
 931  345 mt 
(p8B+tree ) s
 931  511 mt 
(p8eB+tree) s
 931  677 mt 
(p8iB+tree) s
gs 528 198 1153 525 MR c np
DD
12 w
c8
241 0 609 296 2 MP stroke
SO
gs 656 223 147 147 MR c np
0 j
-41 71 -41 -71 82 0 688 320 4 MP
DP
gr

c9
241 0 609 462 2 MP stroke
gs 656 389 147 147 MR c np
 693  462 mt  765  462 L
 729  426 mt  729  498 L
gr

DD
241 0 609 629 2 MP stroke
SO
gs 656 556 147 147 MR c np
 704  604 mt  754  654 L
 754  604 mt  704  654 L
gr

gr

12 w
c9
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1117 432 a(\(a\))g(w)o(arm)g(cac)o(he)316
b(\(b\))13 b(cold)h(cac)o(he)p 1020 476 V 1020 511 a
Fq(Figure)19 b(9:)29 b(100K)19 b(searc)o(hes)h(after)g(bulkloading)d
(10K)i(to)1020 552 y(10M)e(k)o(eys)g(in)o(to)e(p)1338
536 y Ft(8)1355 552 y Fq(B)1386 536 y Ft(+)1412 552 y
Fq(-T)l(rees)j(with)d(and)h(without)f(jump-)1020 593
y(p)q(oin)o(ter)f(arra)o(ys.)p 1020 647 V 988 1097 a
@beginspecial 161 @llx 287 @lly 438 @urx 506 @ury 1008
@rhi @setspecial
%%BeginDocument: graphs/exp3.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0   -35  3326  2630 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2686 0 0 -2052 484 2190 4 MP
PP
-2686 0 0 2052 2686 0 0 -2052 484 2190 5 MP stroke
4 w
DO
SO
6 w
0 sg
 484 2190 mt 3170 2190 L
 484  138 mt 3170  138 L
 484 2190 mt  484  138 L
3170 2190 mt 3170  138 L
 484 2190 mt 3170 2190 L
 484 2190 mt  484  138 L
 484 2190 mt  484 2177 L
 484  138 mt  484  151 L
1021 2190 mt 1021 2163 L
1021  138 mt 1021  165 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 915 2403 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

1075 2314 mt 
(2) s
1558 2190 mt 1558 2177 L
1558  138 mt 1558  151 L
2096 2190 mt 2096 2177 L
2096  138 mt 2096  151 L
2633 2190 mt 2633 2177 L
2633  138 mt 2633  151 L
3170 2190 mt 3170 2177 L
3170  138 mt 3170  151 L
2096 2190 mt 2096 2163 L
2096  138 mt 2096  165 L
/Helvetica /ISOLatin1Encoding 144 FMSR

1990 2403 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

2150 2314 mt 
(4) s
2633 2190 mt 2633 2177 L
2633  138 mt 2633  151 L
3170 2190 mt 3170 2177 L
3170  138 mt 3170  151 L
3170 2190 mt 3170 2163 L
3170  138 mt 3170  165 L
/Helvetica /ISOLatin1Encoding 144 FMSR

3064 2403 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

3224 2314 mt 
(6) s
 484 2190 mt  511 2190 L
3170 2190 mt 3143 2190 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 183 2243 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 343 2154 mt 
(4) s
 484 1848 mt  497 1848 L
3170 1848 mt 3157 1848 L
 484 1506 mt  497 1506 L
3170 1506 mt 3157 1506 L
 484 1164 mt  497 1164 L
3170 1164 mt 3157 1164 L
 484  822 mt  497  822 L
3170  822 mt 3157  822 L
 484  480 mt  497  480 L
3170  480 mt 3157  480 L
 484  138 mt  497  138 L
3170  138 mt 3157  138 L
 484 1506 mt  511 1506 L
3170 1506 mt 3143 1506 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 183 1559 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 343 1470 mt 
(6) s
 484 1164 mt  497 1164 L
3170 1164 mt 3157 1164 L
 484  822 mt  497  822 L
3170  822 mt 3157  822 L
 484  480 mt  497  480 L
3170  480 mt 3157  480 L
 484  138 mt  497  138 L
3170  138 mt 3157  138 L
 484  822 mt  511  822 L
3170  822 mt 3143  822 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 183  875 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 343  786 mt 
(8) s
 484  480 mt  497  480 L
3170  480 mt 3157  480 L
 484  138 mt  497  138 L
3170  138 mt 3157  138 L
 484  138 mt  511  138 L
3170  138 mt 3143  138 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 183  191 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 343  102 mt 
(10) s
 484 2190 mt 3170 2190 L
 484  138 mt 3170  138 L
 484 2190 mt  484  138 L
3170 2190 mt 3170  138 L
gs 484 138 2687 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
537 -343 537 -341 538 -342 537 -335 537 -327 484 2022 6 MP stroke
gr

12 w
c8
gs 411 261 2833 1835 MR c np
0 j
41 71 -82 0 41 -71 484 2069 4 MP
DP
41 71 -82 0 41 -71 1021 1742 4 MP
DP
41 71 -82 0 41 -71 1558 1407 4 MP
DP
41 71 -82 0 41 -71 2096 1065 4 MP
DP
41 71 -82 0 41 -71 2633 724 4 MP
DP
41 71 -82 0 41 -71 3170 381 4 MP
DP
gr

gs 484 138 2687 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
537 -342 537 -341 538 -336 537 -283 537 -229 484 2060 6 MP stroke
gr

c9
DD
gs 411 456 2833 1678 MR c np
SO
0 j
-41 71 -41 -71 82 0 443 2084 4 MP
DP
-41 71 -41 -71 82 0 980 1855 4 MP
DP
-41 71 -41 -71 82 0 1517 1572 4 MP
DP
-41 71 -41 -71 82 0 2055 1236 4 MP
DP
-41 71 -41 -71 82 0 2592 895 4 MP
DP
-41 71 -41 -71 82 0 3129 553 4 MP
DP
DD
gr

gs 484 138 2687 2053 MR c np
SO
c8
537 -341 537 -339 538 -310 537 -170 537 -108 484 1917 6 MP stroke
gr

c8
SO
gs 411 576 2833 1415 MR c np
 448 1917 mt  520 1917 L
 484 1881 mt  484 1953 L
 985 1809 mt 1057 1809 L
1021 1773 mt 1021 1845 L
1522 1639 mt 1594 1639 L
1558 1603 mt 1558 1675 L
2060 1329 mt 2132 1329 L
2096 1293 mt 2096 1365 L
2597  990 mt 2669  990 L
2633  954 mt 2633 1026 L
3134  649 mt 3206  649 L
3170  613 mt 3170  685 L
gr

gs 484 138 2687 2053 MR c np
DD
537 -341 537 -339 538 -311 537 -176 537 -134 484 1957 6 MP stroke
gr

DD
gs 411 583 2833 1448 MR c np
SO
 459 1932 mt  509 1982 L
 509 1932 mt  459 1982 L
 996 1798 mt 1046 1848 L
1046 1798 mt  996 1848 L
1533 1622 mt 1583 1672 L
1583 1622 mt 1533 1672 L
2071 1311 mt 2121 1361 L
2121 1311 mt 2071 1361 L
2608  972 mt 2658 1022 L
2658  972 mt 2608 1022 L
3145  631 mt 3195  681 L
3195  631 mt 3145  681 L
DD
gr

gs 484 138 2687 2053 MR c np
gr

0 sg
/Helvetica /ISOLatin1Encoding 144 FMSR

 586 2564 mt 
(entries scanned through in a single call) s
 128 1582 mt  -90 rotate
(time \(Cycles\)) s
90 rotate
SO
6 w
 931  334 mt 
(B+tree   ) s
 931  500 mt 
(p8B+tree ) s
 931  666 mt 
(p8eB+tree) s
 931  832 mt 
(p8iB+tree) s
gs 528 187 1153 691 MR c np
12 w
c8
241 0 609 285 2 MP stroke
gs 656 212 147 147 MR c np
0 j
41 71 -82 0 41 -71 729 332 4 MP
DP
gr

DD
c9
241 0 609 451 2 MP stroke
SO
gs 656 378 147 147 MR c np
0 j
-41 71 -41 -71 82 0 688 475 4 MP
DP
gr

c8
241 0 609 618 2 MP stroke
gs 656 545 147 147 MR c np
 693  618 mt  765  618 L
 729  582 mt  729  654 L
gr

DD
241 0 609 784 2 MP stroke
SO
gs 656 711 147 147 MR c np
 704  759 mt  754  809 L
 754  759 mt  704  809 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 517 w @beginspecial 161 @llx 292 @lly 436
@urx 504 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/exp4.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    8    -3  3296  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 370 2348 mt 
(50) s
 987 2179 mt  987 2152 L
 987  127 mt  987  154 L
 907 2348 mt 
(60) s
1524 2179 mt 1524 2152 L
1524  127 mt 1524  154 L
1444 2348 mt 
(70) s
2061 2179 mt 2061 2152 L
2061  127 mt 2061  154 L
1981 2348 mt 
(80) s
2598 2179 mt 2598 2152 L
2598  127 mt 2598  154 L
2518 2348 mt 
(90) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3015 2348 mt 
(100) s
 450 2179 mt  463 2179 L
3135 2179 mt 3122 2179 L
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 202 2232 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 362 2143 mt 
(5) s
 450 1930 mt  463 1930 L
3135 1930 mt 3122 1930 L
 450 1784 mt  463 1784 L
3135 1784 mt 3122 1784 L
 450 1680 mt  463 1680 L
3135 1680 mt 3122 1680 L
 450 1600 mt  463 1600 L
3135 1600 mt 3122 1600 L
 450 1534 mt  463 1534 L
3135 1534 mt 3122 1534 L
 450 1479 mt  463 1479 L
3135 1479 mt 3122 1479 L
 450 1431 mt  463 1431 L
3135 1431 mt 3122 1431 L
 450 1389 mt  463 1389 L
3135 1389 mt 3122 1389 L
 450 1351 mt  463 1351 L
3135 1351 mt 3122 1351 L
 450 1351 mt  477 1351 L
3135 1351 mt 3108 1351 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 202 1404 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 362 1315 mt 
(6) s
 450 1101 mt  463 1101 L
3135 1101 mt 3122 1101 L
 450  955 mt  463  955 L
3135  955 mt 3122  955 L
 450  852 mt  463  852 L
3135  852 mt 3122  852 L
 450  772 mt  463  772 L
3135  772 mt 3122  772 L
 450  706 mt  463  706 L
3135  706 mt 3122  706 L
 450  651 mt  463  651 L
3135  651 mt 3122  651 L
 450  603 mt  463  603 L
3135  603 mt 3122  603 L
 450  560 mt  463  560 L
3135  560 mt 3122  560 L
 450  522 mt  463  522 L
3135  522 mt 3122  522 L
 450  522 mt  477  522 L
3135  522 mt 3108  522 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 202  575 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 362  486 mt 
(7) s
 450  273 mt  463  273 L
3135  273 mt 3122  273 L
 450  127 mt  463  127 L
3135  127 mt 3122  127 L
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
767 50 767 57 768 79 0 0 833 811 5 MP stroke
gr

12 w
c8
gs 760 738 2449 333 MR c np
0 j
41 71 -82 0 41 -71 833 858 4 MP
DP
41 71 -82 0 41 -71 833 858 4 MP
DP
41 71 -82 0 41 -71 1601 937 4 MP
DP
41 71 -82 0 41 -71 2368 994 4 MP
DP
41 71 -82 0 41 -71 3135 1044 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
597 -21 511 13 512 14 596 28 919 1418 5 MP stroke
gr

c9
DD
gs 846 1345 2363 202 MR c np
SO
0 j
-41 71 -41 -71 82 0 878 1442 4 MP
DP
-41 71 -41 -71 82 0 1474 1470 4 MP
DP
-41 71 -41 -71 82 0 1986 1484 4 MP
DP
-41 71 -41 -71 82 0 2497 1497 4 MP
DP
-41 71 -41 -71 82 0 3094 1476 4 MP
DP
DD
gr

gs 450 127 2686 2053 MR c np
SO
c8
606 2 520 14 520 2 519 16 970 1639 5 MP stroke
gr

c8
SO
gs 897 1566 2312 181 MR c np
 934 1639 mt 1006 1639 L
 970 1603 mt  970 1675 L
1453 1655 mt 1525 1655 L
1489 1619 mt 1489 1691 L
1973 1657 mt 2045 1657 L
2009 1621 mt 2009 1693 L
2493 1671 mt 2565 1671 L
2529 1635 mt 2529 1707 L
3099 1673 mt 3171 1673 L
3135 1637 mt 3135 1709 L
gr

gs 450 127 2686 2053 MR c np
DD
597 -1 511 18 512 -1 596 12 919 1664 5 MP stroke
gr

DD
gs 846 1591 2363 176 MR c np
SO
 894 1639 mt  944 1689 L
 944 1639 mt  894 1689 L
1490 1651 mt 1540 1701 L
1540 1651 mt 1490 1701 L
2002 1650 mt 2052 1700 L
2052 1650 mt 2002 1700 L
2513 1668 mt 2563 1718 L
2563 1668 mt 2513 1718 L
3110 1667 mt 3160 1717 L
3160 1667 mt 3110 1717 L
DD
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
/Helvetica /ISOLatin1Encoding 144 FMSR

 514 2509 mt 
(percentage of entries used in leaf nodes) s
 147 1571 mt  -90 rotate
(time \(Cycles\)) s
90 rotate
SO
6 w
2326  334 mt 
(B+tree   ) s
2326  500 mt 
(p8B+tree ) s
2326  666 mt 
(p8eB+tree) s
2326  832 mt 
(p8iB+tree) s
gs 1923 187 1153 691 MR c np
12 w
c8
241 0 2004 285 2 MP stroke
gs 2051 212 147 147 MR c np
0 j
41 71 -82 0 41 -71 2124 332 4 MP
DP
gr

DD
c9
241 0 2004 451 2 MP stroke
SO
gs 2051 378 147 147 MR c np
0 j
-41 71 -41 -71 82 0 2083 475 4 MP
DP
gr

c8
241 0 2004 618 2 MP stroke
gs 2051 545 147 147 MR c np
2088  618 mt 2160  618 L
2124  582 mt 2124  654 L
gr

DD
241 0 2004 784 2 MP stroke
SO
gs 2051 711 147 147 MR c np
2099  759 mt 2149  809 L
2149  759 mt 2099  809 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 986 1139 a Fv(\(a\))f(v)n(arying)i(n)o(um)o(b)q(er)e(of)g
Fo(tupleID)p Fv(s)28 b(\(b\))13 b(v)n(arying)h(bulkload)i(factor)1054
1180 y(scanned)e(for)f(eac)o(h)h(request)p 1020 1224
V 1166 1259 a Fq(Figure)g(10:)21 b(Range)15 b(scan)g(p)q(erformance.)
1020 1381 y Fv(p)1041 1365 y Ft(8)1041 1388 y Ff(e)1059
1381 y Fv(B)1086 1365 y Ft(+)1111 1381 y Fv(-T)m(ree,)j(and)h(the)f
(maxim)o(um)h(n)o(um)o(b)q(er)f(of)g(k)o(eys)g(in)h(b)q(ottom)1020
1422 y(non-leaf)14 b(no)q(des)g(is)f(one)g(few)o(er)f(for)h(the)g(p)
1628 1407 y Ft(8)1628 1429 y Ff(i)1645 1422 y Fv(B)1672
1407 y Ft(+)1698 1422 y Fv(-T)m(ree.)j(Figures)e(9\(a\))1020
1464 y(and)c(9\(b\))g(sho)o(w)f(that)h(these)g(di\013erences)h(ha)o(v)o
(e)f(a)g(negligibl)q(e)i(impact)1020 1505 y(on)j(searc)o(h)h(p)q
(erformance.)24 b(In)15 b(one)g(cold)h(cac)o(he)g(case,)f(when)h(10M)
1020 1547 y(k)o(eys)e(are)f(in)h(the)f(tree,)g(the)g(p)1455
1531 y Ft(8)1455 1553 y Ff(e)1473 1547 y Fv(B)1500 1531
y Ft(+)1525 1547 y Fv(-T)m(ree)g(su\013ers)h(from)f(ha)o(ving)i(one)
1020 1588 y(more)e(lev)o(el)h(than)f(the)g(other)g(t)o(w)o(o)f(trees,)g
(but)h(otherwise)h(b)q(oth)f(the)1020 1629 y(w)o(arm)j(and)h(cold)g
(cac)o(he)g(p)q(erformances)g(are)f(basically)k(the)c(same)1020
1671 y(for)11 b(all)i(three)f(trees,)f(o)o(v)o(er)h(the)g(en)o(tire)g
(range)g(of)f(10K)h(to)f(10M)h(k)o(eys.)1020 1745 y Fw(4.3)50
b(Range)12 b(Scan)g(P)o(erf)o(ormance)1057 1795 y Fv(In)i(our)g(next)g
(set)g(of)f(exp)q(erimen)o(ts,)i(w)o(e)e(ev)n(aluate)i(the)f
(e\013ectiv)o(e-)1020 1836 y(ness)9 b(of)g(our)g(tec)o(hniques)i(for)d
(impro)o(ving)k(range)d(scan)h(p)q(erformance.)1020 1878
y(W)m(e)h(compare)g(B)1262 1862 y Ft(+)1288 1878 y Fv(-T)m(rees,)f(p)
1432 1862 y Ft(8)1450 1878 y Fv(B)1477 1862 y Ft(+)1502
1878 y Fv(-T)m(rees,)h(p)1647 1862 y Ft(8)1647 1884 y
Ff(e)1664 1878 y Fv(B)1691 1862 y Ft(+)1717 1878 y Fv(-T)m(rees,)f(and)
h(p)1933 1862 y Ft(8)1933 1885 y Ff(i)1951 1878 y Fv(B)1978
1862 y Ft(+)2004 1878 y Fv(-)1020 1919 y(T)m(rees.)16
b(As)11 b(indicated)j(ab)q(o)o(v)o(e,)e(w)o(e)f(restrict)h(our)g(atten)
o(tion)h(to)e(no)q(de)1020 1960 y(width)19 b Fd(w)f Fv(=)h(8)e(b)q
(ecause)i(this)g(is)f(the)g(b)q(est)g(width)g(for)g(searc)o(hes,)1020
2002 y(whic)o(h)h(are)f(presumed)h(to)f(o)q(ccur)g(more)h(frequen)o
(tly)g(than)f(range)1020 2043 y(scans.)27 b(As)16 b(discussed)j(in)e
(Section)h(4.1,)e(w)o(e)g(set)g(the)h(prefetc)o(hing)1020
2085 y(distance)e(to)e(3)g(no)q(des)g(and)h(the)f(c)o(h)o(unk)h(size)g
(to)f(8)g(cac)o(he)g(lines.)1057 2151 y Fq(V)l(arying)22
b(the)f(range)h(size)e(and)h(the)g(bulkload)e(factor.)1020
2192 y Fv(Figure)h(10)f(sho)o(ws)g(the)g(execution)h(time)g(of)e(range)
h(scans)h(while)1020 2233 y(v)n(arying)13 b(\(a\))f(the)f(n)o(um)o(b)q
(er)i(of)e Fo(tupleID)p Fv(s)e(to)i(scan)h(p)q(er)g(request)g(\(i.e.)
1020 2275 y(the)j(size)h(of)f(the)g(range\),)g(or)g(\(b\))g(the)h
(bulkload)h(factor.)23 b(Because)1020 2316 y(of)12 b(the)g(large)h(p)q
(erformance)f(gains)i(for)d(pB)1642 2300 y Ft(+)1668
2316 y Fv(-T)m(rees,)g(the)h(execution)1020 2358 y(time)k(is)f(sho)o
(wn)h(on)f(a)g(logarithmic)j(scale.)24 b(In)15 b(Figure)h(10\(a\),)g
(the)1020 2399 y(trees)j(are)g(bulkloaded)i(with)f(3M)e
Fp(h)p Fo(key)p Fv(,)12 b Fo(tupleID)p Fp(i)e Fv(pairs)q(,)20
b(using)1020 2440 y(a)e(100\045)h(bulkload)i(factor.)32
b(Then)18 b(100)h(random)g(starting)g Fo(key)p Fv(s)1020
2482 y(are)14 b(selected,)i(and)f(a)f(range)h(scan)g(is)g(requested)g
(for)f Fd(m)g Fo(tupleID)p Fv(s)1020 2523 y(starting)k(at)g(that)f
(starting)h(k)o(ey)g(v)n(alue,)h(for)e Fd(m)g Fv(=)g(10,)h(100,)h(1K,)
1020 2565 y(10K,)e(100K,)g(and)h(1M.)f(The)g(execution)i(time)f
(plotted)h(for)e(eac)o(h)1020 2606 y Fd(m)f Fv(is)h(the)f(total)i(for)e
(the)g(100)h(starting)g Fo(key)p Fv(s.)26 b(In)17 b(Figure)g(10\(b\),)
1020 2647 y(the)11 b(trees)f(are)h(bulkloaded)i(with)e(3M)g
Fp(h)p Fo(key)p Fv(,)g Fo(tupleID)p Fp(i)f Fv(pairs)q(,)h(with)1020
2689 y(bulkload)20 b(factors)d(of)f(60\045,)i(70\045,)f(80\045,)h
(90\045,)g(and)f(100\045.)29 b(100)p eop
%%Page: 10 10
10 9 bop -76 -74 997 2 v 148 346 a @beginspecial 171
@llx 293 @lly 448 @urx 505 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/exp5.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

  128   -15  3326  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2662 0 0 -2052 623 2167 4 MP
PP
-2662 0 0 2052 2662 0 0 -2052 623 2167 5 MP stroke
4 w
DO
SO
6 w
0 sg
 623 2167 mt 3285 2167 L
 623  115 mt 3285  115 L
 623 2167 mt  623  115 L
3285 2167 mt 3285  115 L
 623 2167 mt 3285 2167 L
 623 2167 mt  623  115 L
 623 2167 mt  623 2140 L
 623  115 mt  623  142 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 543 2336 mt 
(50) s
1155 2167 mt 1155 2140 L
1155  115 mt 1155  142 L
1075 2336 mt 
(60) s
1688 2167 mt 1688 2140 L
1688  115 mt 1688  142 L
1608 2336 mt 
(70) s
2220 2167 mt 2220 2140 L
2220  115 mt 2220  142 L
2140 2336 mt 
(80) s
2753 2167 mt 2753 2140 L
2753  115 mt 2753  142 L
2673 2336 mt 
(90) s
3285 2167 mt 3285 2140 L
3285  115 mt 3285  142 L
3165 2336 mt 
(100) s
 623 2167 mt  636 2167 L
3285 2167 mt 3272 2167 L
 623 2167 mt  650 2167 L
3285 2167 mt 3258 2167 L
 322 2220 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 482 2131 mt 
(8) s
 623 1918 mt  636 1918 L
3285 1918 mt 3272 1918 L
 623 1772 mt  636 1772 L
3285 1772 mt 3272 1772 L
 623 1668 mt  636 1668 L
3285 1668 mt 3272 1668 L
 623 1588 mt  636 1588 L
3285 1588 mt 3272 1588 L
 623 1522 mt  636 1522 L
3285 1522 mt 3272 1522 L
 623 1467 mt  636 1467 L
3285 1467 mt 3272 1467 L
 623 1419 mt  636 1419 L
3285 1419 mt 3272 1419 L
 623 1377 mt  636 1377 L
3285 1377 mt 3272 1377 L
 623 1339 mt  636 1339 L
3285 1339 mt 3272 1339 L
 623 1339 mt  650 1339 L
3285 1339 mt 3258 1339 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 322 1392 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 482 1303 mt 
(9) s
 623 1089 mt  636 1089 L
3285 1089 mt 3272 1089 L
 623  943 mt  636  943 L
3285  943 mt 3272  943 L
 623  840 mt  636  840 L
3285  840 mt 3272  840 L
 623  760 mt  636  760 L
3285  760 mt 3272  760 L
 623  694 mt  636  694 L
3285  694 mt 3272  694 L
 623  639 mt  636  639 L
3285  639 mt 3272  639 L
 623  591 mt  636  591 L
3285  591 mt 3272  591 L
 623  548 mt  636  548 L
3285  548 mt 3272  548 L
 623  510 mt  636  510 L
3285  510 mt 3272  510 L
 623  510 mt  650  510 L
3285  510 mt 3258  510 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 322  563 mt 
(10) s
/Helvetica /ISOLatin1Encoding 96 FMSR

 482  474 mt 
(10) s
 623  261 mt  636  261 L
3285  261 mt 3272  261 L
 623  115 mt  636  115 L
3285  115 mt 3272  115 L
 623 2167 mt 3285 2167 L
 623  115 mt 3285  115 L
 623 2167 mt  623  115 L
3285 2167 mt 3285  115 L
gs 623 115 2663 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
761 44 760 67 761 71 0 0 1003 798 5 MP stroke
gr

12 w
c8
gs 930 725 2429 329 MR c np
0 j
41 71 -82 0 41 -71 1003 845 4 MP
DP
41 71 -82 0 41 -71 1003 845 4 MP
DP
41 71 -82 0 41 -71 1764 916 4 MP
DP
41 71 -82 0 41 -71 2524 983 4 MP
DP
41 71 -82 0 41 -71 3285 1027 4 MP
DP
gr

gs 623 115 2663 2053 MR c np
DD
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
591 -22 507 12 508 15 591 27 1088 1386 5 MP stroke
gr

c9
DD
gs 1015 1313 2344 201 MR c np
SO
0 j
-41 71 -41 -71 82 0 1047 1410 4 MP
DP
-41 71 -41 -71 82 0 1638 1437 4 MP
DP
-41 71 -41 -71 82 0 2146 1452 4 MP
DP
-41 71 -41 -71 82 0 2653 1464 4 MP
DP
-41 71 -41 -71 82 0 3244 1442 4 MP
DP
DD
gr

gs 623 115 2663 2053 MR c np
SO
c8
601 9 515 11 516 5 515 17 1138 1589 5 MP stroke
gr

c8
SO
gs 1065 1516 2294 189 MR c np
1102 1589 mt 1174 1589 L
1138 1553 mt 1138 1625 L
1617 1606 mt 1689 1606 L
1653 1570 mt 1653 1642 L
2133 1611 mt 2205 1611 L
2169 1575 mt 2169 1647 L
2648 1622 mt 2720 1622 L
2684 1586 mt 2684 1658 L
3249 1631 mt 3321 1631 L
3285 1595 mt 3285 1667 L
gr

gs 623 115 2663 2053 MR c np
DD
591 2 507 4 508 5 591 13 1088 1623 5 MP stroke
gr

DD
gs 1015 1550 2344 171 MR c np
SO
1063 1598 mt 1113 1648 L
1113 1598 mt 1063 1648 L
1654 1611 mt 1704 1661 L
1704 1611 mt 1654 1661 L
2162 1616 mt 2212 1666 L
2212 1616 mt 2162 1666 L
2669 1620 mt 2719 1670 L
2719 1620 mt 2669 1670 L
3260 1622 mt 3310 1672 L
3310 1622 mt 3260 1672 L
DD
gr

gs 623 115 2663 2053 MR c np
gr

0 sg
/Helvetica /ISOLatin1Encoding 144 FMSR

 675 2497 mt 
(percentage of entries used in leaf nodes) s
 267 1559 mt  -90 rotate
(time \(Cycles\)) s
90 rotate
SO
6 w
2465  322 mt 
(B+tree   ) s
2465  488 mt 
(p8B+tree ) s
2465  654 mt 
(p8eB+tree) s
2465  820 mt 
(p8iB+tree) s
gs 2062 175 1153 691 MR c np
12 w
c8
241 0 2143 273 2 MP stroke
gs 2190 200 147 147 MR c np
0 j
41 71 -82 0 41 -71 2263 320 4 MP
DP
gr

DD
c9
241 0 2143 439 2 MP stroke
SO
gs 2190 366 147 147 MR c np
0 j
-41 71 -41 -71 82 0 2222 463 4 MP
DP
gr

c8
241 0 2143 606 2 MP stroke
gs 2190 533 147 147 MR c np
2227  606 mt 2299  606 L
2263  570 mt 2263  642 L
gr

DD
241 0 2143 772 2 MP stroke
SO
gs 2190 699 147 147 MR c np
2238  747 mt 2288  797 L
2288  747 mt 2238  797 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial -76 377 V -76 414 a Fq(Figure)13 b(11:)20
b(Large)14 b(\(segmen)o(ted\))g(range)g(scans)h(with)d(v)n(ar-)-76
455 y(ious)i(bulkload)f(factors.)-76 547 y Fv(random)h(starting)g
Fo(key)p Fv(s)d(are)i(then)g(selected,)h(and)f(a)g(range)g(scan)h(is)
-76 588 y(requested)e(for)e(1000)h(tuple)h(IDs)e(starting)i(at)e(that)h
(v)n(alue.)17 b(Bet)o(w)o(een)-76 630 y(the)10 b(range)h(scan)g
(requests,)g(the)f(cac)o(hes)g(are)h(cleared)g(to)f(more)g(accu-)-76
671 y(rately)15 b(re\015ect)f(scenarios)h(in)f(whic)o(h)h(range)f(scan)
g(requests)h(are)f(in-)-76 712 y(terlea)o(v)o(ed)e(with)f(other)h
(database)f(op)q(erations)i(or)e(application)j(pro-)-76
754 y(grams)d(\(whic)o(h)g(w)o(ould)g(tend)g(to)f(evict)h(an)o(y)g(cac)
o(he-residen)o(t)h(no)q(des\).)-38 795 y(As)c(w)o(e)g(see)h(in)h
(Figure)g(10,)f(p)361 779 y Ft(8)361 802 y Ff(e)379 795
y Fv(B)406 779 y Ft(+)431 795 y Fv(-T)m(rees)f(and)i(p)633
779 y Ft(8)633 802 y Ff(i)650 795 y Fv(B)677 779 y Ft(+)703
795 y Fv(-T)m(rees)e(ac)o(hiev)o(e)-76 837 y(a)17 b Fu(factor)f(of)h
(6.5)g(to)g(8.7)f(sp)n(e)n(e)n(dup)f Fv(o)o(v)o(er)i(standard)h(B)730
821 y Ft(+)756 837 y Fv(-T)m(rees)e(for)-76 878 y(range)i(scans)g(of)f
(1K)g(to)g(1M)g Fo(tupleID)p Fv(s.)27 b(As)17 b(the)h(bulkload)i(fac-)
-76 919 y(tor)d(decreases,)h(the)f(n)o(um)o(b)q(er)h(of)e(leaf)h(no)q
(des)h(to)f(b)q(e)g(scanned)h(in-)-76 961 y(creases)c(\(since)h(w)o(e)e
(m)o(ust)h(skip)h(an)f(increasing)i(n)o(um)o(b)q(er)e(of)g(empt)o(y)-76
1002 y(slots\),)d(and)f(hence)g(our)f(prefetc)o(hing)i(sc)o(hemes)f(ac)
o(hiev)o(e)g(ev)o(en)g(larger)-76 1044 y(sp)q(eedups.)18
b(Figure)c(10)e(also)h(sho)o(ws)f(the)g(con)o(tribution)j(of)d(b)q(oth)
g(as-)-76 1085 y(p)q(ects)h(of)g(our)g(pB)183 1069 y
Ft(+)209 1085 y Fv(-T)m(ree)f(design)i(to)f(o)o(v)o(erall)h(p)q
(erformance.)k(First,)-76 1126 y(extending)f(the)e(no)q(de)h(size)g
(and)g(sim)o(ultaneously)i(prefetc)o(hing)f(all)-76 1168
y(cac)o(he)10 b(lines)g(within)g(a)f(no)q(de)h(while)g(scanning)h
(\(and)f(p)q(erforming)g(the)-76 1209 y(initial)j(searc)o(h\)|similar)f
(to)e(what)f(w)o(as)g(illustrated)j(earlier)f(in)g(Fig-)-76
1251 y(ure)h(3\(b\)|results)h(in)f(a)f(sp)q(eedup)h(of)f(3.5)g(to)h
(3.7,)f(as)g(sho)o(wn)h(b)o(y)f(the)-76 1292 y(di\013erence)17
b(b)q(et)o(w)o(een)e(p)269 1276 y Ft(8)287 1292 y Fv(B)314
1276 y Ft(+)339 1292 y Fv(-T)m(rees)g(and)g(B)559 1276
y Ft(+)585 1292 y Fv(-T)m(rees)f(in)i(Figure)g(10.)-76
1334 y(Second,)c(b)o(y)g(also)g(using)h(jump-p)q(oin)o(ter)f(arra)o(ys)
g(to)f(prefetc)o(h)g(ahead)-76 1375 y(across)e(the)g(\(extra-wide\))h
(leaf)f(no)q(des,)h(w)o(e)f(see)f(an)h(additional)j(sp)q(eed-)-76
1416 y(up)f(of)f(roughly)i(2)f(in)g(this)g(case,)g(as)g(sho)o(wn)f(b)o
(y)h(the)g(impro)o(v)o(emen)o(t)g(of)-76 1458 y(b)q(oth)17
b(p)39 1442 y Ft(8)39 1464 y Ff(e)56 1458 y Fv(B)83 1442
y Ft(+)109 1458 y Fv(-T)m(rees)e(and)h(p)324 1442 y Ft(8)324
1465 y Ff(i)342 1458 y Fv(B)369 1442 y Ft(+)395 1458
y Fv(-T)m(rees)f(o)o(v)o(er)h(p)618 1442 y Ft(8)635 1458
y Fv(B)662 1442 y Ft(+)688 1458 y Fv(-T)m(rees)f(in)i(Fig-)-76
1499 y(ure)k(10.)39 b(Since)22 b(b)q(oth)f(p)313 1483
y Ft(8)313 1506 y Ff(e)330 1499 y Fv(B)357 1483 y Ft(+)383
1499 y Fv(-T)m(rees)f(and)h(p)608 1483 y Ft(8)608 1506
y Ff(i)625 1499 y Fv(B)652 1483 y Ft(+)678 1499 y Fv(-T)m(rees)f(ac)o
(hiev)o(e)-76 1541 y(nearly)e(iden)o(tical)h(p)q(erformance,)f(there)e
(do)q(es)i(not)e(app)q(ear)i(to)e(b)q(e)-76 1582 y(a)f(comp)q(elling)j
(need)d(to)f(build)j(an)e(external)h(\(rather)f(than)h(an)f(in-)-76
1623 y(ternal\))e(jump-p)q(oin)o(ter)g(arra)o(y)m(,)f(at)g(least)g(for)
g(these)g(system)g(param-)-76 1665 y(eters.)18 b(\(Note)13
b(that)h(this)g(conclusion)i(dep)q(ends)f(up)q(on)f(the)f(ratio)h(of)
-76 1706 y Fd(w)e Fv(and)g Fd(k)q Fv(;)g(in)g(other)g(scenarios)h(with)
f(di\013eren)o(t)h(ratios|e.g.,)g(when)-76 1748 y(prefetc)o(hing)19
b(to)e(hide)i Fu(disk)d Fv(as)h(w)o(ell)h(as)g(memory)g(latencies|the)
-76 1789 y(\015exibili)q(t)o(y)12 b(of)e(an)g(external)h(jump-p)q(oin)o
(ter)g(arra)o(y)f(ma)o(y)g(b)q(e)g(needed.\))-38 1830
y(When)i(scanning)i(far)e(few)o(er)f(than)h(1K)g Fo(tupleID)p
Fv(s,)d(ho)o(w)o(ev)o(er,)j(the)-76 1872 y(startup)h(cost)f(of)g(our)g
(prefetc)o(hing)i(sc)o(hemes)e(b)q(ecomes)h(noticeable.)-76
1913 y(F)m(or)g(example,)i(when)e(scanning)j(only)e(100)g
Fo(tupleID)p Fv(s,)c(pB)793 1897 y Ft(+)819 1913 y Fv(-T)m(rees)-76
1955 y(are)17 b(only)h(t)o(wice)f(as)g(fast)f(as)h(standard)h(B)553
1939 y Ft(+)579 1955 y Fv(-T)m(rees.)27 b(When)18 b(scan-)-76
1996 y(ning)f(only)f(10)f Fo(tupleID)p Fv(s,)e(p)351
1980 y Ft(8)369 1996 y Fv(B)396 1980 y Ft(+)421 1996
y Fv(-T)m(rees)i(are)g(only)i(sligh)o(tly)g(faster)-76
2037 y(than)f(B)43 2022 y Ft(+)69 2037 y Fv(-T)m(rees,)f(and)i(p)296
2022 y Ft(8)296 2044 y Ff(e)313 2037 y Fv(B)340 2022
y Ft(+)366 2037 y Fv(-T)m(rees)e(and)h(p)581 2022 y Ft(8)581
2044 y Ff(i)599 2037 y Fv(B)626 2022 y Ft(+)651 2037
y Fv(-T)m(rees)f(are)h(actu-)-76 2079 y(ally)f(slo)o(w)o(er.)j(This)c
(suggests)g(a)f(sc)o(heme)h(where)f(jump-p)q(oin)o(ter)h(ar-)-76
2120 y(ra)o(ys)f(are)g(only)h(exploited)h(for)d(prefetc)o(hing)i(if)f
(the)f(exp)q(ected)i(n)o(um-)-76 2162 y(b)q(er)g(of)g
Fo(tupleID)p Fv(s)d(within)k(the)f(range)g(is)h(signi\014can)o(t)h
(\(e.g.,)d(100)h(or)-76 2203 y(more\).)23 b(This)16 b(estimate)g(of)f
(the)g(range)h(size)f(could)i(b)q(e)e(computed)-76 2244
y(either)c(b)o(y)g(using)h(standard)f(query)g(optimization)i(tec)o
(hniques)g(suc)o(h)-76 2286 y(as)h(histograms,)h(or)f(else)g(b)o(y)g
(sim)o(ultaneousl)q(y)j(searc)o(hing)e(for)f(b)q(oth)-76
2327 y(the)f(starting)i(and)e(ending)i(k)o(eys)e(to)g(see)g(ho)o(w)g
(far)g(apart)h(they)f(are.)-38 2399 y Fq(Large)i(segmen)o(ted)h(range)f
(scans.)34 b Fv(W)m(e)14 b(no)o(w)f(consider)i(the)-76
2440 y(b)q(eha)o(vior)g(of)d(large)i(range)f(scans.)18
b(In)12 b(practice,)i(these)f(large)h(scans)-76 2482
y(are)h(often)f(brok)o(en)h(up)g(in)o(to)g(smaller)h(segmen)o(ts)f
(either)g(to)f(p)q(ermit)-76 2523 y(other)19 b(op)q(erations)h(and)f
(queries)h(to)f(pro)q(ceed,)h(or)e(else)i(to)e(a)o(v)o(oid)-76
2565 y(o)o(v)o(er\015o)o(wing)13 b(the)f(return)g(bu\013er.)17
b(F)m(or)12 b(example,)h(an)e(indexed)j(scan)-76 2606
y(pro)o(viding)22 b(sorted)d(input)i(to)e(a)g(sort-merge)g(join)h(op)q
(erator)g(will)-76 2647 y(ha)o(v)o(e)h(its)g(return)g(bu\013er)g
(consumed)g(at)f(a)h(rate)f(dep)q(enden)o(t)i(on)-76
2689 y(the)17 b(data)g(pro\014le)i(of)d(the)h(other)g(input)h(to)f(the)
g(join.)29 b(Figure)18 b(11)p 1020 -74 V 986 346 a @beginspecial
161 @llx 292 @lly 436 @urx 504 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/exp7-ins.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

    0    -3  3304  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 370 2348 mt 
(50) s
 987 2179 mt  987 2152 L
 987  127 mt  987  154 L
 907 2348 mt 
(60) s
1524 2179 mt 1524 2152 L
1524  127 mt 1524  154 L
1444 2348 mt 
(70) s
2061 2179 mt 2061 2152 L
2061  127 mt 2061  154 L
1981 2348 mt 
(80) s
2598 2179 mt 2598 2152 L
2598  127 mt 2598  154 L
2518 2348 mt 
(90) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3015 2348 mt 
(100) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 255 2232 mt 
(50) s
 450 1837 mt  477 1837 L
3135 1837 mt 3108 1837 L
 255 1890 mt 
(60) s
 450 1495 mt  477 1495 L
3135 1495 mt 3108 1495 L
 255 1548 mt 
(70) s
 450 1153 mt  477 1153 L
3135 1153 mt 3108 1153 L
 255 1206 mt 
(80) s
 450  811 mt  477  811 L
3135  811 mt 3108  811 L
 255  864 mt 
(90) s
 450  469 mt  477  469 L
3135  469 mt 3108  469 L
 175  522 mt 
(100) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 175  180 mt 
(110) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
767 -1053 767 115 768 291 0 0 833 973 5 MP stroke
gr

12 w
c8
gs 760 253 2449 1200 MR c np
0 j
41 71 -82 0 41 -71 833 1020 4 MP
DP
41 71 -82 0 41 -71 833 1020 4 MP
DP
41 71 -82 0 41 -71 1601 1311 4 MP
DP
41 71 -82 0 41 -71 2368 1426 4 MP
DP
41 71 -82 0 41 -71 3135 373 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
597 -670 511 -23 512 -9 596 43 919 1854 5 MP stroke
gr

gs 846 1122 2363 849 MR c np
0 j
-41 71 -41 -71 82 0 878 1878 4 MP
DP
-41 71 -41 -71 82 0 1474 1921 4 MP
DP
-41 71 -41 -71 82 0 1986 1912 4 MP
DP
-41 71 -41 -71 82 0 2497 1889 4 MP
DP
-41 71 -41 -71 82 0 3094 1219 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
606 -823 520 -7 520 -14 519 37 970 1857 5 MP stroke
gr

gs 897 977 2312 991 MR c np
 934 1857 mt 1006 1857 L
 970 1821 mt  970 1893 L
1453 1894 mt 1525 1894 L
1489 1858 mt 1489 1930 L
1973 1880 mt 2045 1880 L
2009 1844 mt 2009 1916 L
2493 1873 mt 2565 1873 L
2529 1837 mt 2529 1909 L
3099 1050 mt 3171 1050 L
3135 1014 mt 3135 1086 L
gr

gs 450 127 2686 2053 MR c np
DD
597 -691 511 -17 512 -10 596 42 919 1868 5 MP stroke
gr

DD
gs 846 1119 2363 865 MR c np
SO
 894 1843 mt  944 1893 L
 944 1843 mt  894 1893 L
1490 1885 mt 1540 1935 L
1540 1885 mt 1490 1935 L
2002 1875 mt 2052 1925 L
2052 1875 mt 2002 1925 L
2513 1858 mt 2563 1908 L
2563 1858 mt 2513 1908 L
3110 1167 mt 3160 1217 L
3160 1167 mt 3110 1217 L
DD
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
 514 2509 mt 
(percentage of entries used in leaf nodes) s
 120 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
SO
6 w
1300  334 mt 
(B+tree   ) s
1300  500 mt 
(p8B+tree ) s
1300  666 mt 
(p8eB+tree) s
1300  832 mt 
(p8iB+tree) s
gs 897 187 1153 691 MR c np
12 w
c8
241 0 978 285 2 MP stroke
gs 1025 212 147 147 MR c np
0 j
41 71 -82 0 41 -71 1098 332 4 MP
DP
gr

241 0 978 451 2 MP stroke
gs 1025 378 147 147 MR c np
0 j
-41 71 -41 -71 82 0 1057 475 4 MP
DP
gr

241 0 978 618 2 MP stroke
gs 1025 545 147 147 MR c np
1062  618 mt 1134  618 L
1098  582 mt 1098  654 L
gr

DD
241 0 978 784 2 MP stroke
SO
gs 1025 711 147 147 MR c np
1073  759 mt 1123  809 L
1123  759 mt 1073  809 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 529 w @beginspecial 166 @llx 292 @lly 436
@urx 504 @ury 1008 @rhi @setspecial
%%BeginDocument: graphs/exp7-del.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

   61    -3  3243  2546 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 144 FMSR

 370 2348 mt 
(50) s
 987 2179 mt  987 2152 L
 987  127 mt  987  154 L
 907 2348 mt 
(60) s
1524 2179 mt 1524 2152 L
1524  127 mt 1524  154 L
1444 2348 mt 
(70) s
2061 2179 mt 2061 2152 L
2061  127 mt 2061  154 L
1981 2348 mt 
(80) s
2598 2179 mt 2598 2152 L
2598  127 mt 2598  154 L
2518 2348 mt 
(90) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3015 2348 mt 
(100) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 255 2232 mt 
(50) s
 450 1666 mt  477 1666 L
3135 1666 mt 3108 1666 L
 255 1719 mt 
(60) s
 450 1153 mt  477 1153 L
3135 1153 mt 3108 1153 L
 255 1206 mt 
(70) s
 450  640 mt  477  640 L
3135  640 mt 3108  640 L
 255  693 mt 
(80) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 255  180 mt 
(90) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
767 223 767 243 768 469 0 0 833 436 5 MP stroke
gr

12 w
c8
gs 760 363 2449 1082 MR c np
0 j
41 71 -82 0 41 -71 833 483 4 MP
DP
41 71 -82 0 41 -71 833 483 4 MP
DP
41 71 -82 0 41 -71 1601 952 4 MP
DP
41 71 -82 0 41 -71 2368 1195 4 MP
DP
41 71 -82 0 41 -71 3135 1418 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
597 -1 511 23 512 6 596 108 919 1919 5 MP stroke
gr

gs 846 1846 2363 284 MR c np
0 j
-41 71 -41 -71 82 0 878 1943 4 MP
DP
-41 71 -41 -71 82 0 1474 2051 4 MP
DP
-41 71 -41 -71 82 0 1986 2057 4 MP
DP
-41 71 -41 -71 82 0 2497 2080 4 MP
DP
-41 71 -41 -71 82 0 3094 2079 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
606 -10 520 25 520 12 519 114 970 1884 5 MP stroke
gr

gs 897 1811 2312 298 MR c np
 934 1884 mt 1006 1884 L
 970 1848 mt  970 1920 L
1453 1998 mt 1525 1998 L
1489 1962 mt 1489 2034 L
1973 2010 mt 2045 2010 L
2009 1974 mt 2009 2046 L
2493 2035 mt 2565 2035 L
2529 1999 mt 2529 2071 L
3099 2025 mt 3171 2025 L
3135 1989 mt 3135 2061 L
gr

gs 450 127 2686 2053 MR c np
DD
597 11 511 11 512 13 596 89 919 1908 5 MP stroke
gr

DD
gs 846 1835 2363 271 MR c np
SO
 894 1883 mt  944 1933 L
 944 1883 mt  894 1933 L
1490 1972 mt 1540 2022 L
1540 1972 mt 1490 2022 L
2002 1985 mt 2052 2035 L
2052 1985 mt 2002 2035 L
2513 1996 mt 2563 2046 L
2563 1996 mt 2513 2046 L
3110 2007 mt 3160 2057 L
3160 2007 mt 3110 2057 L
DD
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
 514 2509 mt 
(percentage of entries used in leaf nodes) s
 200 1635 mt  -90 rotate
(time \(M cycles\)) s
90 rotate
SO
6 w
2326  334 mt 
(B+tree   ) s
2326  500 mt 
(p8B+tree ) s
2326  666 mt 
(p8eB+tree) s
2326  832 mt 
(p8iB+tree) s
gs 1923 187 1153 691 MR c np
12 w
c8
241 0 2004 285 2 MP stroke
gs 2051 212 147 147 MR c np
0 j
41 71 -82 0 41 -71 2124 332 4 MP
DP
gr

241 0 2004 451 2 MP stroke
gs 2051 378 147 147 MR c np
0 j
-41 71 -41 -71 82 0 2083 475 4 MP
DP
gr

241 0 2004 618 2 MP stroke
gs 2051 545 147 147 MR c np
2088  618 mt 2160  618 L
2124  582 mt 2124  654 L
gr

DD
241 0 2004 784 2 MP stroke
SO
gs 2051 711 147 147 MR c np
2099  759 mt 2149  809 L
2149  759 mt 2099  809 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1155 387 a(\(a\))13 b(insertion)325 b(\(b\))13
b(deletion)p 1020 416 V 1020 451 a Fq(Figure)23 b(12:)38
b(100K)23 b(up)q(date)h(op)q(erations)g(with)e(v)n(arious)1020
492 y(bulkload)13 b(factors.)p 1020 550 V 1032 913 a
@beginspecial 162 @llx 288 @lly 438 @urx 505 @ury 828
@rhi @setspecial
%%BeginDocument: graphs/exp7-count.eps


% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def

MathWorks begin

0 cap

end

MathWorks begin
bpage

bplot

/dpi2point 12 def
portraitMode 1932 6048 csm

   13   -16  3316  2603 MR c np
94 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 3460 2596 PR
6 w
0 2052 2685 0 0 -2052 450 2179 4 MP
PP
-2685 0 0 2052 2685 0 0 -2052 450 2179 5 MP stroke
4 w
DO
SO
6 w
0 sg
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
 450 2179 mt 3135 2179 L
 450 2179 mt  450  127 L
 450 2179 mt  450 2152 L
 450  127 mt  450  154 L
/Helvetica /ISOLatin1Encoding 168 FMSR

 357 2370 mt 
(50) s
1121 2179 mt 1121 2152 L
1121  127 mt 1121  154 L
1028 2370 mt 
(60) s
1793 2179 mt 1793 2152 L
1793  127 mt 1793  154 L
1700 2370 mt 
(70) s
2464 2179 mt 2464 2152 L
2464  127 mt 2464  154 L
2371 2370 mt 
(80) s
3135 2179 mt 3135 2152 L
3135  127 mt 3135  154 L
3042 2370 mt 
(90) s
 450 2179 mt  477 2179 L
3135 2179 mt 3108 2179 L
 322 2241 mt 
(0) s
 450 1769 mt  477 1769 L
3135 1769 mt 3108 1769 L
 322 1831 mt 
(2) s
 450 1358 mt  477 1358 L
3135 1358 mt 3108 1358 L
 322 1420 mt 
(4) s
 450  948 mt  477  948 L
3135  948 mt 3108  948 L
 322 1010 mt 
(6) s
 450  537 mt  477  537 L
3135  537 mt 3108  537 L
 322  599 mt 
(8) s
 450  127 mt  477  127 L
3135  127 mt 3108  127 L
 229  189 mt 
(10) s
 450 2179 mt 3135 2179 L
 450  127 mt 3135  127 L
 450 2179 mt  450  127 L
3135 2179 mt 3135  127 L
gs 450 127 2686 2053 MR c np
12 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
959 -1884 959 -131 0 0 929 2173 4 MP stroke
gr

12 w
c8
gs 856 85 2065 2162 MR c np
0 j
41 71 -82 0 41 -71 929 2220 4 MP
DP
41 71 -82 0 41 -71 929 2220 4 MP
DP
41 71 -82 0 41 -71 1888 2089 4 MP
DP
41 71 -82 0 41 -71 2847 205 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
639 -10 639 0 746 0 1036 2179 4 MP stroke
gr

gs 963 2096 2171 157 MR c np
0 j
-41 71 -41 -71 82 0 995 2203 4 MP
DP
-41 71 -41 -71 82 0 1741 2203 4 MP
DP
-41 71 -41 -71 82 0 2380 2203 4 MP
DP
-41 71 -41 -71 82 0 3019 2193 4 MP
DP
gr

gs 450 127 2686 2053 MR c np
649 -11 650 0 649 0 1100 2179 4 MP stroke
gr

gs 1027 2095 2095 158 MR c np
1064 2179 mt 1136 2179 L
1100 2143 mt 1100 2215 L
1713 2179 mt 1785 2179 L
1749 2143 mt 1749 2215 L
2363 2179 mt 2435 2179 L
2399 2143 mt 2399 2215 L
3012 2168 mt 3084 2168 L
3048 2132 mt 3048 2204 L
gr

gs 450 127 2686 2053 MR c np
DD
639 -10 639 0 746 0 1036 2179 4 MP stroke
gr

DD
gs 963 2096 2171 157 MR c np
SO
1011 2154 mt 1061 2204 L
1061 2154 mt 1011 2204 L
1757 2154 mt 1807 2204 L
1807 2154 mt 1757 2204 L
2396 2154 mt 2446 2204 L
2446 2154 mt 2396 2204 L
3035 2144 mt 3085 2194 L
3085 2144 mt 3035 2194 L
DD
gr

gs 450 127 2686 2053 MR c np
gr

0 sg
 307 2548 mt 
(percentage of entries used in leaf nodes) s
 174 2119 mt  -90 rotate
(insertions with splits \(x1K\)) s
90 rotate
SO
6 w
1042  381 mt 
(B+tree   ) s
1042  574 mt 
(p8B+tree ) s
1042  767 mt 
(p8eB+tree) s
1042  960 mt 
(p8iB+tree) s
gs 574 210 1340 803 MR c np
12 w
c8
280 0 668 324 2 MP stroke
gs 735 251 147 147 MR c np
0 j
41 71 -82 0 41 -71 808 371 4 MP
DP
gr

280 0 668 517 2 MP stroke
gs 735 444 147 147 MR c np
0 j
-41 71 -41 -71 82 0 767 541 4 MP
DP
gr

280 0 668 711 2 MP stroke
gs 735 638 147 147 MR c np
 772  711 mt  844  711 L
 808  675 mt  808  747 L
gr

DD
280 0 668 904 2 MP stroke
SO
gs 735 831 147 147 MR c np
 783  879 mt  833  929 L
 833  879 mt  783  929 L
gr

gr

12 w
c8
6 w

end

eplot

epage
end

showpage

%%EndDocument
 @endspecial 1455 970 a @beginspecial 22 @llx 14 @lly
360 @urx 262 @ury 914 @rhi @setspecial
%%BeginDocument: graphs/count100.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
360 72 S9
[] 24.000000 SL
360 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 24.000000 SL
302.4 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 21.600000 SL
302.4 251.6 M9
D9
302.4 72 S9
[] 24.000000 SL
302.4 234 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 21.600000 SL
302.4 233.6 M9
gsave 0.900000 G9
D9
grestore
302.4 72 S9
[] 24.000000 SL
302.4 216 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 21.600000 SL
302.4 215.6 M9
gsave 0.450000 G9
D9
grestore
302.4 72 S9
[] 24.000000 SL
302.4 198 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
120 72 S9
[] 24.000000 SL
120 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
120 72 S9
[] 21.600000 SL
120 251.6 M9
D9
120 72 S9
[] 24.000000 SL
120 171.29 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
120 72 S9
[] 21.600000 SL
120 170.89 M9
gsave 0.900000 G9
D9
grestore
120 72 S9
[] 24.000000 SL
120 94.752 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
120 72 S9
[] 21.600000 SL
120 94.352 M9
gsave 0.450000 G9
D9
grestore
168 72 S9
[] 24.000000 SL
168 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
168 72 S9
[] 21.600000 SL
168 251.6 M9
D9
168 72 S9
[] 24.000000 SL
168 250.628 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
168 72 S9
[] 21.600000 SL
168 250.228 M9
gsave 0.900000 G9
D9
grestore
168 72 S9
[] 24.000000 SL
168 177.593 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
168 72 S9
[] 21.600000 SL
168 177.193 M9
gsave 0.450000 G9
D9
grestore
216 72 S9
[] 24.000000 SL
216 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 251.6 M9
D9
216 72 S9
[] 24.000000 SL
216 250.616 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 250.216 M9
gsave 0.900000 G9
D9
grestore
216 72 S9
[] 24.000000 SL
216 176.67 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
216 72 S9
[] 21.600000 SL
216 176.27 M9
gsave 0.450000 G9
D9
grestore
264 72 S9
[] 24.000000 SL
264 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
264 72 S9
[] 21.600000 SL
264 251.6 M9
D9
264 72 S9
[] 24.000000 SL
264 250.634 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
264 72 S9
[] 21.600000 SL
264 250.234 M9
gsave 0.900000 G9
D9
grestore
264 72 S9
[] 24.000000 SL
264 177.593 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
264 72 S9
[] 21.600000 SL
264 177.193 M9
gsave 0.450000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 108 TXC
12 /Helvetica-Bold SetTxt
(20) 0 66 104.1 TXR
12 /Helvetica SetTxt
(|) -90 72 144 TXC
12 /Helvetica-Bold SetTxt
(40) 0 66 140.1 TXR
12 /Helvetica SetTxt
(|) -90 72 180 TXC
12 /Helvetica-Bold SetTxt
(60) 0 66 176.1 TXR
12 /Helvetica SetTxt
(|) -90 72 216 TXC
12 /Helvetica-Bold SetTxt
(80) 0 66 212.1 TXR
12 /Helvetica SetTxt
(|) -90 72 252 TXC
12 /Helvetica-Bold SetTxt
(100) 0 66 248.1 TXR
13 /Helvetica-Bold SetTxt
( ) 0 216 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 360 43.25 TXR
( Total Insertions) 90 35.4 252 TXR
16 /Helvetica-Bold SetTxt
( more splits) 0 310.306 241.6 TXL
( one split) 0 310.306 223.6 TXL
( no split) 0 310.306 205.6 TXL
(B+) 0 120 58.32 TXC
(p8B+) 0 168 58.32 TXC
(p8eB+) 0 216 58.32 TXC
(p8iB+) 0 264 58.32 TXC
() 0 310.306 224.8 TXL
() 0 310.306 206.8 TXL
() 0 310.306 188.8 TXL
() 0 120 41.52 TXC
() 0 168 41.52 TXC
() 0 216 41.52 TXC
() 0 264 41.52 TXC
7 SetSym
showpage
end
%%EndDocument
 @endspecial 1049 963 a Fv(\(a\))g(trees)g(with)h(empt)o(y)f(slots)48
b(\(b\))13 b(trees)g(that)g(are)g(100\045)h(full)p 1020
1007 V 1115 1041 a Fq(Figure)g(13:)20 b(Analysis)15 b(of)f(insertion)g
(b)q(eha)o(vior.)1020 1146 y Fv(sho)o(ws)j(the)g(execution)i(time)e
(for)g(p)q(erforming)h(segmen)o(ted)f(range)1020 1187
y(scans:)27 b(eac)o(h)18 b(scan)g(consists)h(of)e(a)h(searc)o(h)g(for)f
(the)h(starting)h(k)o(ey)1020 1229 y(follo)o(w)o(ed)e(b)o(y)g(1000)f
(range)h(scan)f(requests,)h(eac)o(h)g(of)f(whic)o(h)g(scans)1020
1270 y(\(and)c(places)h(in)o(to)f(the)g(return)g(bu\013er\))h(the)e
(next)h(segmen)o(t)g(of)g(1000)1020 1311 y Fp(h)p Fo(key)p
Fv(,)f Fo(tupleID)p Fp(i)f Fv(pairs)r(,)k(resulting)j(in)e(a)g(total)g
(of)g(1M)f(pairs.)23 b(The)1020 1353 y(trees)e(are)g(bulkloaded)j(with)
d(3M)g Fp(h)p Fo(key)p Fv(,)11 b Fo(tupleID)p Fp(i)f
Fv(pairs)q(,)23 b(with)1020 1394 y(bulkload)17 b(factors)e(ranging)i
(from)d(60\045)h(to)f(100\045.)23 b(The)14 b(rep)q(orted)1020
1436 y(execution)f(times)e(are)g(the)g(total)h(for)e(100)i(segmen)o
(ted)f(range)h(scans,)1020 1477 y(starting)17 b(from)f(100)h(randomly)h
(selected)f(starting)h Fo(key)p Fv(s.)25 b(As)16 b(w)o(e)1020
1518 y(see)11 b(in)h(Figure)h(11,)e(the)h(p)q(erformance)g(gains)g(for)
f(segmen)o(ted)h(range)1020 1560 y(scans)18 b(are)g(similar)i(to)e
(what)f(w)o(e)h(sa)o(w)f(earlier)i(in)g(Figure)f(10)g(for)1020
1601 y(non-segmen)o(ted)d(range)e(scans.)1020 1687 y
Fw(4.4)50 b(Update)12 b(P)o(erf)o(ormance)1057 1736 y
Fv(In)19 b(addition)h(to)e(impro)o(ving)j(searc)o(h)e(and)g(scan)g(p)q
(erformance,)1020 1778 y(another)14 b(one)g(of)f(our)h(goals)g(is)g(to)
g(ac)o(hiev)o(e)g(go)q(o)q(d)h(p)q(erformance)f(on)1020
1819 y Fu(up)n(dates)p Fv(,)7 b(esp)q(ecially)13 b(since)d(this)g(had)g
(b)q(een)g(a)g(problem)h(with)f(earlier)1020 1861 y(cac)o(he-sensitiv)o
(e)i(index)f(structures)g([19,)f(20].)16 b(T)m(o)9 b(quan)o(tify)i(the)
f(im-)1020 1902 y(pact)j(of)f(pB)1196 1886 y Ft(+)1222
1902 y Fv(-T)m(rees)g(on)h(up)q(date)g(p)q(erformance,)g(Figure)h(12)f
(sho)o(ws)1020 1943 y(the)h(execution)h(time)f(for)f(100K)g(random)i
(insertions)g(or)f(deletions)1020 1985 y(on)19 b(a)g(tree)g(bulkloaded)
j(with)d(3M)g Fp(h)p Fo(key)p Fv(,)11 b Fo(tupleID)p
Fp(i)g Fv(pairs)q(,)20 b(with)1020 2026 y(bulkload)14
b(factors)e(ranging)h(from)e(60\045)h(to)f(100\045,)h(and)g(with)g(w)o
(arm)1020 2068 y(cac)o(hes.)17 b(\(The)11 b(cold)i(cac)o(he)f(results)g
(exhibit)i(the)d(same)h(trends)g([7].\))1020 2109 y(As)18
b(w)o(e)h(see)f(in)i(Figure)g(12,)f(all)h(three)f(pB)1669
2093 y Ft(+)1695 2109 y Fv(-T)m(ree)f(sc)o(hemes)h(\(i.e.)1020
2151 y(p)1041 2135 y Ft(8)1059 2151 y Fv(B)1086 2135
y Ft(+)1111 2151 y Fv(-T)m(rees,)12 b(p)1257 2135 y Ft(8)1257
2157 y Ff(e)1274 2151 y Fv(B)1301 2135 y Ft(+)1327 2151
y Fv(-T)m(rees,)f(and)i(p)1546 2135 y Ft(8)1546 2157
y Ff(i)1564 2151 y Fv(B)1591 2135 y Ft(+)1616 2151 y
Fv(-T)m(rees\))f(p)q(erform)g(roughly)1020 2192 y(the)i(same,)g(and)g
(all)h(are)f(signi\014can)o(tly)j(faster)c(than)i(the)f(B)1894
2176 y Ft(+)1919 2192 y Fv(-T)m(ree.)1020 2233 y(F)m(or)i(example,)i
(when)e(the)g(bulkload)j(factor)d(is)h(100\045,)f(the)h(pB)1978
2217 y Ft(+)2004 2233 y Fv(-)1020 2275 y(T)m(rees)d(ac)o(hiev)o(e)i(at)
f(least)h(a)e(1.24)h(sp)q(eedup)h(o)o(v)o(er)f(the)g(B)1844
2259 y Ft(+)1869 2275 y Fv(-T)m(ree)f(for)1020 2316 y(b)q(oth)d
(insertions)i(and)e(deletions.)18 b(This)12 b(result)f(ma)o(y)g(app)q
(ear)g(some-)1020 2358 y(what)g(surprising,)i(giv)o(en)f(the)e
(additional)k(o)o(v)o(erheads)e(of)e(main)o(tain-)1020
2399 y(ing)k(the)f(external)i(jump-p)q(oin)o(ter)f(arra)o(ys)g(for)e(p)
1725 2383 y Ft(8)1725 2406 y Ff(e)1743 2399 y Fv(B)1770
2383 y Ft(+)1796 2399 y Fv(-T)m(rees.)1057 2440 y(There)j(are)g(t)o(w)o
(o)g(primary)h(factors)f(con)o(tributing)i(to)e(the)g(faster)1020
2482 y(up)q(date)20 b(times)f(for)f(pB)1375 2466 y Ft(+)1401
2482 y Fv(-T)m(rees)g(compared)i(with)f(the)g(B)1894
2466 y Ft(+)1919 2482 y Fv(-T)m(ree.)1020 2523 y(First,)c(searc)o(h)g
(is)g(an)g(in)o(tegral)h(part)f(of)f(b)q(oth)h(insertion)h(and)f(dele-)
1020 2565 y(tion,)k(and)g(our)e(pB)1315 2549 y Ft(+)1341
2565 y Fv(-T)m(rees)g(enjo)o(y)h(faster)g(searc)o(h)g(times)g(due)g(to)
1020 2606 y(their)12 b(wider)g(no)q(des)g(\(as)f(w)o(e)g(sa)o(w)g
(earlier)i(in)f(Section)g(4.2\).)k(Second,)1020 2647
y(no)q(de)j(splits)h(o)q(ccur)e(less)h(frequen)o(tly)h(for)d(wider)i
(no)q(des.)33 b(Let)18 b(us)1020 2689 y(start)d(b)o(y)g(considering)i
(trees)d(that)h(are)g(not)g(full|i.e.)h(with)f(bulk-)p
eop
%%Page: 11 11
11 10 bop -76 -74 997 2 v -76 331 a @beginspecial 22
@llx 14 @lly 576 @urx 262 @ury 936 @rhi @setspecial
%%BeginDocument: graphs/improved_perf.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
576 72 S9
[] 24.000000 SL
576 72 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
525.6 72 S9
[] 24.000000 SL
525.6 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
525.6 72 S9
[] 21.600000 SL
525.6 251.6 M9
D9
525.6 72 S9
[] 24.000000 SL
525.6 234 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
525.6 72 S9
[] 21.600000 SL
525.6 233.6 M9
gsave 0.900000 G9
D9
grestore
525.6 72 S9
[] 24.000000 SL
525.6 216 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
525.6 72 S9
[] 21.600000 SL
525.6 215.6 M9
gsave 0.450000 G9
D9
grestore
525.6 72 S9
[] 24.000000 SL
525.6 198 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
128.629 72 S9
[] 24.000000 SL
128.629 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
128.629 72 S9
[] 21.600000 SL
128.629 251.6 M9
D9
128.629 72 S9
[] 24.000000 SL
128.629 134.91 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
128.629 72 S9
[] 21.600000 SL
128.629 134.51 M9
gsave 0.900000 G9
D9
grestore
128.629 72 S9
[] 24.000000 SL
128.629 95.544 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
128.629 72 S9
[] 21.600000 SL
128.629 95.144 M9
gsave 0.450000 G9
D9
grestore
179.596 72 S9
[] 24.000000 SL
179.596 229.014 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
179.596 72 S9
[] 21.600000 SL
179.596 228.614 M9
D9
179.596 72 S9
[] 24.000000 SL
179.596 135.23 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
179.596 72 S9
[] 21.600000 SL
179.596 134.83 M9
gsave 0.900000 G9
D9
grestore
179.596 72 S9
[] 24.000000 SL
179.596 94.5629 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
179.596 72 S9
[] 21.600000 SL
179.596 94.1629 M9
gsave 0.450000 G9
D9
grestore
230.562 72 S9
[] 24.000000 SL
230.562 194.706 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
230.562 72 S9
[] 21.600000 SL
230.562 194.306 M9
D9
230.562 72 S9
[] 24.000000 SL
230.562 130.107 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
230.562 72 S9
[] 21.600000 SL
230.562 129.707 M9
gsave 0.900000 G9
D9
grestore
230.562 72 S9
[] 24.000000 SL
230.562 94.6783 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
230.562 72 S9
[] 21.600000 SL
230.562 94.2783 M9
gsave 0.450000 G9
D9
grestore
281.528 72 S9
[] 24.000000 SL
281.528 192.726 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
281.528 72 S9
[] 21.600000 SL
281.528 192.326 M9
D9
281.528 72 S9
[] 24.000000 SL
281.528 130.842 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
281.528 72 S9
[] 21.600000 SL
281.528 130.442 M9
gsave 0.900000 G9
D9
grestore
281.528 72 S9
[] 24.000000 SL
281.528 94.5637 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
281.528 72 S9
[] 21.600000 SL
281.528 94.1637 M9
gsave 0.450000 G9
D9
grestore
366.472 72 S9
[] 24.000000 SL
366.472 252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
366.472 72 S9
[] 21.600000 SL
366.472 251.6 M9
D9
366.472 72 S9
[] 24.000000 SL
366.472 100.044 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
366.472 72 S9
[] 21.600000 SL
366.472 99.644 M9
gsave 0.900000 G9
D9
grestore
366.472 72 S9
[] 24.000000 SL
366.472 90.252 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
366.472 72 S9
[] 21.600000 SL
366.472 89.852 M9
gsave 0.450000 G9
D9
grestore
417.438 72 S9
[] 24.000000 SL
417.438 120.312 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
417.438 72 S9
[] 21.600000 SL
417.438 119.912 M9
D9
417.438 72 S9
[] 24.000000 SL
417.438 89.1894 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
417.438 72 S9
[] 21.600000 SL
417.438 88.7894 M9
gsave 0.900000 G9
D9
grestore
417.438 72 S9
[] 24.000000 SL
417.438 88.0686 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
417.438 72 S9
[] 21.600000 SL
417.438 87.6686 M9
gsave 0.450000 G9
D9
grestore
468.404 72 S9
[] 24.000000 SL
468.404 93.6 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
468.404 72 S9
[] 21.600000 SL
468.404 93.2 M9
D9
468.404 72 S9
[] 24.000000 SL
468.404 88.4916 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
468.404 72 S9
[] 21.600000 SL
468.404 88.0916 M9
gsave 0.900000 G9
D9
grestore
468.404 72 S9
[] 24.000000 SL
468.404 87.0595 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
468.404 72 S9
[] 21.600000 SL
468.404 86.6595 M9
gsave 0.450000 G9
D9
grestore
519.371 72 S9
[] 24.000000 SL
519.371 92.628 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
519.371 72 S9
[] 21.600000 SL
519.371 92.228 M9
D9
519.371 72 S9
[] 24.000000 SL
519.371 87.716 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
519.371 72 S9
[] 21.600000 SL
519.371 87.316 M9
gsave 0.900000 G9
D9
grestore
519.371 72 S9
[] 24.000000 SL
519.371 86.9609 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
519.371 72 S9
[] 21.600000 SL
519.371 86.5609 M9
gsave 0.450000 G9
D9
grestore
12 /Helvetica SetTxt
(|) -90 72 72 TXC
12 /Helvetica-Bold SetTxt
(0) 0 66 68.1 TXR
12 /Helvetica SetTxt
(|) -90 72 108 TXC
12 /Helvetica-Bold SetTxt
(20) 0 66 104.1 TXR
12 /Helvetica SetTxt
(|) -90 72 144 TXC
12 /Helvetica-Bold SetTxt
(40) 0 66 140.1 TXR
12 /Helvetica SetTxt
(|) -90 72 180 TXC
12 /Helvetica-Bold SetTxt
(60) 0 66 176.1 TXR
12 /Helvetica SetTxt
(|) -90 72 216 TXC
12 /Helvetica-Bold SetTxt
(80) 0 66 212.1 TXR
12 /Helvetica SetTxt
(|) -90 72 252 TXC
12 /Helvetica-Bold SetTxt
(100) 0 66 248.1 TXR
13 /Helvetica-Bold SetTxt
( ) 0 324 14.8 TXC
[] 3.200000 SL
2 setlinecap
72 72 576 72 
L9
0 setlinecap
72 72 72 252 
L9
( ) 0 576 43.25 TXR
( Normalized Execution Time) 90 35.4 252 TXR
16 /Helvetica-Bold SetTxt
( dcache stalls) 0 539.435 241.6 TXL
( other stalls) 0 539.435 223.6 TXL
( busy) 0 539.435 205.6 TXL
(B+) 0 128.629 58.32 TXC
(CSB+) 0 179.596 58.32 TXC
(p8B+) 0 230.562 58.32 TXC
(p8CSB+) 0 281.528 58.32 TXC
20 /Helvetica-Bold SetTxt
() 0 205.079 47.376 TXC
16 /Helvetica-Bold SetTxt
(B+) 0 366.472 58.32 TXC
(p8B+) 0 417.438 58.32 TXC
(p8eB+) 0 468.404 58.32 TXC
(p8iB+) 0 519.371 58.32 TXC
20 /Helvetica-Bold SetTxt
() 0 442.921 47.376 TXC
16 /Helvetica-Bold SetTxt
() 0 539.435 224.8 TXL
() 0 539.435 206.8 TXL
() 0 539.435 188.8 TXL
() 0 128.629 41.52 TXC
() 0 179.596 41.52 TXC
() 0 230.562 41.52 TXC
() 0 281.528 41.52 TXC
20 /Helvetica-Bold SetTxt
(search) 0 205.079 26.376 TXC
16 /Helvetica-Bold SetTxt
() 0 366.472 41.52 TXC
() 0 417.438 41.52 TXC
() 0 468.404 41.52 TXC
() 0 519.371 41.52 TXC
20 /Helvetica-Bold SetTxt
(scan) 0 442.921 26.376 TXC
() 0 205.079 5.376 TXC
() 0 442.921 5.376 TXC
7 SetSym
showpage
end
%%EndDocument
 @endspecial -76 347 V 57 x Fq(Figure)10 b(14:)18 b(Impact)10
b(of)h(v)n(arious)g(pB)532 372 y Ft(+)557 388 y Fq(-T)l(rees)h(on)e
(the)h(cac)o(he)-76 429 y(p)q(erformance)k(of)f(index)g(searc)o(h)h
(and)f(range)i(scan.)-76 529 y Fv(load)f(factors)g(ranging)g(from)f
(60\045)g(to)g(90\045.)20 b(Figure)c(13\(a\))e(sho)o(ws)-76
570 y(that)d(when)g(the)g(bulkload)j(factor)d(is)g(within)i(this)e
(range,)h(the)f(n)o(um-)-76 611 y(b)q(er)f(of)f(the)g(100K)h
(insertions)i(that)d(cause)h(no)q(de)g(splits)h(is)f(extremely)-76
653 y(small)16 b(for)d(eac)o(h)h(of)g(the)g(pB)332 637
y Ft(+)358 653 y Fv(-T)m(rees,)f(and)i(is)f(ev)o(en)h(less)g(than)f
(10\045)-76 694 y(for)c(B)7 678 y Ft(+)33 694 y Fv(-T)m(rees.)15
b(Giv)o(en)d(that)e(Figures)i(12\(a\))e(and)h(\(b\))g(sho)o(w)f
(similar)-76 736 y(trends)k(to)f(Figure)h(8)f(within)h(this)g(range)g
(of)e(bulkload)k(factors,)d(w)o(e)-76 777 y(conclude)k(that)f(the)f
(dominan)o(t)i(e\013ect)f(is)g(impro)o(v)o(ed)h(searc)o(h)f(time)-76
818 y(for)d(these)g(less-than-full)j(trees.)-38 860 y(In)e(con)o
(trast,)h(when)g(the)f(trees)h(are)f(full,)i(man)o(y)f(insertions)i
(will)-76 901 y(cause)g(no)q(de)f(splits,)j(as)d(sho)o(wn)g(in)h
(Figure)g(13\(b\).)26 b(Due)17 b(to)e(their)-76 943 y(smaller)21
b(no)q(des,)g(B)216 927 y Ft(+)241 943 y Fv(-T)m(rees)e(su\013er)g(far)
g(more)g(no)q(de)h(splits)h(than)-76 984 y(pB)-28 968
y Ft(+)-2 984 y Fv(-T)m(rees,)11 b(and)h(o)o(v)o(er)f(40\045)h(of)f
(the)g(insertions)j(result)e(in)g(m)o(ultiple)-76 1026
y(splits)18 b(due)e(to)g(splitting)j Fu(non-le)n(af)14
b(no)n(des)p Fv(.)24 b(Hence)16 b(although)i(the)-76
1067 y(cost)d(of)g(eac)o(h)g(no)q(de)h(split)h(in)f(a)f(pB)451
1051 y Ft(+)477 1067 y Fv(-T)m(rees)f(is)i(greater,)f(this)h(cost)-76
1108 y(is)f(more)f(than)g(o\013set)h(b)o(y)f(the)g(reduced)h(frequency)
g(of)f(no)q(de)h(splits)-76 1150 y(and)f(the)f(impro)o(v)o(ed)i(searc)o
(h)e(times.)-38 1191 y(T)m(urning)22 b(our)f(atten)o(tion)h(to)f
(deletion)h(p)q(erformance)g(in)g(Fig-)-76 1233 y(ure)11
b(12\(b\),)g(since)g(b)q(oth)g(pB)326 1217 y Ft(+)352
1233 y Fv(-T)m(rees)f(and)h(B)563 1217 y Ft(+)589 1233
y Fv(-T)m(rees)e(use)i(lazy)g(dele-)-76 1274 y(tion,)19
b(v)o(ery)f(few)e(deletions)k(result)e(in)g(a)g(deleted)g(no)q(de)g(or)
g(a)f(k)o(ey)-76 1315 y(redistribution)q(.)28 b(Hence)16
b(the)g(p)q(erformance)g(gains)h(for)f(pB)808 1299 y
Ft(+)834 1315 y Fv(-T)m(ree)-76 1357 y(deletions)f(are)e(due)h(solely)h
(to)e(faster)g(searc)o(h)g(times.)-76 1438 y Fw(4.5)50
b(Cache)12 b(P)o(erf)o(ormance)-38 1487 y Fv(Finally)m(,)21
b(our)e(last)g(set)f(of)g(exp)q(erimen)o(ts)i(presen)o(t)f(a)f(more)g
(de-)-76 1529 y(tailed)k(cac)o(he)f(p)q(erformance)g(study)m(,)i(using)
f(t)o(w)o(o)d(represen)o(tativ)o(e)-76 1570 y(exp)q(erimen)o(ts:)j(one)
16 b(for)e(index)j(searc)o(h)e(and)g(one)h(for)e(index)j(range)-76
1611 y(scan.)g(A)11 b(cen)o(tral)h(claim)g(of)f(this)h(pap)q(er)g(is)f
(that)h(the)f(demonstrated)-76 1653 y(sp)q(eedups)k(for)e(pB)195
1637 y Ft(+)221 1653 y Fv(-T)m(rees)f(are)h(obtained)i(b)o(y)f
(e\013ectiv)o(ely)h(limiting)-76 1694 y(the)h(exp)q(osed)g(miss)g
(latency)h(of)e(previous)i(approac)o(hes.)26 b(In)15
b(these)-76 1736 y(exp)q(erimen)o(ts,)g(w)o(e)d(con\014rm)i(that)f
(claim.)-38 1777 y(Our)f(starting)i(p)q(oin)o(t)f(is)g(the)g(exp)q
(erimen)o(ts)h(presen)o(ted)f(earlier)h(in)-76 1818 y(Figure)19
b(1)f(whic)o(h)h(illustrated)i(the)d(p)q(o)q(or)g(cac)o(he)h(p)q
(erformance)f(of)-76 1860 y(existing)e(B)94 1844 y Ft(+)120
1860 y Fv(-T)m(rees)d(on)h(index)h(searc)o(h)f(and)g(scan.)20
b(W)m(e)14 b(repro)q(duce)-76 1901 y(those)e(results)h(no)o(w)e(in)h
(Figure)h(14,)f(along)g(with)g(sev)o(eral)h(v)n(ariations)-76
1943 y(of)i(our)h(pB)89 1927 y Ft(+)115 1943 y Fv(-T)m(rees.)24
b(The)16 b(bars)g(on)g(the)g(left)g(\(lab)q(eled)h(\\searc)o(h"\))-76
1984 y(corresp)q(ond)g(to)f(the)f(exp)q(erimen)o(t)i(sho)o(wn)f
(earlier)h(in)g(Figure)f(7\(a\))-76 2025 y(with)j(10M)g
Fp(h)p Fo(key)p Fv(,)12 b Fo(tupleID)p Fp(i)e Fv(pairs)20
b(bulk-loaded,)i(and)e(the)f(bars)-76 2067 y(on)14 b(the)f(righ)o(t)i
(\(lab)q(eled)g(\\scan"\))g(corresp)q(ond)g(to)e(the)h(exp)q(erimen)o
(t)-76 2108 y(sho)o(wn)g(earlier)g(in)g(Figure)g(10\(a\))f(with)h(1M)f
Fo(tupleID)p Fv(s)d(scanned.)-38 2150 y(Eac)o(h)k(bar)g(in)h(Figure)g
(14)f(represen)o(ts)h(execution)h(time)e(normal-)-76
2191 y(ized)k(to)f(a)g(B)121 2175 y Ft(+)147 2191 y Fv(-T)m(ree,)g(and)
h(is)f(brok)o(en)h(do)o(wn)g(in)o(to)g(the)f(follo)o(wing)-76
2232 y(three)d(categories)h(that)f(explain)i(what)d(happ)q(ened)j
(during)f(all)g(p)q(o-)-76 2274 y(ten)o(tial)h Fu(gr)n(aduation)d
(slots)p Fv(.)325 2258 y Ft(6)362 2274 y Fv(The)i(b)q(ottom)g(section)h
(\()p Fu(busy)p Fv(\))d(is)i(the)-76 2315 y(n)o(um)o(b)q(er)h(of)e
(slots)i(where)f(instructions)j(actually)f(graduate.)23
b(The)-76 2357 y(other)13 b(t)o(w)o(o)e(sections)j(are)e(the)g(n)o(um)o
(b)q(er)h(of)f(slots)h(where)f(there)g(is)h(no)-76 2398
y(graduating)k(instruction,)h(brok)o(en)e(do)o(wn)g(in)o(to)g(data)f
(cac)o(he)h(stalls)-76 2440 y(and)e(other)f(stalls.)18
b(Sp)q(eci\014call)q(y)m(,)d(the)e(top)g(section)h(\()p
Fu(dc)n(ache)d(stal)r(ls)p Fv(\))-76 2481 y(is)j(the)g(n)o(um)o(b)q(er)
g(of)f(suc)o(h)h(slots)g(that)f(are)h(immediately)i(caused)e(b)o(y)-76
2522 y(the)i(oldest)g(instruction)i(su\013ering)f(a)f(data)g(cac)o(he)g
(miss,)g(and)g(the)p -76 2557 399 2 v -76 2582 a Fn(6)-59
2594 y Fm(The)d(n)o(um)o(b)q(er)i(of)e(graduation)g(slots)h(is)g(the)f
(issue)h(width)g(\(4)f(in)i(our)e(sim)o(u-)-76 2626 y(lated)f(arc)o
(hitecture\))g(m)o(ultiplied)j(b)o(y)e(the)f(n)o(um)o(b)q(er)h(of)f
(cycles.)19 b(W)m(e)12 b(fo)q(cus)h(on)-76 2657 y(graduation)d(slots)h
(rather)f(than)h(issue)h(slots)e(to)h(a)o(v)o(oid)g(coun)o(ting)g(sp)q
(eculativ)o(e)-76 2689 y(op)q(erations)g(that)g(are)f(squashed.)1020
-34 y Fv(middle)k(section)g(\()p Fu(other)e(stal)r(ls)p
Fv(\))e(is)k(all)f(other)g(slots)h(where)e(instruc-)1020
7 y(tions)k(do)g(not)f(graduate.)25 b(Note)15 b(that)g(the)g
Fu(dc)n(ache)f(stal)r(ls)i Fv(section)1020 48 y(is)g(only)g(a)f
(\014rst-order)g(appro)o(ximation)j(of)d(the)g(p)q(erformance)h(loss)
1020 90 y(due)10 b(to)f(data)h(cac)o(he)g(misses:)16
b(these)9 b(dela)o(ys)i(also)f(exacerbate)g(subse-)1020
131 y(quen)o(t)g(data)g(dep)q(endence)h(stalls,)h(thereb)o(y)e
(increasing)i(the)d(n)o(um)o(b)q(er)1020 173 y(of)k Fu(other)f(stal)r
(ls)p Fv(.)1057 214 y(As)f(w)o(e)f(see)h(in)g(Figure)h(14,)e(pB)1494
198 y Ft(+)1520 214 y Fv(-T)m(rees)g(signi\014can)o(tl)q(y)k(reduce)d
(the)1020 256 y(amoun)o(t)j(of)f(exp)q(osed)i(miss)f(latency)g(\(i.e.)g
(the)f Fu(dc)n(ache)f(stal)r(ls)f Fv(com-)1020 297 y(p)q(onen)o(t)k(of)
g(eac)o(h)f(bar\).)22 b(F)m(or)14 b(the)h(index)g(searc)o(h)g(exp)q
(erimen)o(ts,)i(w)o(e)1020 338 y(see)10 b(that)h(while)h(CSB)1334
322 y Ft(+)1359 338 y Fv(-T)m(rees)e(eliminated)j(20\045)d(of)g(the)h
(data)g(cac)o(he)1020 380 y(stall)i(time)f(that)f(existed)i(with)e(B)
1509 364 y Ft(+)1535 380 y Fv(-T)m(rees,)g(p)1680 364
y Ft(8)1697 380 y Fv(B)1724 364 y Ft(+)1750 380 y Fv(-T)m(rees)g
(eliminate)1020 421 y Fu(45\045)j Fv(of)g(this)h(stall)h(time,)e(th)o
(us)h(resulting)i(in)e(an)g(o)o(v)o(erall)h(sp)q(eedup)1020
463 y(of)i Fu(1.47)f Fv(\(compared)i(with)g(1.15)f(for)g(CSB)1672
447 y Ft(+)1698 463 y Fv(-T)m(rees\).)32 b(A)18 b(signi\014-)1020
504 y(can)o(t)13 b(amoun)o(t)h(of)f(data)g(cac)o(he)g(stall)i(time)e
(still)i(remains)f(for)f(index)1020 545 y(searc)o(hes,)g(since)h(w)o(e)
e(still)j(exp)q(erience)f(the)f(full)h(miss)g(latency)g(eac)o(h)1020
587 y(time)e(w)o(e)e(mo)o(v)o(e)i(do)o(wn)f(a)g(lev)o(el)i(in)f(the)f
(tree)g(\(unless)i(the)e(no)q(de)h(is)g(al-)1020 628
y(ready)g(in)h(the)f(cac)o(he)g(due)g(to)g(previous)h(op)q(erations\).)
19 b(Eliminating)1020 670 y(this)12 b(remaining)h(latency)f(app)q(ears)
g(to)f(b)q(e)h(di\016cult,)g(as)f(w)o(e)g(will)h(dis-)1020
711 y(cuss)g(in)f(the)h(next)f(section.)17 b(In)11 b(con)o(trast,)h(w)o
(e)f(ac)o(hiev)o(e)h(nearly)g(ideal)1020 752 y(p)q(erformance)20
b(for)e(the)h(index)h(range)f(scan)g(exp)q(erimen)o(ts)i(sho)o(wn)1020
794 y(in)12 b(Figure)h(14,)e(where)h(b)q(oth)g(p)1463
778 y Ft(8)1463 800 y Ff(e)1480 794 y Fv(B)1507 778 y
Ft(+)1533 794 y Fv(-T)m(rees)e(and)i(p)1739 778 y Ft(8)1739
801 y Ff(i)1757 794 y Fv(B)1784 778 y Ft(+)1810 794 y
Fv(-T)m(rees)e(elimi-)1020 835 y(nate)g Fu(97\045)f Fv(of)g(the)h
(original)i(data)e(cac)o(he)g(stall)h(time,)g(resulting)g(in)g(an)1020
877 y(impressiv)o(e)18 b Fu(eightfold)c(over)n(al)r(l)g(sp)n(e)n(e)n
(dup)p Fv(.)23 b(These)17 b(results)g(demon-)1020 918
y(strate)12 b(that)f(the)h(pB)1322 902 y Ft(+)1348 918
y Fv(-T)m(ree)f(sp)q(eedups)i(are)e(indeed)i(primarily)i(due)1020
959 y(to)e(a)g(signi\014can)o(t)j(reduction)e(in)g(the)f(exp)q(osed)i
(miss)e(latency)m(.)1020 1066 y Fw(5.)50 b(DISCUSSION)1057
1115 y Fv(W)m(e)18 b(no)o(w)g(discuss)i(sev)o(eral)f(p)q(ossible)h
(impro)o(v)o(emen)o(ts)g(to)e(pB)1978 1099 y Ft(+)2004
1115 y Fv(-)1020 1157 y(T)m(rees)c(and)h(related)g(issues.)22
b(While)16 b(our)f(approac)o(h)g(of)f(using)i(pre-)1020
1198 y(fetc)o(hing)d(to)f(create)g(wider)h(no)q(des)g(impro)o(v)o(es)h
(searc)o(h)e(p)q(erformance)1020 1240 y(b)o(y)17 b(a)h(factor)f(of)f
(1.2{1.5,)i(w)o(e)f(still)i(su\013er)f(a)f(full)h(cac)o(he)g(miss)g
(la-)1020 1281 y(tency)13 b(at)g(eac)o(h)g(lev)o(el)h(of)f(the)g(tree.)
j(Unfortunately)m(,)e(this)g(is)f(a)g(v)o(ery)1020 1322
y(di\016cult)20 b(problem)g(to)f(solv)o(e)g(giv)o(en:)30
b(\(i\))19 b(the)f(data)h(dep)q(endence)1020 1364 y(through)c(the)f(c)o
(hild)h(p)q(oin)o(ter;)g(\(ii\))g(the)e(relativ)o(ely)k(large)d(fanout)
g(of)1020 1405 y(the)d(tree)h(no)q(des;)g(and)g(\(iii\))h(the)e(fact)g
(that)g(it)h(is)g(equally)h(lik)o(ely)h(that)1020 1447
y(an)o(y)20 b(c)o(hild)h(will)f(b)q(e)g(visited)h(\(assuming)f
(uniformly)i(distributed)1020 1488 y(random)13 b(searc)o(h)h(k)o
(eys\).)j(While)d(one)f(migh)o(t)g(consider)i(prefetc)o(hing)1020
1529 y(the)f(c)o(hildren)h(or)f(ev)o(en)f(the)h(grandc)o(hildren)j(of)c
(a)g(no)q(de)h(in)g(parallel)1020 1571 y(with)f(accessing)g(the)f(no)q
(de,)h(there)f(is)h(a)f(dualit)o(y)i(b)q(et)o(w)o(een)f(this)f(and)1020
1612 y(simply)i(creating)f(wider)g(no)q(des.)k(Compared)c(with)g(our)f
(approac)o(h,)1020 1654 y(prefetc)o(hing)i(c)o(hildren)h(or)e(grandc)o
(hildren)j(su\013ers)e(from:)j(\(i\))c(addi-)1020 1695
y(tional)k(storage)g(o)o(v)o(erhead)f(for)g(the)g(c)o(hildren)i(and)e
(grandc)o(hildren)1020 1736 y(p)q(oin)o(ters,)i(and)f(\(ii\))g(the)g
(restriction)h(that)e(the)h(\\size")g(of)f(a)g(no)q(de)1020
1778 y(\(i.e.)c(the)g(n)o(um)o(b)q(er)h(of)f(cac)o(he)g(lines)i
(prefetc)o(hed\))e(can)h(only)g(gro)o(w)f(b)o(y)1020
1819 y(m)o(ultiples)k(of)c(the)h(tree)g(fanout.)1057
1861 y(Extending)h(the)e(idea)g(of)f(adding)j(p)q(oin)o(ters)f(to)e
(the)h(b)q(ottom)g(non-)1020 1902 y(leaf)h(no)q(des,)g(it)g(is)g(p)q
(ossible)h(to)f(use)f Fu(no)g(additional)e(p)n(ointers)h(at)h(al)r(l)p
Fv(.)1020 1943 y(P)o(oten)o(tially)m(,)i(w)o(e)d(could)h(retain)h(all)f
(the)g(p)q(oin)o(ters)g(from)f(the)h(ro)q(ot)f(to)1020
1985 y(the)i(leaf)g(during)h(the)e(searc)o(h,)h(and)g(then)g(k)o(eep)g
(mo)o(ving)h(this)f(set)f(of)1020 2026 y(p)q(oin)o(ters,)i(sw)o(eeping)
h(through)f(the)g(en)o(tire)g(range)f(prefetc)o(hing)i(the)1020
2068 y(leaf)f(no)q(des.)19 b(Note)13 b(that)h(with)g(wider)g(no)q(des,)
g(trees)g(are)f(shallo)o(w)o(er)1020 2109 y(and)h(this)g(sc)o(heme)f
(ma)o(y)g(b)q(e)g(feasible.)1057 2151 y(Lehman)g(and)g(Carey)m(,)f(in)h
(an)f(early)h(pap)q(er)g(on)g(index)g(structures)1020
2192 y(for)j(main)i(memory)e(databases,)i(prop)q(osed)g(and)f(studied)h
(the)f(T-)1020 2233 y(T)m(ree)12 b([11,)g(12].)17 b(A)o(t)12
b(the)h(time)g(of)f(their)i(study)f(\(the)g(mid-80's\),)g(the)1020
2275 y(T-T)m(ree)h(outp)q(erformed)h(the)g(B)1484 2259
y Ft(+)1510 2275 y Fv(-T)m(ree,)f(and)h(w)o(as)f(considered)j(the)1020
2316 y(index)10 b(structure)g(of)f(c)o(hoice)h(for)f(main)h(memory)f
(databases)h(for)f(o)o(v)o(er)1020 2358 y(a)h(decade.)17
b(Ho)o(w)o(ev)o(er,)10 b(more)h(recen)o(t)f(studies)i(ha)o(v)o(e)f(sho)
o(wn)g(that)f(the)1020 2399 y(B)1047 2383 y Ft(+)1073
2399 y Fv(-T)m(ree)g(outp)q(erforms)j(the)e(T-T)m(ree)f(on)i(mo)q(dern)
g(pro)q(cessors)h([19],)1020 2440 y(due)k(in)g(large)g(part)g(to)f(the)
h(exp)q(onen)o(tial)i(gro)o(wth)d(these)h(past)g(15)1020
2482 y(y)o(ears)c(in)h(cac)o(he)g(miss)g(latency)g(relativ)o(e)g(to)f
(pro)q(cessor)h(sp)q(eed.)1057 2523 y(Previous)d(w)o(ork)d(has)i(also)f
(considered)i(k)o(ey)e(compression)i(sc)o(hemes)1020
2565 y(\(e.g.,)16 b([4,)i(6,)f(9]\),)h(in)f(order)h(to)f(pac)o(k)h
(more)f(k)o(eys)g(in)o(to)h(an)g(index)1020 2606 y(no)q(de.)f(As)12
b(with)g(CSB)1345 2590 y Ft(+)1370 2606 y Fv(-T)m(rees,)f(these)h(tec)o
(hniques)i(can)e(b)q(e)g(used)g(in)1020 2647 y(conjunction)j(with)e
(our)h(approac)o(h,)g(as)f(desired.)1057 2689 y(Although)19
b(our)e(discussions)j(and)e(exp)q(erimen)o(ts)h(ha)o(v)o(e)e(fo)q
(cused)p eop
%%Page: 12 12
12 11 bop -76 -34 a Fv(on)14 b(main)g(memory)g(databases,)g(pB)457
-50 y Ft(+)483 -34 y Fv(-T)m(rees)f(can)g(also)i(b)q(e)e(used)h(to)-76
7 y(impro)o(v)o(e)g(b)q(oth)f(the)f(I/O)h(p)q(erformance)g(and)g(the)f
(memory)h(p)q(erfor-)-76 48 y(mance)j(of)f(disk-residen)o(t)j
(databases.)26 b(Because)16 b(the)g(index)g(no)q(de)-76
90 y(size)g(for)f(a)g(disk-residen)o(t)i(database)f(is)g(t)o(ypically)i
(a)d(disk)h(page)f(of)-76 131 y(4KB,)k(the)f(fanout)i(is)f(m)o(uc)o(h)g
(larger)h(than)f(with)g(main)h(memory)-76 173 y(indices.)33
b(This)18 b(ma)o(y)g(e\013ect)g(the)g(b)q(ene\014ts)h(of)e(using)i(ev)o
(en)g(wider)-76 214 y(no)q(des)h(for)f(searc)o(hes.)36
b(Ho)o(w)o(ev)o(er,)20 b(our)f(range)h(scan)g(prefetc)o(hing)-76
256 y(tec)o(hniques)15 b(applied)h(to)d(pages)g(w)o(ould)i(lik)o(ely)g
(con)o(tin)o(ue)g(to)e(ha)o(v)o(e)g(a)-76 297 y(signi\014can)o(t)g(b)q
(ene\014t.)j(F)m(urthermore,)11 b(main)g(memory)f(p)q(erformance)-76
338 y(is)i(imp)q(ortan)o(t)g(ev)o(en)g(for)e(disk-residen)o(t)k
(databases,)e(so)g(it)f(w)o(ould)h(b)q(e)-76 380 y(in)o(teresting)18
b(to)f(apply)g(our)g(metho)q(ds)g(for)f(b)q(oth)h(cac)o(he)g(lines)h
(and)-76 421 y(pages,)c(and)f(quan)o(tify)i(the)e(o)o(v)o(erall)i(p)q
(erformance)f(gains.)-76 512 y Fw(6.)50 b(CONCLUSIONS)-38
562 y Fv(While)11 b(eliminating)i(c)o(hild)e(p)q(oin)o(ters)g(through)g
(data)f(la)o(y)o(out)g(tec)o(h-)-76 603 y(niques)15 b(has)g(b)q(een)f
(sho)o(wn)g(to)g(signi\014can)o(tly)j(impro)o(v)o(e)e(main)g(mem-)-76
645 y(ory)f(B)19 629 y Ft(+)44 645 y Fv(-T)m(ree)f(searc)o(h)h(p)q
(erformance,)f(a)h(large)g(fraction)g(of)f(the)g(ex-)-76
686 y(ecution)j(time)f(for)g(a)g(searc)o(h)g(is)g(still)i(sp)q(en)o(t)e
(in)h(data)f(cac)o(he)g(stalls,)-76 727 y(and)c(index)h(insertion)h(p)q
(erformance)e(is)g(h)o(urt)g(b)o(y)g(these)g(tec)o(hniques.)-76
769 y(Moreo)o(v)o(er,)h(the)f(cac)o(he)g(p)q(erformance)h(of)f(index)h
(scan)f(\(another)h(im-)-76 810 y(p)q(ortan)o(t)17 b(B)93
794 y Ft(+)119 810 y Fv(-T)m(ree)e(op)q(eration\))j(has)f(not)f(b)q
(een)h(studied.)28 b(In)16 b(this)-76 852 y(pap)q(er,)10
b(w)o(e)f(explored)i(ho)o(w)e(prefetc)o(hing)i(could)f(b)q(e)f(used)h
(to)f(impro)o(v)o(e)-76 893 y(the)i(cac)o(he)g(p)q(erformance)g(of)g
(index)h(searc)o(h,)f(up)q(date,)h(and)f(scan)g(op-)-76
934 y(erations.)18 b(W)m(e)12 b(prop)q(osed)i(the)e Fu(Pr)n(efetching)e
(B)605 918 y Ft(+)630 934 y Fu(-T)m(r)n(e)n(e)k Fv(\(pB)793
918 y Ft(+)819 934 y Fv(-T)m(ree\))-76 976 y(and)g(ev)n(aluated)h(its)e
(e\013ectiv)o(eness)i(in)f(mo)q(dern)g(memory)f(systems.)-38
1017 y(W)m(e)j(sho)o(w)o(ed)h(that)f(the)h(optimal)h(B)494
1001 y Ft(+)519 1017 y Fv(-T)m(ree)e(no)q(de)h(size)g(is)g(often)-76
1059 y(wider)10 b(than)f(a)g(cac)o(he)h(line)g(on)f(a)g(mo)q(dern)h
(mac)o(hine,)h(when)e(prefetc)o(h-)-76 1100 y(ing)14
b(is)g(used)g(to)f(retriev)o(e)h(the)g(pieces)g(of)f(a)g(no)q(de,)h
(e\013ectiv)o(ely)h(o)o(v)o(er-)-76 1141 y(lapping)i(m)o(ultiple)g(cac)
o(he)f(misses.)22 b(Our)15 b(results)h(can)f(b)q(e)g(summa-)-76
1183 y(rized)f(as)f(follo)o(ws:)-20 1258 y Fp(\017)19
b Fv(F)m(or)11 b(index)i(searc)o(h,)f(this)g(prefetc)o(hing)h(tec)o
(hnique)g(ac)o(hiev)o(es)g(a)18 1299 y(sp)q(eedup)d(of)f(1.27)g(to)g
(1.55)g(o)o(v)o(er)g(the)g(B)566 1284 y Ft(+)591 1299
y Fv(-T)m(ree,)g(b)o(y)g(decreasing)18 1341 y(the)k(heigh)o(t)h(of)f
(the)g(tree.)-20 1420 y Fp(\017)19 b Fv(F)m(or)11 b(index)i(up)q(dates)
f(\(insertions)i(and)e(deletions\),)i(the)d(tec)o(h-)18
1461 y(nique)j(ac)o(hiev)o(es)h(a)f(sp)q(eedup)h(of)e(1.24)g(to)g(1.52)
h(o)o(v)o(er)g(the)f(B)882 1446 y Ft(+)908 1461 y Fv(-)18
1503 y(T)m(ree,)18 b(due)h(to)f(the)h(faster)f(searc)o(h)g(and)h(the)g
(less)g(frequen)o(t)18 1544 y(no)q(de)13 b(splits)i(with)f(wider)f(no)q
(des.)-20 1624 y Fp(\017)19 b Fv(F)m(or)9 b(index)j(scan,)f(the)f(tec)o
(hnique)i(ac)o(hiev)o(es)f(a)f(sp)q(eedup)i(of)d(3.5)18
1665 y(to)i(3.7)g(o)o(v)o(er)h(the)g(B)296 1649 y Ft(+)321
1665 y Fv(-T)m(ree,)f(again)i(due)f(to)g(the)f(faster)h(searc)o(h)18
1706 y(and)f(wider)g(no)q(des.)17 b(Moreo)o(v)o(er,)11
b(w)o(e)f(prop)q(osed)i Fu(jump-p)n(ointer)18 1748 y(arr)n(ays)p
Fv(,)j(whic)o(h)j(enable)g(e\013ectiv)o(e)g(range)f(scan)g(prefetc)o
(hing)18 1789 y(across)9 b(no)q(de)g(b)q(oundaries.)18
b(Ov)o(erall,)11 b(the)e(pB)676 1773 y Ft(+)702 1789
y Fv(-T)m(ree)f(ac)o(hiev)o(es)18 1831 y(a)16 b(sp)q(eedup)i(of)d
Fq(6.5)k(to)g(8.7)e Fv(o)o(v)o(er)f(the)h(B)639 1815
y Ft(+)664 1831 y Fv(-T)m(ree)f(for)g(range)18 1872 y(scans.)24
b(W)m(e)16 b(prop)q(osed)h(t)o(w)o(o)d(alternativ)o(e)k(implemen)o
(tations)18 1913 y(of)10 b(jump-p)q(oin)o(ter)j(arra)o(ys,)f(with)g
(comparable)h(p)q(erformance.)-38 1989 y(F)m(rom)d(our)h(results,)h(w)o
(e)f(conclude)h(that)f(the)g(cac)o(he)g(p)q(erformance)-76
2030 y(of)17 b(B)-1 2014 y Ft(+)25 2030 y Fv(-T)m(ree)g(indices)j(can)e
(b)q(e)f(greatly)i(impro)o(v)o(ed)g(b)o(y)f(exploiting)-76
2071 y(the)11 b(prefetc)o(hing)i(capabilities)h(of)d(state-of-the-art)f
(computer)i(sys-)-76 2113 y(tems.)24 b(W)m(e)15 b(b)q(eliev)o(e)i(that)
e(this)h(w)o(ork)f(mak)o(es)h(an)f(imp)q(ortan)o(t)i(con-)-76
2154 y(tribution)c(to)o(w)o(ards)f(applying)i(prefetc)o(hing)e(tec)o
(hniques)h(to)e(adv)n(an-)-76 2196 y(tage)i(throughout)i(a)e(DBMS.)239
2295 y Fq(Ac)o(kno)o(wledgemen)o(ts)-38 2336 y Fv(W)m(e)d(thank)g
(Berni)h(Sc)o(hiefer)g(at)f(IBM)g(for)f(his)i(man)o(y)g(helpful)g(com-)
-76 2378 y(men)o(ts)h(regarding)h(this)f(w)o(ork.)k(T)m(o)q(dd)11
b(C.)g(Mo)o(wry)g(is)h(partially)i(sup-)-76 2419 y(p)q(orted)g(b)o(y)g
(an)f(Alfred)h(P)m(.)e(Sloan)j(Researc)o(h)f(F)m(ello)o(wship)i(and)e
(b)o(y)f(a)-76 2460 y(F)m(acult)o(y)h(Dev)o(elopmen)o(t)h(Aw)o(ard)e
(from)g(IBM.)-76 2551 y Fw(7.)50 b(REFERENCES)-58 2618
y Fk([1])18 b(A.)12 b(Ailamaki,)d(D.)j(J.)g(DeWitt,)e(M.)i(D.)g(Hill,)f
(and)g(D.)g(A.)h(W)m(o)q(o)q(d.)-2 2653 y(DBMSs)f(on)g(a)h(Mo)q(dern)e
(Pro)q(cessor:)j(Where)e(Do)q(es)g(Time)g(Go?)k(In)-2
2689 y Fe(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)e(the)g(25th)g(VLDB)p
Fk(,)g(pages)d(266{277,)f(Sept.)h(1999.)1038 -34 y([2])18
b(L.)11 b(A.)h(Barroso,)e(K.)i(Gharac)o(horlo)q(o)o(,)d(and)h(E.)i(D.)f
(Bugnion.)1094 1 y(Memory)f(System)g(Characterizat)o(ion)e(of)j
(Commercial)1094 37 y(W)m(orkloads.)e(In)i Fe(Pr)n(o)n(c)n(e)n(e)n
(dings)16 b(of)c(the)i(25th)f(ISCA)p Fk(,)e(pages)f(3{14,)1094
72 y(June)g(1998.)1038 112 y([3])18 b(L.)11 b(A.)h(Barroso,)e(K.)i
(Gharac)o(horlo)q(o)o(,)d(A.)j(No)o(w)o(atzyk,)e(and)1094
147 y(B.)h(V)m(erghese.)f(Impact)g(of)h(Chip-Lev)o(el)f(In)o(tegration)
e(on)1094 183 y(P)o(erformance)g(of)j(OL)m(TP)i(W)m(orkloads.)c(In)j
Fe(Pr)n(o)n(c)n(e)n(e)n(dings)j(of)e(the)g(6th)1094 218
y(HPCA)p Fk(,)f(pages)e(3{14,)g(Jan.)h(2000.)1038 258
y([4])18 b(R.)11 b(Ba)o(y)o(er)g(and)f(K.)i(Un)o(terauer.)d(Pre\014x)i
(B-trees.)f Fe(A)o(CM)j(T)m(r)n(ans.)f(on)1094 293 y(Datab)n(ase)h
(Systems)p Fk(,)f(2\(1\):11{26)o(,)d(Marc)o(h)i(1977.)1038
333 y([5])18 b(M.)11 b(A.)h(Bender,)e(E.)i(D.)f(Demaine,)f(and)g(M.)i
(F)m(arac)o(h-Colton.)1094 369 y(Cac)o(he-Oblivious)c(B-T)m(rees.)j(In)
g Fe(Pr)n(o)n(c)n(e)n(e)n(ding)q(s)k(of)e(the)g(41st)g(IEEE)1094
404 y(F)o(OCS)p Fk(,)e(pages)g(399{409,)e(No)o(v.)i(2000.)1038
444 y([6])18 b(P)m(.)11 b(Bohannon,)e(P)m(.)j(McIlro)o(y)m(,)e(and)g
(R.)i(Rastogi.)e(Impro)o(ving)1094 479 y(Main-Memory)f(Index)h(P)o
(erformance)e(with)k(P)o(artial)e(Key)1094 515 y(Informatio)o(n.)e(In)k
Fe(Pr)n(o)n(c)n(e)n(e)n(dings)j(of)e(the)g(2001)h(SIGMOD)1094
550 y(Confer)n(enc)n(e)p Fk(,)f(Ma)o(y)e(2001.)1038 590
y([7])18 b(S.)10 b(Chen,)h(P)m(.)g(B.)g(Gibb)q(ons,)e(and)i(T.)g(C.)h
(Mo)o(wry)m(.)f(Impro)o(ving)d(Index)1094 625 y(P)o(erformance)g
(through)h(Prefetc)o(hing.)g(T)m(ec)o(hnical)h(Rep)q(ort)1094
661 y(CMU-CS-00-177,)g(Sc)o(ho)q(ol)g(of)h(Computer)f(Science,)f
(Carnegie)1094 696 y(Mellon)h(Univ)o(ersit)o(y)m(,)g(Dec.)h(2000.)1038
736 y([8])18 b(Z.)11 b(Cv)o(etano)o(vic)e(and)i(R.)g(E.)h(Kessler.)e(P)
o(erformance)f(Analysis)h(of)1094 771 y(the)g(Alpha)h(21264-Based)e
(Compaq)h(ES40)h(System.)e(In)1094 807 y Fe(Pr)n(o)n(c)n(e)n(e)n(dings)
15 b(of)e(the)g(27th)g(ISCA)p Fk(,)f(pages)e(192{202,)f(June)i(2000.)
1038 847 y([9])18 b(J.)11 b(Goldstein,)e(R.)j(Ramakrishna)o(n,)d(and)h
(U.)i(Shaft.)e(Compressing)1094 882 y(Relations)f(and)i(Indexes.)e(In)i
Fe(Pr)n(o)n(c)n(e)n(e)n(dings)16 b(of)d(the)g(14th)g(ICDE)p
Fk(,)1094 918 y(pages)d(370{379,)f(F)m(eb.)i(1998.)1020
957 y([10])18 b(K.)12 b(Keeton,)e(D.)h(A.)h(P)o(atterson,)e(Y.)i(Q.)g
(He,)f(R.)h(C.)g(Raphael,)d(and)1094 993 y(W.)i(E.)h(Bak)o(er.)e(P)o
(erformance)f(Characterizat)o(ion)f(of)j(a)h(Quad)1094
1028 y(P)o(en)o(tium)d(Pro)i(SMP)h(using)e(OL)m(TP)j(W)m(orkloads.)d
(In)h Fe(Pr)n(o)n(c)n(e)n(e)n(dings)1094 1064 y(of)i(the)g(25th)g(ISCA)
p Fk(,)e(pages)f(15{26,)g(June)h(1998.)1020 1103 y([11])18
b(T.)11 b(J.)g(Lehman)d(and)i(M.)h(J.)g(Carey)m(.)f(A)h(Study)e(of)h
(Index)f(Structures)1094 1139 y(for)i(Main)g(Memory)f(Database)f
(Managemen)o(t)g(Systems.)h(In)1094 1174 y Fe(Pr)n(o)n(c)n(e)n(e)n
(dings)15 b(of)e(the)g(12th)g(VLDB)p Fk(,)g(pages)d(294{303,)f(Aug.)i
(1986.)1020 1214 y([12])18 b(T.)12 b(J.)f(Lehman)f(and)h(M.)h(J.)f
(Carey)m(.)g(Query)g(Pro)q(cessing)e(in)i(Main)1094 1249
y(Memory)f(Database)f(Managemen)o(t)g(Systems.)g(In)j
Fe(Pr)n(o)n(c)n(e)n(e)n(dings)j(of)1094 1285 y(the)e(1986)g(SIGMOD)g
(Confer)n(enc)n(e)p Fk(,)g(pages)d(239{250,)f(Ma)o(y)j(1986.)1020
1325 y([13])18 b(C.-K.)12 b(Luk)f(and)f(T.)i(C.)g(Mo)o(wry)m(.)g
(Compiler-Based)c(Prefetc)o(hing)1094 1360 y(for)j(Recursiv)o(e)e(Data)
i(Structures.)d(In)j Fe(Pr)n(o)n(c)n(e)n(e)n(dings)16
b(of)d(the)g(7th)1094 1396 y(ASPLOS)p Fk(,)g(pages)d(222{233,)f(Oct.)i
(1996.)1020 1435 y([14])18 b(C.-K.)12 b(Luk)f(and)f(T.)i(C.)g(Mo)o(wry)
m(.)g(Automatic)d(Compiler-Inserte)o(d)1094 1471 y(Prefetc)o(hing)f
(for)j(P)o(oin)o(ter-Based)e(Applications.)g Fe(IEEE)1094
1506 y(T)m(r)n(ansactions)j(on)h(Computers)p Fk(,)f(48\(2\):134{1)o
(41,)c(F)m(eb.)j(1999.)1020 1546 y([15])18 b(S.)11 b(McF)m(arling.)f
(Com)o(bining)f(Branc)o(h)h(Predictors.)f(T)m(ec)o(hnical)1094
1581 y(Rep)q(ort)h(WRL)i(T)m(ec)o(hnical)e(Note)h(TN-36,)g(Digital)f
(Equipmen)o(t)1094 1617 y(Corp)q(oration,)e(June)j(1993.)1020
1656 y([16])18 b(T.)12 b(C.)g(Mo)o(wry)m(,)f(M.)h(S.)f(Lam,)g(and)f(A.)
i(Gupta.)e(Design)h(and)1094 1692 y(Ev)n(aluation)d(of)k(a)f(Compiler)f
(Algorithm)g(for)h(Prefetc)o(hing)o(.)e(In)1094 1727
y Fe(Pr)n(o)n(c)n(e)n(e)n(dings)15 b(of)e(the)g(5th)g(ASPLOS)p
Fk(,)g(pages)d(62{73,)g(Oct.)i(1992.)1020 1767 y([17])18
b(C.)12 b(Nyb)q(erg,)e(T.)i(Barcla)o(y)m(,)e(Z.)h(Cv)o(etano)o(vic,)e
(J.)j(Gra)o(y)m(,)e(and)1094 1803 y(D.)h(Lomet.)f(AlphaSort:)j(A)g
(RISC)e(Mac)o(hine)f(Sort.)h(In)1094 1838 y Fe(Pr)n(o)n(c)n(e)n(e)n
(dings)k(of)e(the)g(1994)h(SIGMOD)e(Confer)n(enc)n(e)p
Fk(,)h(pages)1094 1874 y(233{242,)c(Ma)o(y)i(1994.)1020
1913 y([18])18 b(P)m(.)11 b(Ranganathan,)d(K.)k(Gharac)o(horlo)q(o)o(,)
d(S.)i(V.)h(Adv)o(e,)f(and)f(L.)i(A.)1094 1949 y(Barroso.)e(P)o
(erformanc)o(e)f(of)i(Database)f(W)m(orkloads)f(on)1094
1984 y(Shared-Memo)o(ry)f(Systems)i(with)h(Out-of-Order)f(Pro)q
(cessors.)g(In)1094 2020 y Fe(Pr)n(o)n(c)n(e)n(e)n(dings)15
b(of)e(the)g(8th)g(ASPLOS)p Fk(,)g(pages)d(307{318,)f(Oct.)j(1998.)1020
2059 y([19])18 b(J.)11 b(Rao)g(and)g(K.)h(A.)g(Ross.)f(Cac)o(he)g
(Conscious)f(Indexing)f(for)1094 2095 y(Decision-Sup)o(p)q(o)o(rt)g(in)
i(Main)g(Memory.)f(In)h Fe(Pr)n(o)n(c)n(e)n(e)n(dings)k(of)e(the)1094
2130 y(25th)g(VLDB)p Fk(,)f(pages)e(78{89,)g(Sept.)g(1999.)1020
2170 y([20])18 b(J.)11 b(Rao)g(and)g(K.)h(A.)g(Ross.)f(Making)f(B)1617
2158 y Ft(+)1643 2170 y Fk(-T)m(rees)h(Cac)o(he)g(Conscious)1094
2205 y(in)g(Main)g(Memory.)f(In)h Fe(Pr)n(o)n(c)n(e)n(e)n(dings)k(of)e
(the)g(SIGMOD)g(2000)1094 2241 y(Confer)n(enc)n(e)p Fk(,)g(pages)d
(475{486,)f(Ma)o(y)j(2000.)1020 2281 y([21])18 b(A.)12
b(Shatdal,)d(C.)j(Kan)o(t,)f(and)f(J.)i(F.)g(Naugh)o(ton.)d(Cac)o(he)i
(Conscious)1094 2316 y(Algorithms)e(for)i(Relational)e(Query)i(Pro)q
(cessing.)e(In)i Fe(Pr)n(o)n(c)n(e)n(e)n(dings)1094 2352
y(of)i(the)g(20th)g(VLDB)p Fk(,)f(pages)f(510{521,)e(Sept.)h(1994.)1020
2391 y([22])18 b(A.)12 b(Silb)q(ersc)o(hat)o(z,)d(H.)j(F.)f(Korth,)g
(and)g(S.)g(Sudarshan.)d Fe(Datab)n(ase)1094 2427 y(System)13
b(Conc)n(epts)p Fk(.)f(McGra)o(w)f(Hill,)g(New)i(Y)m(ork,)e(New)h(Y)m
(ork,)f(3rd)1094 2462 y(edition,)e(1997.)1020 2502 y([23])18
b(K.)12 b(C.)g(Y)m(eager.)e(The)i(MIPS)f(R10000)f(Sup)q(erscalar)1094
2537 y(Micropro)q(cessor)o(.)f Fe(IEEE)k(Micr)n(o)p Fk(,)f
(16\(2\):28{40)o(,)d(April)i(1996.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
